<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.sf.okapi.steps</groupId>
    <artifactId>build-steps</artifactId>
    <version>1.42.0-SNAPSHOT</version>
  </parent>
  <artifactId>okapi-step-rainbowkit</artifactId>
  <name>Okapi Steps for Creating and Reading Rainbow T-Kits</name>
  <dependencies>
    <dependency>
      <groupId>net.sf.okapi</groupId>
      <artifactId>okapi-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-segmentation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-terminology-leveraging</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-rainbowkit</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-po</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-openxml</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-icml</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-xliff</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-xliff2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.lib</groupId>
      <artifactId>okapi-lib-merge</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.lib</groupId>
      <artifactId>okapi-lib-transifex</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-transifex</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.lib</groupId>
      <artifactId>okapi-lib-xliff2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-transtable</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- For test -->
    <dependency>
      <groupId>net.sf.okapi</groupId>
      <artifactId>okapi-core</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-xsltransform</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-xmlstream</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-properties</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-openoffice</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.xmlunit</groupId>
      <artifactId>xmlunit-legacy</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-its</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <!--
	 <repository>
      <id>okapi-xliff</id>
      <name>okapi-xliff-repository</name>
      <url>http://repository-okapi.forge.cloudbees.com/release/</url>
      <layout>default</layout>
     </repository>
	 -->
  </repositories>
</project>
