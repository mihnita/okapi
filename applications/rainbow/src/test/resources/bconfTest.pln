<?xml version="1.0" encoding="UTF-8"?>
<rainbowPipeline version="1"><step class="net.sf.okapi.steps.xsltransform.XSLTransformStep">#v1
xsltPath=copySourceToTarget.xslt
paramList=
useCustomTransformer.b=false
factoryClass=
xpathClass=
passOnOutput.b=true</step>
<step class="net.sf.okapi.steps.common.RawDocumentToFilterEventsStep"></step>
<step class="net.sf.okapi.steps.segmentation.SegmentationStep">#v1
segmentSource.b=true
segmentTarget.b=false
sourceSrxPath=SourceSRXRules.srx
targetSrxPath=TargetSRXRules.srx
copySource.b=true
checkSegments.b=false
trimSrcLeadingWS.i=-1
trimSrcTrailingWS.i=-1
trimTrgLeadingWS.i=-1
trimTrgTrailingWS.i=-1
forceSegmentedOutput.b=true
overwriteSegmentation.b=false
deepenSegmentation.b=false
renumberCodes.b=true</step>
<step class="net.sf.okapi.steps.rainbowkit.creation.ExtractionStep">#v1
writerClass=net.sf.okapi.steps.rainbowkit.xliff.XLIFFPackageWriter
writerOptions.placeholderMode.b=false
writerOptions.includeNoTranslate.b=true
writerOptions.setApprovedAsNoTranslate.b=false
writerOptions.copySource.b=true
writerOptions.includeAltTrans.b=true
writerOptions.includeCodeAttrs.b=true
writerOptions.includeIts.b=true
packageName=pack1
packageDirectory=${inputRootDir}
sendOutput.b=true
supportFiles=
message=
outputManifest.b=true
createZip.b=false</step>
</rainbowPipeline>
