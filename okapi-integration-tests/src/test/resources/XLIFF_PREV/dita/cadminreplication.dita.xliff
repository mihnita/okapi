<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cadminreplication.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Replicating databases</source>
<seg-source><mrk mid="0" mtype="seg">Replicating databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Replicating databases</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">Replication is an important feature of a robust database management system. In <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, you start database replication by using connection URL attributes.</source>
<seg-source><mrk mid="0" mtype="seg">Replication is an important feature of a robust database management system.</mrk><mrk mid="1" mtype="seg"> In <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, you start database replication by using connection URL attributes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Replication is an important feature of a robust database management system.</mrk><mrk mid="1" mtype="seg"> In <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, you start database replication by using connection URL attributes.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">replicating databases</source>
<seg-source><mrk mid="0" mtype="seg">replicating databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">replicating databases</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">database replication</source>
<seg-source><mrk mid="0" mtype="seg">database replication</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">database replication</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">The replication capability of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has the following features:</source>
<seg-source><mrk mid="0" mtype="seg">The replication capability of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has the following features:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The replication capability of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has the following features:</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>One master, one slave<ept id="1">&lt;/b&gt;</ept>: A replicated database resides in two locations and is managed by two different <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instances. One of these <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instances has the <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>master<ept id="4">&lt;/i&gt;</ept> role for this database, and the other has the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>slave<ept id="5">&lt;/i&gt;</ept> role. Typically, the master and slave run on different nodes, but this is not a requirement. Together, the master and its associated slave represent a <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>replication pair<ept id="6">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>One master, one slave<ept id="1">&lt;/b&gt;</ept>: A replicated database resides in two locations and is managed by two different <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instances.</mrk><mrk mid="1" mtype="seg"> One of these <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instances has the <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>master<ept id="4">&lt;/i&gt;</ept> role for this database, and the other has the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>slave<ept id="5">&lt;/i&gt;</ept> role.</mrk><mrk mid="2" mtype="seg"> Typically, the master and slave run on different nodes, but this is not a requirement.</mrk><mrk mid="3" mtype="seg"> Together, the master and its associated slave represent a <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>replication pair<ept id="6">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>One master, one slave<ept id="1">&lt;/b&gt;</ept>: A replicated database resides in two locations and is managed by two different <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instances.</mrk><mrk mid="1" mtype="seg"> One of these <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instances has the <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>master<ept id="4">&lt;/i&gt;</ept> role for this database, and the other has the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>slave<ept id="5">&lt;/i&gt;</ept> role.</mrk><mrk mid="2" mtype="seg"> Typically, the master and slave run on different nodes, but this is not a requirement.</mrk><mrk mid="3" mtype="seg"> Together, the master and its associated slave represent a <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>replication pair<ept id="6">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Roll-forward shipped log<ept id="1">&lt;/b&gt;</ept>: Replication is based on shipping the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> transaction log from the master to the slave, and then rolling forward the operations described in the log to the slave database.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Roll-forward shipped log<ept id="1">&lt;/b&gt;</ept>: Replication is based on shipping the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> transaction log from the master to the slave, and then rolling forward the operations described in the log to the slave database.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Roll-forward shipped log<ept id="1">&lt;/b&gt;</ept>: Replication is based on shipping the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> transaction log from the master to the slave, and then rolling forward the operations described in the log to the slave database.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asymmetry<ept id="1">&lt;/b&gt;</ept>: Only the master processes transactions. The slave processes no transactions, not even read operations.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asymmetry<ept id="1">&lt;/b&gt;</ept>: Only the master processes transactions.</mrk><mrk mid="1" mtype="seg"> The slave processes no transactions, not even read operations.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asymmetry<ept id="1">&lt;/b&gt;</ept>: Only the master processes transactions.</mrk><mrk mid="1" mtype="seg"> The slave processes no transactions, not even read operations.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asynchronicity<ept id="1">&lt;/b&gt;</ept>: Transactions are committed on the master without waiting for the slave. The shipping of the transaction log to the slave is performed regularly, and is completely decoupled from the transaction execution at the master. This may lead to a few lost transactions if the master crashes.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asynchronicity<ept id="1">&lt;/b&gt;</ept>: Transactions are committed on the master without waiting for the slave.</mrk><mrk mid="1" mtype="seg"> The shipping of the transaction log to the slave is performed regularly, and is completely decoupled from the transaction execution at the master.</mrk><mrk mid="2" mtype="seg"> This may lead to a few lost transactions if the master crashes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Asynchronicity<ept id="1">&lt;/b&gt;</ept>: Transactions are committed on the master without waiting for the slave.</mrk><mrk mid="1" mtype="seg"> The shipping of the transaction log to the slave is performed regularly, and is completely decoupled from the transaction execution at the master.</mrk><mrk mid="2" mtype="seg"> This may lead to a few lost transactions if the master crashes.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Shared nothing<ept id="1">&lt;/b&gt;</ept>: Apart from the network line, no hardware is assumed to be shared.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Shared nothing<ept id="1">&lt;/b&gt;</ept>: Apart from the network line, no hardware is assumed to be shared.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Shared nothing<ept id="1">&lt;/b&gt;</ept>: Apart from the network line, no hardware is assumed to be shared.</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Replication granularity<ept id="1">&lt;/b&gt;</ept>: The granularity for replication is exactly one database. However, one <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instance may have different roles for different databases. For example, one <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instance may have the following roles, all at the same time:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Replication granularity<ept id="1">&lt;/b&gt;</ept>: The granularity for replication is exactly one database.</mrk><mrk mid="1" mtype="seg"> However, one <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instance may have different roles for different databases.</mrk><mrk mid="2" mtype="seg"> For example, one <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instance may have the following roles, all at the same time:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Replication granularity<ept id="1">&lt;/b&gt;</ept>: The granularity for replication is exactly one database.</mrk><mrk mid="1" mtype="seg"> However, one <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> instance may have different roles for different databases.</mrk><mrk mid="2" mtype="seg"> For example, one <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> instance may have the following roles, all at the same time:</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">The master role for one database D1 replicated to one node</source>
<seg-source><mrk mid="0" mtype="seg">The master role for one database D1 replicated to one node</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The master role for one database D1 replicated to one node</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">The slave role for a database D2 replicated from another node</source>
<seg-source><mrk mid="0" mtype="seg">The slave role for a database D2 replicated from another node</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The slave role for a database D2 replicated from another node</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">The normal, non-replicated, role for a database D3</source>
<seg-source><mrk mid="0" mtype="seg">The normal, non-replicated, role for a database D3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The normal, non-replicated, role for a database D3</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">Replication builds on <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s ability to recover from a crash by starting with a backup and rolling forward <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>'s transaction log files. The master sends log records to the slave using a network connection. The slave then writes these log records to its local log and redoes them.</source>
<seg-source><mrk mid="0" mtype="seg">Replication builds on <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s ability to recover from a crash by starting with a backup and rolling forward <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>'s transaction log files.</mrk><mrk mid="1" mtype="seg"> The master sends log records to the slave using a network connection.</mrk><mrk mid="2" mtype="seg"> The slave then writes these log records to its local log and redoes them.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Replication builds on <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s ability to recover from a crash by starting with a backup and rolling forward <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>'s transaction log files.</mrk><mrk mid="1" mtype="seg"> The master sends log records to the slave using a network connection.</mrk><mrk mid="2" mtype="seg"> The slave then writes these log records to its local log and redoes them.</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">If the master fails, the slave completes the recovery by redoing the log that has not already been processed. The state of the slave after this recovery is close to the state the master had when it crashed. However, some of the last transactions performed on the master may not have been sent to the slave and may therefore not be reflected. When the slave has completed the recovery work, it is transformed into a normal <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> instance that is ready to process transactions. For more details, see <bpt id="2" ctype="x-xref">&lt;xref href="cadminreplicfailover.dita#cadminreplicfailover"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> and <bpt id="3" ctype="x-xref">&lt;xref href="cadminreplicsecurity.dita#cadminreplicsecurity"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">If the master fails, the slave completes the recovery by redoing the log that has not already been processed.</mrk><mrk mid="1" mtype="seg"> The state of the slave after this recovery is close to the state the master had when it crashed.</mrk><mrk mid="2" mtype="seg"> However, some of the last transactions performed on the master may not have been sent to the slave and may therefore not be reflected.</mrk><mrk mid="3" mtype="seg"> When the slave has completed the recovery work, it is transformed into a normal <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> instance that is ready to process transactions.</mrk><mrk mid="4" mtype="seg"> For more details, see <bpt id="2" ctype="x-xref">&lt;xref href="cadminreplicfailover.dita#cadminreplicfailover"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> and <bpt id="3" ctype="x-xref">&lt;xref href="cadminreplicsecurity.dita#cadminreplicsecurity"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the master fails, the slave completes the recovery by redoing the log that has not already been processed.</mrk><mrk mid="1" mtype="seg"> The state of the slave after this recovery is close to the state the master had when it crashed.</mrk><mrk mid="2" mtype="seg"> However, some of the last transactions performed on the master may not have been sent to the slave and may therefore not be reflected.</mrk><mrk mid="3" mtype="seg"> When the slave has completed the recovery work, it is transformed into a normal <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> instance that is ready to process transactions.</mrk><mrk mid="4" mtype="seg"> For more details, see <bpt id="2" ctype="x-xref">&lt;xref href="cadminreplicfailover.dita#cadminreplicfailover"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> and <bpt id="3" ctype="x-xref">&lt;xref href="cadminreplicsecurity.dita#cadminreplicsecurity"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Several <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> properties allow you to specify the size of the replication log buffers and the intervals between log shipments, as well as whether replication messages are logged. See the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> for details.</source>
<seg-source><mrk mid="0" mtype="seg">Several <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> properties allow you to specify the size of the replication log buffers and the intervals between log shipments, as well as whether replication messages are logged.</mrk><mrk mid="1" mtype="seg"> See the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> for details.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Several <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> properties allow you to specify the size of the replication log buffers and the intervals between log shipments, as well as whether replication messages are logged.</mrk><mrk mid="1" mtype="seg"> See the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> for details.</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">You can perform replication on a database that runs in either embedded mode or Network Server mode.</source>
<seg-source><mrk mid="0" mtype="seg">You can perform replication on a database that runs in either embedded mode or Network Server mode.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can perform replication on a database that runs in either embedded mode or Network Server mode.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
