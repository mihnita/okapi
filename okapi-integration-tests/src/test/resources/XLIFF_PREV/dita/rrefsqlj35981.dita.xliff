<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj35981.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">DELETE statement</source>
<seg-source><mrk mid="0" mtype="seg">DELETE statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DELETE statement</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">DELETE statement</source>
<seg-source><mrk mid="0" mtype="seg">DELETE statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DELETE statement</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Read-write VTIs</source>
<seg-source><mrk mid="0" mtype="seg">Read-write VTIs</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Read-write VTIs</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">and DELETES</source>
<seg-source><mrk mid="0" mtype="seg">and DELETES</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">and DELETES</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ DELETE FROM <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ [ AS ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcorrelationname.dita#rrefcorrelationname"&gt;</bpt>correlationName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqlj33602.dita#rrefsqlj33602"&gt;</bpt>WHERE clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] | DELETE FROM <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
href="rrefsqlj15309.dita#rrefsqlj15309"&gt;</bpt>WHERE CURRENT OF clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> }<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ DELETE FROM <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ [ AS ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcorrelationname.dita#rrefcorrelationname"&gt;</bpt>correlationName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqlj33602.dita#rrefsqlj33602"&gt;</bpt>WHERE clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] | DELETE FROM <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
href="rrefsqlj15309.dita#rrefsqlj15309"&gt;</bpt>WHERE CURRENT OF clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> }<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ DELETE FROM <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ [ AS ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcorrelationname.dita#rrefcorrelationname"&gt;</bpt>correlationName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqlj33602.dita#rrefsqlj33602"&gt;</bpt>WHERE clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] | DELETE FROM <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
href="rrefsqlj15309.dita#rrefsqlj15309"&gt;</bpt>WHERE CURRENT OF clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> }<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">The first syntactical form, called a searched delete, removes all rows identified by the table name and WHERE clause.</source>
<seg-source><mrk mid="0" mtype="seg">The first syntactical form, called a searched delete, removes all rows identified by the table name and WHERE clause.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The first syntactical form, called a searched delete, removes all rows identified by the table name and WHERE clause.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">The second syntactical form, called a positioned delete, deletes the current row of an open, updatable cursor. For more information about updatable cursors, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj41360.dita#rrefsqlj41360"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">The second syntactical form, called a positioned delete, deletes the current row of an open, updatable cursor.</mrk><mrk mid="1" mtype="seg"> For more information about updatable cursors, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj41360.dita#rrefsqlj41360"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The second syntactical form, called a positioned delete, deletes the current row of an open, updatable cursor.</mrk><mrk mid="1" mtype="seg"> For more information about updatable cursors, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj41360.dita#rrefsqlj41360"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM SAMP.IN_TRAY stmt.executeUpdate("DELETE FROM SAMP.IN_TRAY WHERE CURRENT OF " + resultSet.getCursorName());<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM SAMP.IN_TRAY stmt.executeUpdate("DELETE FROM SAMP.IN_TRAY WHERE CURRENT OF " + resultSet.getCursorName());<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM SAMP.IN_TRAY stmt.executeUpdate("DELETE FROM SAMP.IN_TRAY WHERE CURRENT OF " + resultSet.getCursorName());<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Statement dependency system</source>
<seg-source><mrk mid="0" mtype="seg">Statement dependency system</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Statement dependency system</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">A searched delete statement depends on the table being updated, all of its conglomerates (units of storage such as heaps or indexes), and any other table named in the WHERE clause. A CREATE or DROP INDEX statement for the target table of a prepared searched delete statement invalidates the prepared searched delete statement.</source>
<seg-source><mrk mid="0" mtype="seg">A searched delete statement depends on the table being updated, all of its conglomerates (units of storage such as heaps or indexes), and any other table named in the WHERE clause.</mrk><mrk mid="1" mtype="seg"> A CREATE or DROP INDEX statement for the target table of a prepared searched delete statement invalidates the prepared searched delete statement.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A searched delete statement depends on the table being updated, all of its conglomerates (units of storage such as heaps or indexes), and any other table named in the WHERE clause.</mrk><mrk mid="1" mtype="seg"> A CREATE or DROP INDEX statement for the target table of a prepared searched delete statement invalidates the prepared searched delete statement.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">The positioned delete statement depends on the cursor and any tables the cursor references. You can compile a positioned delete even if the cursor has not been opened yet. However, removing the open cursor with the JDBC <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>close<ept id="1">&lt;/i&gt;</ept> method invalidates the positioned delete.</source>
<seg-source><mrk mid="0" mtype="seg">The positioned delete statement depends on the cursor and any tables the cursor references.</mrk><mrk mid="1" mtype="seg"> You can compile a positioned delete even if the cursor has not been opened yet.</mrk><mrk mid="2" mtype="seg"> However, removing the open cursor with the JDBC <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>close<ept id="1">&lt;/i&gt;</ept> method invalidates the positioned delete.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The positioned delete statement depends on the cursor and any tables the cursor references.</mrk><mrk mid="1" mtype="seg"> You can compile a positioned delete even if the cursor has not been opened yet.</mrk><mrk mid="2" mtype="seg"> However, removing the open cursor with the JDBC <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>close<ept id="1">&lt;/i&gt;</ept> method invalidates the positioned delete.</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">A CREATE or DROP INDEX statement for the target table of a prepared positioned delete invalidates the prepared positioned delete statement.</source>
<seg-source><mrk mid="0" mtype="seg">A CREATE or DROP INDEX statement for the target table of a prepared positioned delete invalidates the prepared positioned delete statement.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A CREATE or DROP INDEX statement for the target table of a prepared positioned delete invalidates the prepared positioned delete statement.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
