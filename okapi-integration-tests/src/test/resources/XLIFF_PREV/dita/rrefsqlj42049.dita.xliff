<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj42049.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">LCASE or LOWER function</source>
<seg-source><mrk mid="0" mtype="seg">LCASE or LOWER function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">LCASE or LOWER function</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">The LCASE or LOWER function takes a character expression as a parameter and returns a string in which all alphabetical characters have been converted to lowercase.</source>
<seg-source><mrk mid="0" mtype="seg">The LCASE or LOWER function takes a character expression as a parameter and returns a string in which all alphabetical characters have been converted to lowercase.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The LCASE or LOWER function takes a character expression as a parameter and returns a string in which all alphabetical characters have been converted to lowercase.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">LCASE or LOWER function</source>
<seg-source><mrk mid="0" mtype="seg">LCASE or LOWER function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">LCASE or LOWER function</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LCASE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LCASE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LCASE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LOWER ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LOWER ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>LOWER ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> is a CHAR, VARCHAR, or LONG VARCHAR data type or any built-in type that is implicitly converted to a string (except a bit expression).</source>
<seg-source><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> is a CHAR, VARCHAR, or LONG VARCHAR data type or any built-in type that is implicitly converted to a string (except a bit expression).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> is a CHAR, VARCHAR, or LONG VARCHAR data type or any built-in type that is implicitly converted to a string (except a bit expression).</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">If the parameter type is CHAR or LONG VARCHAR, the return type is CHAR or LONG VARCHAR. Otherwise, the return type is VARCHAR.</source>
<seg-source><mrk mid="0" mtype="seg">If the parameter type is CHAR or LONG VARCHAR, the return type is CHAR or LONG VARCHAR.</mrk><mrk mid="1" mtype="seg"> Otherwise, the return type is VARCHAR.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the parameter type is CHAR or LONG VARCHAR, the return type is CHAR or LONG VARCHAR.</mrk><mrk mid="1" mtype="seg"> Otherwise, the return type is VARCHAR.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">The length and maximum length of the returned value are the same as the length and maximum length of the parameter.</source>
<seg-source><mrk mid="0" mtype="seg">The length and maximum length of the returned value are the same as the length and maximum length of the parameter.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The length and maximum length of the returned value are the same as the length and maximum length of the parameter.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">If the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> evaluates to null, this function returns null.</source>
<seg-source><mrk mid="0" mtype="seg">If the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> evaluates to null, this function returns null.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept> evaluates to null, this function returns null.</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'asd1#w'<ept id="2">&lt;/ph&gt;</ept> VALUES LOWER('aSD1#w') SELECT LOWER(flight_id) FROM Flights<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'asd1#w'<ept id="2">&lt;/ph&gt;</ept> VALUES LOWER('aSD1#w') SELECT LOWER(flight_id) FROM Flights<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'asd1#w'<ept id="2">&lt;/ph&gt;</ept> VALUES LOWER('aSD1#w') SELECT LOWER(flight_id) FROM Flights<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
