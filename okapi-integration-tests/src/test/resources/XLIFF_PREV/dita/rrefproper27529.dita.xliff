<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefproper27529.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">derby.storage.initialPages</source>
<seg-source><mrk mid="0" mtype="seg">derby.storage.initialPages</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.storage.initialPages</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">derby.storage.initialPages</source>
<seg-source><mrk mid="0" mtype="seg">derby.storage.initialPages</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.storage.initialPages</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Database pages</source>
<seg-source><mrk mid="0" mtype="seg">Database pages</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Database pages</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">preallocating</source>
<seg-source><mrk mid="0" mtype="seg">preallocating</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">preallocating</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Function</source>
<seg-source><mrk mid="0" mtype="seg">Function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Function</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">The on-disk size of a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table grows by one page at a time until eight pages of user data (or nine pages of total disk use; one is used for overhead) have been allocated. Then it will grow by eight pages at a time if possible.</source>
<seg-source><mrk mid="0" mtype="seg">The on-disk size of a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table grows by one page at a time until eight pages of user data (or nine pages of total disk use; one is used for overhead) have been allocated.</mrk><mrk mid="1" mtype="seg"> Then it will grow by eight pages at a time if possible.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The on-disk size of a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table grows by one page at a time until eight pages of user data (or nine pages of total disk use; one is used for overhead) have been allocated.</mrk><mrk mid="1" mtype="seg"> Then it will grow by eight pages at a time if possible.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">A <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table or index can be created with a number of pages already pre-allocated. To do so, specify the property prior to the CREATE TABLE or CREATE INDEX statement.</source>
<seg-source><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table or index can be created with a number of pages already pre-allocated.</mrk><mrk mid="1" mtype="seg"> To do so, specify the property prior to the CREATE TABLE or CREATE INDEX statement.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> table or index can be created with a number of pages already pre-allocated.</mrk><mrk mid="1" mtype="seg"> To do so, specify the property prior to the CREATE TABLE or CREATE INDEX statement.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Define the number of user pages the table or index is to be created with. The purpose of this property is to preallocate a table or index of reasonable size if the user expects that a large amount of data will be inserted into the table or index. A table or index that has the pre-allocated pages will enjoy a small performance improvement over a table or index that has no pre-allocated pages when the data are loaded.</source>
<seg-source><mrk mid="0" mtype="seg">Define the number of user pages the table or index is to be created with.</mrk><mrk mid="1" mtype="seg"> The purpose of this property is to preallocate a table or index of reasonable size if the user expects that a large amount of data will be inserted into the table or index.</mrk><mrk mid="2" mtype="seg"> A table or index that has the pre-allocated pages will enjoy a small performance improvement over a table or index that has no pre-allocated pages when the data are loaded.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Define the number of user pages the table or index is to be created with.</mrk><mrk mid="1" mtype="seg"> The purpose of this property is to preallocate a table or index of reasonable size if the user expects that a large amount of data will be inserted into the table or index.</mrk><mrk mid="2" mtype="seg"> A table or index that has the pre-allocated pages will enjoy a small performance improvement over a table or index that has no pre-allocated pages when the data are loaded.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">The total desired size of the table or index should be the following number of bytes:</source>
<seg-source><mrk mid="0" mtype="seg">The total desired size of the table or index should be the following number of bytes:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The total desired size of the table or index should be the following number of bytes:</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>(1 + derby.storage.initialPages) * derby.storage.pageSize<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>(1 + derby.storage.initialPages) * derby.storage.pageSize<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>(1 + derby.storage.initialPages) * derby.storage.pageSize<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">When you create a table or an index after setting this property, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to preallocate the requested number of user pages. However, the operations do not fail even if they are unable to preallocate the requested number of pages, as long as they allocate at least one page.</source>
<seg-source><mrk mid="0" mtype="seg">When you create a table or an index after setting this property, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to preallocate the requested number of user pages.</mrk><mrk mid="1" mtype="seg"> However, the operations do not fail even if they are unable to preallocate the requested number of pages, as long as they allocate at least one page.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you create a table or an index after setting this property, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to preallocate the requested number of user pages.</mrk><mrk mid="1" mtype="seg"> However, the operations do not fail even if they are unable to preallocate the requested number of pages, as long as they allocate at least one page.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">Default</source>
<seg-source><mrk mid="0" mtype="seg">Default</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Default</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">1 page.</source>
<seg-source><mrk mid="0" mtype="seg">1 page.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1 page.</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">Minimum value</source>
<seg-source><mrk mid="0" mtype="seg">Minimum value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Minimum value</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">The minimum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1.</source>
<seg-source><mrk mid="0" mtype="seg">The minimum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The minimum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1.</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">Maximum value</source>
<seg-source><mrk mid="0" mtype="seg">Maximum value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Maximum value</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">The maximum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1000.</source>
<seg-source><mrk mid="0" mtype="seg">The maximum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1000.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The maximum number of <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>initialPages<ept id="1">&lt;/i&gt;</ept> is 1000.</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- system-wide property derby.storage.initialPages=30 -- database-wide property CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY( 'derby.storage.initialPages', '30') <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- system-wide property derby.storage.initialPages=30 -- database-wide property CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY( 'derby.storage.initialPages', '30') <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- system-wide property derby.storage.initialPages=30 -- database-wide property CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY( 'derby.storage.initialPages', '30') <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">Dynamic or static</source>
<seg-source><mrk mid="0" mtype="seg">Dynamic or static</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dynamic or static</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</source>
<seg-source><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
