<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj24513.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">CREATE TABLE statement</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TABLE statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TABLE statement</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">CREATE TABLE statement</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TABLE statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TABLE statement</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">SQL statements</source>
<seg-source><mrk mid="0" mtype="seg">SQL statements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL statements</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">CREATE TABLE</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TABLE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TABLE</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">tables</source>
<seg-source><mrk mid="0" mtype="seg">tables</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">tables</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">creating</source>
<seg-source><mrk mid="0" mtype="seg">creating</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">creating</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">A CREATE TABLE statement creates a table. Tables contain columns and constraints, rules to which data must conform. Table-level constraints specify a column or columns. Columns have a data type and can specify column constraints (column-level constraints).</source>
<seg-source><mrk mid="0" mtype="seg">A CREATE TABLE statement creates a table.</mrk><mrk mid="1" mtype="seg"> Tables contain columns and constraints, rules to which data must conform.</mrk><mrk mid="2" mtype="seg"> Table-level constraints specify a column or columns.</mrk><mrk mid="3" mtype="seg"> Columns have a data type and can specify column constraints (column-level constraints).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A CREATE TABLE statement creates a table.</mrk><mrk mid="1" mtype="seg"> Tables contain columns and constraints, rules to which data must conform.</mrk><mrk mid="2" mtype="seg"> Table-level constraints specify a column or columns.</mrk><mrk mid="3" mtype="seg"> Columns have a data type and can specify column constraints (column-level constraints).</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">The table owner and the <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> automatically gain the following privileges on the table and are able to grant these privileges to other users:</source>
<seg-source><mrk mid="0" mtype="seg">The table owner and the <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> automatically gain the following privileges on the table and are able to grant these privileges to other users:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The table owner and the <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> automatically gain the following privileges on the table and are able to grant these privileges to other users:</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">INSERT</source>
<seg-source><mrk mid="0" mtype="seg">INSERT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">INSERT</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">SELECT</source>
<seg-source><mrk mid="0" mtype="seg">SELECT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SELECT</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">REFERENCES</source>
<seg-source><mrk mid="0" mtype="seg">REFERENCES</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">REFERENCES</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">TRIGGER</source>
<seg-source><mrk mid="0" mtype="seg">TRIGGER</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TRIGGER</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">UPDATE</source>
<seg-source><mrk mid="0" mtype="seg">UPDATE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UPDATE</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">These privileges cannot be revoked from the table and database owners.</source>
<seg-source><mrk mid="0" mtype="seg">These privileges cannot be revoked from the table and database owners.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">These privileges cannot be revoked from the table and database owners.</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">For information about constraints, see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">For information about constraints, see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For information about constraints, see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">You can specify a default value for a column. A default value is the value to be inserted into a column if no other value is specified. If not explicitly specified, the default value of a column is NULL. See <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540/sqlj64478"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">You can specify a default value for a column.</mrk><mrk mid="1" mtype="seg"> A default value is the value to be inserted into a column if no other value is specified.</mrk><mrk mid="2" mtype="seg"> If not explicitly specified, the default value of a column is NULL.</mrk><mrk mid="3" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540/sqlj64478"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can specify a default value for a column.</mrk><mrk mid="1" mtype="seg"> A default value is the value to be inserted into a column if no other value is specified.</mrk><mrk mid="2" mtype="seg"> If not explicitly specified, the default value of a column is NULL.</mrk><mrk mid="3" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540/sqlj64478"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">You can specify storage properties such as page size for a table by calling the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY<ept id="1">&lt;/codeph&gt;</ept> system procedure.</source>
<seg-source><mrk mid="0" mtype="seg">You can specify storage properties such as page size for a table by calling the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY<ept id="1">&lt;/codeph&gt;</ept> system procedure.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can specify storage properties such as page size for a table by calling the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY<ept id="1">&lt;/codeph&gt;</ept> system procedure.</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">If a qualified table name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">If a qualified table name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If a qualified table name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">There are two different variants of the CREATE TABLE statement, depending on whether you are specifying the column definitions and constraints, or whether you are modeling the columns after the results of a query expression:</source>
<seg-source><mrk mid="0" mtype="seg">There are two different variants of the CREATE TABLE statement, depending on whether you are specifying the column definitions and constraints, or whether you are modeling the columns after the results of a query expression:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">There are two different variants of the CREATE TABLE statement, depending on whether you are specifying the column definitions and constraints, or whether you are modeling the columns after the results of a query expression:</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { ( { <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> | <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> } [ , { <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> | <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
              href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> } ] * ) | [ ( <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> [ , <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept> ] * ) ] AS <bpt id="16" ctype="x-i">&lt;i&gt;</bpt>queryExpression<ept id="16">&lt;/i&gt;</ept> WITH NO DATA }<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { ( { <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> | <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> } [ , { <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> | <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
              href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> } ] * ) | [ ( <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> [ , <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept> ] * ) ] AS <bpt id="16" ctype="x-i">&lt;i&gt;</bpt>queryExpression<ept id="16">&lt;/i&gt;</ept> WITH NO DATA }<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { ( { <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> | <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> } [ , { <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj30540.dita#rrefsqlj30540"&gt;</bpt>columnDefinition<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> | <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref
              href="rrefsqlj42154.dita#rrefsqlj42154"&gt;</bpt>tableLevelConstraint<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> } ] * ) | [ ( <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> [ , <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref
href="rrefsimplecolumnname.dita#rrefsimplecolumnname"&gt;</bpt>simpleColumnName<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept> ] * ) ] AS <bpt id="16" ctype="x-i">&lt;i&gt;</bpt>queryExpression<ept id="16">&lt;/i&gt;</ept> WITH NO DATA }<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it>CREATE TABLE HOTELAVAILABILITY (HOTEL_ID INT NOT NULL, BOOKING_DATE DATE NOT NULL, ROOMS_TAKEN INT DEFAULT 0, PRIMARY KEY (HOTEL_ID, BOOKING_DATE)); <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- the table-level primary key definition allows you to -- include two columns in the primary key definition<ept id="2">&lt;/ph&gt;</ept> PRIMARY KEY (hotel_id, booking_date)) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to an INTEGER -- column, and also define a primary key constraint -- on the column<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE PEOPLE (PERSON_ID INT NOT NULL GENERATED ALWAYS AS IDENTITY CONSTRAINT PEOPLE_PK PRIMARY KEY, PERSON VARCHAR(26)); <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to a SMALLINT -- column with an initial value of 5 and an increment value -- of 5.<ept id="4">&lt;/ph&gt;</ept> CREATE TABLE GROUPS (GROUP_ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 5, INCREMENT BY 5), ADDRESS VARCHAR(100), PHONE VARCHAR(15));<it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it>CREATE TABLE HOTELAVAILABILITY (HOTEL_ID INT NOT NULL, BOOKING_DATE DATE NOT NULL, ROOMS_TAKEN INT DEFAULT 0, PRIMARY KEY (HOTEL_ID, BOOKING_DATE)); <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- the table-level primary key definition allows you to -- include two columns in the primary key definition<ept id="2">&lt;/ph&gt;</ept> PRIMARY KEY (hotel_id, booking_date)) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to an INTEGER -- column, and also define a primary key constraint -- on the column<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE PEOPLE (PERSON_ID INT NOT NULL GENERATED ALWAYS AS IDENTITY CONSTRAINT PEOPLE_PK PRIMARY KEY, PERSON VARCHAR(26)); <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to a SMALLINT -- column with an initial value of 5 and an increment value -- of 5.<ept id="4">&lt;/ph&gt;</ept></mrk><mrk mid="1" mtype="seg"> CREATE TABLE GROUPS (GROUP_ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 5, INCREMENT BY 5), ADDRESS VARCHAR(100), PHONE VARCHAR(15));<it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it>CREATE TABLE HOTELAVAILABILITY (HOTEL_ID INT NOT NULL, BOOKING_DATE DATE NOT NULL, ROOMS_TAKEN INT DEFAULT 0, PRIMARY KEY (HOTEL_ID, BOOKING_DATE)); <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- the table-level primary key definition allows you to -- include two columns in the primary key definition<ept id="2">&lt;/ph&gt;</ept> PRIMARY KEY (hotel_id, booking_date)) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to an INTEGER -- column, and also define a primary key constraint -- on the column<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE PEOPLE (PERSON_ID INT NOT NULL GENERATED ALWAYS AS IDENTITY CONSTRAINT PEOPLE_PK PRIMARY KEY, PERSON VARCHAR(26)); <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- assign an identity column attribute to a SMALLINT -- column with an initial value of 5 and an increment value -- of 5.<ept id="4">&lt;/ph&gt;</ept></mrk><mrk mid="1" mtype="seg"> CREATE TABLE GROUPS (GROUP_ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 5, INCREMENT BY 5), ADDRESS VARCHAR(100), PHONE VARCHAR(15));<it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">For more examples of CREATE TABLE statements using the various constraints, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">For more examples of CREATE TABLE statements using the various constraints, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For more examples of CREATE TABLE statements using the various constraints, see <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj13590.dita#rrefsqlj13590"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">CREATE TABLE ... AS ...</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TABLE ...</mrk><mrk mid="1" mtype="seg"> AS ...</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TABLE ...</mrk><mrk mid="1" mtype="seg"> AS ...</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">With the alternate form of the CREATE TABLE statement, the column names and/or the column data types can be specified by providing a query. The columns in the query result are used as a model for creating the columns in the new table.</source>
<seg-source><mrk mid="0" mtype="seg">With the alternate form of the CREATE TABLE statement, the column names and/or the column data types can be specified by providing a query.</mrk><mrk mid="1" mtype="seg"> The columns in the query result are used as a model for creating the columns in the new table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">With the alternate form of the CREATE TABLE statement, the column names and/or the column data types can be specified by providing a query.</mrk><mrk mid="1" mtype="seg"> The columns in the query result are used as a model for creating the columns in the new table.</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">If no column names are specified for the new table, then all the columns in the result of the query expression are used to create same-named columns in the new table, of the corresponding data type(s). If one or more column names are specified for the new table, then the same number of columns must be present in the result of the query expression; the data types of those columns are used for the corresponding columns of the new table.</source>
<seg-source><mrk mid="0" mtype="seg">If no column names are specified for the new table, then all the columns in the result of the query expression are used to create same-named columns in the new table, of the corresponding data type(s).</mrk><mrk mid="1" mtype="seg"> If one or more column names are specified for the new table, then the same number of columns must be present in the result of the query expression; the data types of those columns are used for the corresponding columns of the new table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If no column names are specified for the new table, then all the columns in the result of the query expression are used to create same-named columns in the new table, of the corresponding data type(s).</mrk><mrk mid="1" mtype="seg"> If one or more column names are specified for the new table, then the same number of columns must be present in the result of the query expression; the data types of those columns are used for the corresponding columns of the new table.</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">The WITH NO DATA clause specifies that the data rows which result from evaluating the query expression are not used; only the names and data types of the columns in the query result are used. The WITH NO DATA clause <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>must<ept id="1">&lt;/b&gt;</ept> be specified; in a future release, Derby may be modified to allow the WITH DATA clause to be provided, which would indicate that the results of the query expression should be inserted into the newly-created table. In the current release, however, only the WITH NO DATA form of the statement is accepted.</source>
<seg-source><mrk mid="0" mtype="seg">The WITH NO DATA clause specifies that the data rows which result from evaluating the query expression are not used; only the names and data types of the columns in the query result are used.</mrk><mrk mid="1" mtype="seg"> The WITH NO DATA clause <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>must<ept id="1">&lt;/b&gt;</ept> be specified; in a future release, Derby may be modified to allow the WITH DATA clause to be provided, which would indicate that the results of the query expression should be inserted into the newly-created table.</mrk><mrk mid="2" mtype="seg"> In the current release, however, only the WITH NO DATA form of the statement is accepted.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The WITH NO DATA clause specifies that the data rows which result from evaluating the query expression are not used; only the names and data types of the columns in the query result are used.</mrk><mrk mid="1" mtype="seg"> The WITH NO DATA clause <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>must<ept id="1">&lt;/b&gt;</ept> be specified; in a future release, Derby may be modified to allow the WITH DATA clause to be provided, which would indicate that the results of the query expression should be inserted into the newly-created table.</mrk><mrk mid="2" mtype="seg"> In the current release, however, only the WITH NO DATA form of the statement is accepted.</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table using all the columns and data types -- from an existing table:<ept id="2">&lt;/ph&gt;</ept> CREATE TABLE T3 AS SELECT * FROM T1 WITH NO DATA; <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, but -- using the data types from the columns of an existing table:<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C,D,E) AS SELECT * FROM T1 WITH NO DATA; <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, -- using the data types from the indicated columns of an existing table:<ept id="4">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C) AS SELECT V,DP,I FROM T1 WITH NO DATA; <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- This example shows that the columns in the result of the -- query expression may be unnamed expressions, but their data -- types can still be used to provide the data types for the -- corresponding named columns in the newly-created table:<ept id="5">&lt;/ph&gt;</ept> CREATE TABLE T3 (X,Y) AS SELECT 2*I,2.0*F FROM T1 WITH NO DATA; <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table using all the columns and data types -- from an existing table:<ept id="2">&lt;/ph&gt;</ept> CREATE TABLE T3 AS SELECT * FROM T1 WITH NO DATA; <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, but -- using the data types from the columns of an existing table:<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C,D,E) AS SELECT * FROM T1 WITH NO DATA; <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, -- using the data types from the indicated columns of an existing table:<ept id="4">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C) AS SELECT V,DP,I FROM T1 WITH NO DATA; <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- This example shows that the columns in the result of the -- query expression may be unnamed expressions, but their data -- types can still be used to provide the data types for the -- corresponding named columns in the newly-created table:<ept id="5">&lt;/ph&gt;</ept> CREATE TABLE T3 (X,Y) AS SELECT 2*I,2.0*F FROM T1 WITH NO DATA; <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> <bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table using all the columns and data types -- from an existing table:<ept id="2">&lt;/ph&gt;</ept> CREATE TABLE T3 AS SELECT * FROM T1 WITH NO DATA; <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, but -- using the data types from the columns of an existing table:<ept id="3">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C,D,E) AS SELECT * FROM T1 WITH NO DATA; <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- create a new table, providing new names for the columns, -- using the data types from the indicated columns of an existing table:<ept id="4">&lt;/ph&gt;</ept> CREATE TABLE T3 (A,B,C) AS SELECT V,DP,I FROM T1 WITH NO DATA; <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- This example shows that the columns in the result of the -- query expression may be unnamed expressions, but their data -- types can still be used to provide the data types for the -- corresponding named columns in the newly-created table:<ept id="5">&lt;/ph&gt;</ept> CREATE TABLE T3 (X,Y) AS SELECT 2*I,2.0*F FROM T1 WITH NO DATA; <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
