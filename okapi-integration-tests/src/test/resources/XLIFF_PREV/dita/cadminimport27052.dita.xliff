<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cadminimport27052.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Bulk import and export requirements and considerations</source>
<seg-source><mrk mid="0" mtype="seg">Bulk import and export requirements and considerations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Bulk import and export requirements and considerations</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">There are requirements and limitations that you must consider before you use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import and export procedures.</source>
<seg-source><mrk mid="0" mtype="seg">There are requirements and limitations that you must consider before you use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import and export procedures.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">There are requirements and limitations that you must consider before you use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import and export procedures.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">bulk import and export</source>
<seg-source><mrk mid="0" mtype="seg">bulk import and export</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">bulk import and export</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">requirements</source>
<seg-source><mrk mid="0" mtype="seg">requirements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">requirements</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">import procedures</source>
<seg-source><mrk mid="0" mtype="seg">import procedures</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">import procedures</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">requirements</source>
<seg-source><mrk mid="0" mtype="seg">requirements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">requirements</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">import procedures</source>
<seg-source><mrk mid="0" mtype="seg">import procedures</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">import procedures</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">limitations</source>
<seg-source><mrk mid="0" mtype="seg">limitations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">limitations</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">export procedures</source>
<seg-source><mrk mid="0" mtype="seg">export procedures</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">export procedures</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">requirements</source>
<seg-source><mrk mid="0" mtype="seg">requirements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">requirements</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">export procedures</source>
<seg-source><mrk mid="0" mtype="seg">export procedures</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">export procedures</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">limitations</source>
<seg-source><mrk mid="0" mtype="seg">limitations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">limitations</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">system procedures</source>
<seg-source><mrk mid="0" mtype="seg">system procedures</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">system procedures</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">import and export, requirements</source>
<seg-source><mrk mid="0" mtype="seg">import and export, requirements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">import and export, requirements</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">Database transactions</source>
<seg-source><mrk mid="0" mtype="seg">Database transactions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Database transactions</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues a COMMIT or a ROLLBACK statement after each import and export procedure is run (a COMMIT if the procedure completes successfully, a ROLLBACK if it fails). For this reason, you should issue either a COMMIT or ROLLBACK statement to complete all transactions and release all table-level locks before you invoke an import or export procedure. An error in an import or export procedure and the ensuing ROLLBACK would throw away any changes performed before the procedure was called, and vice versa: any unsound changes before the import or export procedure call that should not be committed could be committed automatically.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues a COMMIT or a ROLLBACK statement after each import and export procedure is run (a COMMIT if the procedure completes successfully, a ROLLBACK if it fails).</mrk><mrk mid="1" mtype="seg"> For this reason, you should issue either a COMMIT or ROLLBACK statement to complete all transactions and release all table-level locks before you invoke an import or export procedure.</mrk><mrk mid="2" mtype="seg"> An error in an import or export procedure and the ensuing ROLLBACK would throw away any changes performed before the procedure was called, and vice versa: any unsound changes before the import or export procedure call that should not be committed could be committed automatically.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues a COMMIT or a ROLLBACK statement after each import and export procedure is run (a COMMIT if the procedure completes successfully, a ROLLBACK if it fails).</mrk><mrk mid="1" mtype="seg"> For this reason, you should issue either a COMMIT or ROLLBACK statement to complete all transactions and release all table-level locks before you invoke an import or export procedure.</mrk><mrk mid="2" mtype="seg"> An error in an import or export procedure and the ensuing ROLLBACK would throw away any changes performed before the procedure was called, and vice versa: any unsound changes before the import or export procedure call that should not be committed could be committed automatically.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Database connections</source>
<seg-source><mrk mid="0" mtype="seg">Database connections</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Database connections</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">To invoke a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import or export procedure, you must be connected to the database into which the data is imported or from which the data is exported. Other user applications that access the table with a separate connection do not need to disconnect.</source>
<seg-source><mrk mid="0" mtype="seg">To invoke a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import or export procedure, you must be connected to the database into which the data is imported or from which the data is exported.</mrk><mrk mid="1" mtype="seg"> Other user applications that access the table with a separate connection do not need to disconnect.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To invoke a <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> import or export procedure, you must be connected to the database into which the data is imported or from which the data is exported.</mrk><mrk mid="1" mtype="seg"> Other user applications that access the table with a separate connection do not need to disconnect.</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">Classpath</source>
<seg-source><mrk mid="0" mtype="seg">Classpath</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Classpath</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">You must have the <bpt id="1" ctype="x-filepath">&lt;filepath&gt;</bpt>derbytools.jar<ept id="1">&lt;/filepath&gt;</ept> file in your classpath before you can use the import or export procedures from <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">You must have the <bpt id="1" ctype="x-filepath">&lt;filepath&gt;</bpt>derbytools.jar<ept id="1">&lt;/filepath&gt;</ept> file in your classpath before you can use the import or export procedures from <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You must have the <bpt id="1" ctype="x-filepath">&lt;filepath&gt;</bpt>derbytools.jar<ept id="1">&lt;/filepath&gt;</ept> file in your classpath before you can use the import or export procedures from <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">The table must exist</source>
<seg-source><mrk mid="0" mtype="seg">The table must exist</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The table must exist</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">To import data into a table, the table must already exist in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>. The table does not have to be empty. If the table is not empty, bulk import performs single row inserts, which result in slower performance.</source>
<seg-source><mrk mid="0" mtype="seg">To import data into a table, the table must already exist in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The table does not have to be empty.</mrk><mrk mid="2" mtype="seg"> If the table is not empty, bulk import performs single row inserts, which result in slower performance.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To import data into a table, the table must already exist in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The table does not have to be empty.</mrk><mrk mid="2" mtype="seg"> If the table is not empty, bulk import performs single row inserts, which result in slower performance.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Create indexes, keys, and unique constraints before you import</source>
<seg-source><mrk mid="0" mtype="seg">Create indexes, keys, and unique constraints before you import</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create indexes, keys, and unique constraints before you import</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">To avoid a separate step, create the indexes, keys (primary and foreign), and unique constraints on tables before you import data. However, if your memory and disk space resources are limited, you can build the indexes and primary keys after importing data.</source>
<seg-source><mrk mid="0" mtype="seg">To avoid a separate step, create the indexes, keys (primary and foreign), and unique constraints on tables before you import data.</mrk><mrk mid="1" mtype="seg"> However, if your memory and disk space resources are limited, you can build the indexes and primary keys after importing data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To avoid a separate step, create the indexes, keys (primary and foreign), and unique constraints on tables before you import data.</mrk><mrk mid="1" mtype="seg"> However, if your memory and disk space resources are limited, you can build the indexes and primary keys after importing data.</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">Data types</source>
<seg-source><mrk mid="0" mtype="seg">Data types</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Data types</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> implicitly converts the strings to the data type of the receiving column. If any of the implicit conversions fail, the whole import is aborted. For example, "3+7" cannot be converted into an integer. An export that encounters a runtime error stops.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> implicitly converts the strings to the data type of the receiving column.</mrk><mrk mid="1" mtype="seg"> If any of the implicit conversions fail, the whole import is aborted.</mrk><mrk mid="2" mtype="seg"> For example, "3+7" cannot be converted into an integer.</mrk><mrk mid="3" mtype="seg"> An export that encounters a runtime error stops.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> implicitly converts the strings to the data type of the receiving column.</mrk><mrk mid="1" mtype="seg"> If any of the implicit conversions fail, the whole import is aborted.</mrk><mrk mid="2" mtype="seg"> For example, "3+7" cannot be converted into an integer.</mrk><mrk mid="3" mtype="seg"> An export that encounters a runtime error stops.</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">You cannot import or export the XML data type.</source>
<seg-source><mrk mid="0" mtype="seg">You cannot import or export the XML data type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You cannot import or export the XML data type.</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">Locking during import</source>
<seg-source><mrk mid="0" mtype="seg">Locking during import</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Locking during import</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">Import procedures use the same isolation level as the connection in which they are executed to insert data into tables. During import, the entire table is exclusively locked irrespective of the isolation level.</source>
<seg-source><mrk mid="0" mtype="seg">Import procedures use the same isolation level as the connection in which they are executed to insert data into tables.</mrk><mrk mid="1" mtype="seg"> During import, the entire table is exclusively locked irrespective of the isolation level.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Import procedures use the same isolation level as the connection in which they are executed to insert data into tables.</mrk><mrk mid="1" mtype="seg"> During import, the entire table is exclusively locked irrespective of the isolation level.</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">Locking during export</source>
<seg-source><mrk mid="0" mtype="seg">Locking during export</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Locking during export</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">Export procedures use the same isolation level as the connection in which they are executed to fetch data from tables.</source>
<seg-source><mrk mid="0" mtype="seg">Export procedures use the same isolation level as the connection in which they are executed to fetch data from tables.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Export procedures use the same isolation level as the connection in which they are executed to fetch data from tables.</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">Import behavior on tables with triggers</source>
<seg-source><mrk mid="0" mtype="seg">Import behavior on tables with triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Import behavior on tables with triggers</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en">The import procedures enable INSERT triggers when data is appended to the table. The REPLACE parameter is not allowed when triggers are enabled on the table.</source>
<seg-source><mrk mid="0" mtype="seg">The import procedures enable INSERT triggers when data is appended to the table.</mrk><mrk mid="1" mtype="seg"> The REPLACE parameter is not allowed when triggers are enabled on the table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The import procedures enable INSERT triggers when data is appended to the table.</mrk><mrk mid="1" mtype="seg"> The REPLACE parameter is not allowed when triggers are enabled on the table.</mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">Restrictions on the REPLACE parameter</source>
<seg-source><mrk mid="0" mtype="seg">Restrictions on the REPLACE parameter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Restrictions on the REPLACE parameter</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en">If you import data into a table that already contains data, you can either replace or append to the existing data. You can use the REPLACE parameter on tables that have dependent tables. The replaced data must maintain referential integrity; otherwise, the import operation will be rolled back. You cannot use the REPLACE parameter if the table has triggers enabled.</source>
<seg-source><mrk mid="0" mtype="seg">If you import data into a table that already contains data, you can either replace or append to the existing data.</mrk><mrk mid="1" mtype="seg"> You can use the REPLACE parameter on tables that have dependent tables.</mrk><mrk mid="2" mtype="seg"> The replaced data must maintain referential integrity; otherwise, the import operation will be rolled back.</mrk><mrk mid="3" mtype="seg"> You cannot use the REPLACE parameter if the table has triggers enabled.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you import data into a table that already contains data, you can either replace or append to the existing data.</mrk><mrk mid="1" mtype="seg"> You can use the REPLACE parameter on tables that have dependent tables.</mrk><mrk mid="2" mtype="seg"> The replaced data must maintain referential integrity; otherwise, the import operation will be rolled back.</mrk><mrk mid="3" mtype="seg"> You cannot use the REPLACE parameter if the table has triggers enabled.</mrk></target>
</trans-unit>
<trans-unit id="tu36">
<source xml:lang="en">Restrictions on tables</source>
<seg-source><mrk mid="0" mtype="seg">Restrictions on tables</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Restrictions on tables</mrk></target>
</trans-unit>
<trans-unit id="tu37">
<source xml:lang="en">You cannot use import procedures to import data into a system table or a declared temporary table.</source>
<seg-source><mrk mid="0" mtype="seg">You cannot use import procedures to import data into a system table or a declared temporary table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You cannot use import procedures to import data into a system table or a declared temporary table.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
