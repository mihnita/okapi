<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefbuiltdouble.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">DOUBLE function</source>
<seg-source><mrk mid="0" mtype="seg">DOUBLE function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DOUBLE function</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">The DOUBLE function returns a floating-point number corresponding to a number or a character string.</source>
<seg-source><mrk mid="0" mtype="seg">The DOUBLE function returns a floating-point number corresponding to a number or a character string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The DOUBLE function returns a floating-point number corresponding to a number or a character string.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">DOUBLE function</source>
<seg-source><mrk mid="0" mtype="seg">DOUBLE function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DOUBLE function</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">The returned value corresponds to a number if the argument is a numeric expression.</source>
<seg-source><mrk mid="0" mtype="seg">The returned value corresponds to a number if the argument is a numeric expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The returned value corresponds to a number if the argument is a numeric expression.</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">The returned value corresponds to a character string representation of a number if the argument is a string expression.</source>
<seg-source><mrk mid="0" mtype="seg">The returned value corresponds to a character string representation of a number if the argument is a string expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The returned value corresponds to a character string representation of a number if the argument is a string expression.</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Numeric to double</source>
<seg-source><mrk mid="0" mtype="seg">Numeric to double</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Numeric to double</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE [ PRECISION ] ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE [ PRECISION ] ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE [ PRECISION ] ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">The argument is an expression that returns a value of any built-in numeric data type.</source>
<seg-source><mrk mid="0" mtype="seg">The argument is an expression that returns a value of any built-in numeric data type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The argument is an expression that returns a value of any built-in numeric data type.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">The result of the function is a double-precision floating-point number. If the argument can be null, the result can be null; if the argument is null, the result is the null value. The result is the same number that would occur if the argument were assigned to a double-precision floating-point column or variable.</source>
<seg-source><mrk mid="0" mtype="seg">The result of the function is a double-precision floating-point number.</mrk><mrk mid="1" mtype="seg"> If the argument can be null, the result can be null; if the argument is null, the result is the null value.</mrk><mrk mid="2" mtype="seg"> The result is the same number that would occur if the argument were assigned to a double-precision floating-point column or variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result of the function is a double-precision floating-point number.</mrk><mrk mid="1" mtype="seg"> If the argument can be null, the result can be null; if the argument is null, the result is the null value.</mrk><mrk mid="2" mtype="seg"> The result is the same number that would occur if the argument were assigned to a double-precision floating-point column or variable.</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Character string to double</source>
<seg-source><mrk mid="0" mtype="seg">Character string to double</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Character string to double</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DOUBLE ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="2">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>stringExpression<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">The argument can be of type CHAR or VARCHAR in the form of a numeric constant. Leading and trailing blanks in argument are ignored.</source>
<seg-source><mrk mid="0" mtype="seg">The argument can be of type CHAR or VARCHAR in the form of a numeric constant.</mrk><mrk mid="1" mtype="seg"> Leading and trailing blanks in argument are ignored.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The argument can be of type CHAR or VARCHAR in the form of a numeric constant.</mrk><mrk mid="1" mtype="seg"> Leading and trailing blanks in argument are ignored.</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">The result of the function is a double-precision floating-point number. The result can be null; if the argument is null, the result is the null value. The result is the same number that would occur if the string was considered a constant and assigned to a double-precision floating-point column or variable.</source>
<seg-source><mrk mid="0" mtype="seg">The result of the function is a double-precision floating-point number.</mrk><mrk mid="1" mtype="seg"> The result can be null; if the argument is null, the result is the null value.</mrk><mrk mid="2" mtype="seg"> The result is the same number that would occur if the string was considered a constant and assigned to a double-precision floating-point column or variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result of the function is a double-precision floating-point number.</mrk><mrk mid="1" mtype="seg"> The result can be null; if the argument is null, the result is the null value.</mrk><mrk mid="2" mtype="seg"> The result is the same number that would occur if the string was considered a constant and assigned to a double-precision floating-point column or variable.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
