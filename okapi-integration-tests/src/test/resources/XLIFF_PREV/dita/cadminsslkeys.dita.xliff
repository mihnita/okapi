<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cadminsslkeys.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Key and certificate handling</source>
<seg-source><mrk mid="0" mtype="seg">Key and certificate handling</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Key and certificate handling</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">For SSL operation, the server always needs a key pair. If the server runs in peer authentication mode (the server authenticates the clients), each client needs its own key pair. In general, if one end of the communication wants to authenticate its partner, the first end needs to install a certificate generated by the partner.</source>
<seg-source><mrk mid="0" mtype="seg">For SSL operation, the server always needs a key pair.</mrk><mrk mid="1" mtype="seg"> If the server runs in peer authentication mode (the server authenticates the clients), each client needs its own key pair.</mrk><mrk mid="2" mtype="seg"> In general, if one end of the communication wants to authenticate its partner, the first end needs to install a certificate generated by the partner.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For SSL operation, the server always needs a key pair.</mrk><mrk mid="1" mtype="seg"> If the server runs in peer authentication mode (the server authenticates the clients), each client needs its own key pair.</mrk><mrk mid="2" mtype="seg"> In general, if one end of the communication wants to authenticate its partner, the first end needs to install a certificate generated by the partner.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Network Server</source>
<seg-source><mrk mid="0" mtype="seg">Network Server</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Network Server</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">SSL</source>
<seg-source><mrk mid="0" mtype="seg">SSL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SSL</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Network Server</source>
<seg-source><mrk mid="0" mtype="seg">Network Server</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Network Server</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">TLS</source>
<seg-source><mrk mid="0" mtype="seg">TLS</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TLS</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">SSL</source>
<seg-source><mrk mid="0" mtype="seg">SSL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SSL</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">key</source>
<seg-source><mrk mid="0" mtype="seg">key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">key</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">certificate</source>
<seg-source><mrk mid="0" mtype="seg">certificate</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">certificate</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">TLS</source>
<seg-source><mrk mid="0" mtype="seg">TLS</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TLS</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">The key pair is located in a file which is called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>key store<ept id="1">&lt;/i&gt;</ept>, and the JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the keystore.</source>
<seg-source><mrk mid="0" mtype="seg">The key pair is located in a file which is called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>key store<ept id="1">&lt;/i&gt;</ept>, and the JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the keystore.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The key pair is located in a file which is called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>key store<ept id="1">&lt;/i&gt;</ept>, and the JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.keyStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the keystore.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">The certificates of trusted parties are installed in a file called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trust store<ept id="1">&lt;/i&gt;</ept>. The JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the trust store.</source>
<seg-source><mrk mid="0" mtype="seg">The certificates of trusted parties are installed in a file called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trust store<ept id="1">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the trust store.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The certificates of trusted parties are installed in a file called a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trust store<ept id="1">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The JDK's SSL provider needs the system properties <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStore<ept id="2">&lt;/codeph&gt;</ept> and <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.net.ssl.trustStorePassword<ept id="3">&lt;/codeph&gt;</ept> to access the trust store.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Key pair generation</source>
<seg-source><mrk mid="0" mtype="seg">Key pair generation</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Key pair generation</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">Key pairs are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -genkey<ept id="1">&lt;/codeph&gt;</ept>. The simplest way to generate a key pair is to do the following:</source>
<seg-source><mrk mid="0" mtype="seg">Key pairs are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -genkey<ept id="1">&lt;/codeph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The simplest way to generate a key pair is to do the following:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Key pairs are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -genkey<ept id="1">&lt;/codeph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The simplest way to generate a key pair is to do the following:</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept> will prompt for needed information, such as identity details and passwords.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept> will prompt for needed information, such as identity details and passwords.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept> will prompt for needed information, such as identity details and passwords.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Consult the JDK documentation for more information on <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">Consult the JDK documentation for more information on <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Consult the JDK documentation for more information on <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool<ept id="1">&lt;/codeph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">Certificate generation</source>
<seg-source><mrk mid="0" mtype="seg">Certificate generation</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Certificate generation</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">Certificates are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -export<ept id="1">&lt;/codeph&gt;</ept> as follows:</source>
<seg-source><mrk mid="0" mtype="seg">Certificates are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -export<ept id="1">&lt;/codeph&gt;</ept> as follows:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Certificates are generated with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -export<ept id="1">&lt;/codeph&gt;</ept> as follows:</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept> \ -rfc -file <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept> \ -rfc -file <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -keystore <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>keystore<ept id="3">&lt;/i&gt;</ept> \ -rfc -file <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">The certificate file may then be distributed to the relevant parties.</source>
<seg-source><mrk mid="0" mtype="seg">The certificate file may then be distributed to the relevant parties.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The certificate file may then be distributed to the relevant parties.</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">Certificate installation</source>
<seg-source><mrk mid="0" mtype="seg">Certificate installation</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Certificate installation</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Installation of a certificate in a trust store is done with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -import<ept id="1">&lt;/codeph&gt;</ept> as follows:</source>
<seg-source><mrk mid="0" mtype="seg">Installation of a certificate in a trust store is done with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -import<ept id="1">&lt;/codeph&gt;</ept> as follows:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Installation of a certificate in a trust store is done with <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>keytool -import<ept id="1">&lt;/codeph&gt;</ept> as follows:</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -file <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="3">&lt;/i&gt;</ept> \ -keystore <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>truststore<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -file <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="3">&lt;/i&gt;</ept> \ -keystore <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>truststore<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>alias<ept id="2">&lt;/i&gt;</ept> -file <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>certificate-file<ept id="3">&lt;/i&gt;</ept> \ -keystore <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>truststore<ept id="4">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">Generate the server key pair:</source>
<seg-source><mrk mid="0" mtype="seg">Generate the server key pair:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Generate the server key pair:</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>&gt;keytool -genkey -alias myDerbyServer -keystore serverKeyStore.key<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>&gt;keytool -genkey -alias myDerbyServer -keystore serverKeyStore.key<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>&gt;keytool -genkey -alias myDerbyServer -keystore serverKeyStore.key<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">Generate a server certificate:</source>
<seg-source><mrk mid="0" mtype="seg">Generate a server certificate:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Generate a server certificate:</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias myDerbyServer -keystore serverKeyStore.key \ -rfc -file myServer.cert<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias myDerbyServer -keystore serverKeyStore.key \ -rfc -file myServer.cert<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias myDerbyServer -keystore serverKeyStore.key \ -rfc -file myServer.cert<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">Generate a client key pair:</source>
<seg-source><mrk mid="0" mtype="seg">Generate a client key pair:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Generate a client key pair:</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey -alias aDerbyClient -keystore clientKeyStore.key<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey -alias aDerbyClient -keystore clientKeyStore.key<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -genkey -alias aDerbyClient -keystore clientKeyStore.key<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">Generate a client certficate:</source>
<seg-source><mrk mid="0" mtype="seg">Generate a client certficate:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Generate a client certficate:</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias aDerbyClient -keystore clientKeyStore.key \ -rfc -file aClient.cert<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias aDerbyClient -keystore clientKeyStore.key \ -rfc -file aClient.cert<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -export -alias aDerbyClient -keystore clientKeyStore.key \ -rfc -file aClient.cert<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">Install a client certificate in the server's trust store:</source>
<seg-source><mrk mid="0" mtype="seg">Install a client certificate in the server's trust store:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Install a client certificate in the server's trust store:</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias aDerbyClient -file aClient.cert -keystore serverTrustStore.key<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias aDerbyClient -file aClient.cert -keystore serverTrustStore.key<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias aDerbyClient -file aClient.cert -keystore serverTrustStore.key<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu36">
<source xml:lang="en">Install the server certificate in a client's trust store:</source>
<seg-source><mrk mid="0" mtype="seg">Install the server certificate in a client's trust store:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Install the server certificate in a client's trust store:</mrk></target>
</trans-unit>
<trans-unit id="tu37">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias myDerbyServer -file myServer.cert -keystore clientTrustStore.key<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias myDerbyServer -file myServer.cert -keystore clientTrustStore.key<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>keytool -import -alias myDerbyServer -file myServer.cert -keystore clientTrustStore.key<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
