<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefjdbc4_0summary.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Features supported on all JDBC 4 releases</source>
<seg-source><mrk mid="0" mtype="seg">Features supported on all JDBC 4 releases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Features supported on all JDBC 4 releases</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">JDBC 4.0</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.0</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.0</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">JDBC 4.1</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.1</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">JDBC 4.2</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.2</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Ease of development</source>
<seg-source><mrk mid="0" mtype="seg">Ease of development</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ease of development</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Driver autoloading</source>
<seg-source><mrk mid="0" mtype="seg">Driver autoloading</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Driver autoloading</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">SQLException subclasses</source>
<seg-source><mrk mid="0" mtype="seg">SQLException subclasses</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQLException subclasses</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Wrappers</source>
<seg-source><mrk mid="0" mtype="seg">Wrappers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wrappers</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">Statement events</source>
<seg-source><mrk mid="0" mtype="seg">Statement events</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Statement events</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">Streaming APIs</source>
<seg-source><mrk mid="0" mtype="seg">Streaming APIs</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Streaming APIs</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Pooling support</source>
<seg-source><mrk mid="0" mtype="seg">Pooling support</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pooling support</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">JDBC 4.0 added some functionality to the core API. This section documents the features supported by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.0 added some functionality to the core API.</mrk><mrk mid="1" mtype="seg"> This section documents the features supported by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.0 added some functionality to the core API.</mrk><mrk mid="1" mtype="seg"> This section documents the features supported by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">All these JDBC 4.0 features are also supported by JDBC 4.1 and JDBC 4.2. See <bpt id="1" ctype="x-xref">&lt;xref href="rrefjdbc4_1summary.dita#rrefjdbc4_1summary"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.1 and above. See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_2summary.dita#rrefjdbc4_2summary"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.2.</source>
<seg-source><mrk mid="0" mtype="seg">All these JDBC 4.0 features are also supported by JDBC 4.1 and JDBC 4.2.</mrk><mrk mid="1" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref href="rrefjdbc4_1summary.dita#rrefjdbc4_1summary"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.1 and above.</mrk><mrk mid="2" mtype="seg"> See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_2summary.dita#rrefjdbc4_2summary"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.2.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">All these JDBC 4.0 features are also supported by JDBC 4.1 and JDBC 4.2.</mrk><mrk mid="1" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref href="rrefjdbc4_1summary.dita#rrefjdbc4_1summary"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.1 and above.</mrk><mrk mid="2" mtype="seg"> See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_2summary.dita#rrefjdbc4_2summary"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> for information about features supported only by JDBC 4.2.</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">These features are present only in a JDK 6 or higher environment.</source>
<seg-source><mrk mid="0" mtype="seg">These features are present only in a JDK 6 or higher environment.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">These features are present only in a JDK 6 or higher environment.</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">These features are:</source>
<seg-source><mrk mid="0" mtype="seg">These features are:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">These features are:</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DataSources.<ept id="1">&lt;/b&gt;</ept> The <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> implementations of <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DataSource<ept id="3">&lt;/codeph&gt;</ept> support both JDBC 3 and JDBC 4.0 development. See <bpt id="4" ctype="x-xref">&lt;xref href="rrefjdbc4_0dataSource.dita#rrefjdbc4_0dataSource"&gt;</bpt><ept id="4">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DataSources.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> The <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> implementations of <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DataSource<ept id="3">&lt;/codeph&gt;</ept> support both JDBC 3 and JDBC 4.0 development.</mrk><mrk mid="2" mtype="seg"> See <bpt id="4" ctype="x-xref">&lt;xref href="rrefjdbc4_0dataSource.dita#rrefjdbc4_0dataSource"&gt;</bpt><ept id="4">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DataSources.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> The <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> implementations of <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DataSource<ept id="3">&lt;/codeph&gt;</ept> support both JDBC 3 and JDBC 4.0 development.</mrk><mrk mid="2" mtype="seg"> See <bpt id="4" ctype="x-xref">&lt;xref href="rrefjdbc4_0dataSource.dita#rrefjdbc4_0dataSource"&gt;</bpt><ept id="4">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Autoloading of JDBC drivers.<ept id="1">&lt;/b&gt;</ept> In earlier versions of JDBC, applications had to manually register drivers before requesting Connections. With JDBC 4.0 and above, applications no longer need to issue a Class.forName() on the driver name; instead, the DriverManager will find an appropriate JDBC driver when the application requests a Connection.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Autoloading of JDBC drivers.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> In earlier versions of JDBC, applications had to manually register drivers before requesting Connections.</mrk><mrk mid="2" mtype="seg"> With JDBC 4.0 and above, applications no longer need to issue a Class.forName() on the driver name; instead, the DriverManager will find an appropriate JDBC driver when the application requests a Connection.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Autoloading of JDBC drivers.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> In earlier versions of JDBC, applications had to manually register drivers before requesting Connections.</mrk><mrk mid="2" mtype="seg"> With JDBC 4.0 and above, applications no longer need to issue a Class.forName() on the driver name; instead, the DriverManager will find an appropriate JDBC driver when the application requests a Connection.</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SQLExceptions.<ept id="1">&lt;/b&gt;</ept> JDBC 4.0 introduced refined subclasses of SQLException. See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_0sqlexception.dita#rrefjdbc4_0sqlexception"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SQLExceptions.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 introduced refined subclasses of SQLException.</mrk><mrk mid="2" mtype="seg"> See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_0sqlexception.dita#rrefjdbc4_0sqlexception"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SQLExceptions.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 introduced refined subclasses of SQLException.</mrk><mrk mid="2" mtype="seg"> See <bpt id="2" ctype="x-xref">&lt;xref href="rrefjdbc4_0sqlexception.dita#rrefjdbc4_0sqlexception"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Wrappers.<ept id="1">&lt;/b&gt;</ept> JDBC 4.0 introduced the concept of wrapped JDBC objects. This is a formal mechanism by which application servers can look for vendor-specific extensions inside standard JDBC objects like Connections, Statements, and ResultSets. For <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>, this is a vacuous exercise because <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not expose any of these extensions.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Wrappers.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 introduced the concept of wrapped JDBC objects.</mrk><mrk mid="2" mtype="seg"> This is a formal mechanism by which application servers can look for vendor-specific extensions inside standard JDBC objects like Connections, Statements, and ResultSets.</mrk><mrk mid="3" mtype="seg"> For <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>, this is a vacuous exercise because <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not expose any of these extensions.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Wrappers.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 introduced the concept of wrapped JDBC objects.</mrk><mrk mid="2" mtype="seg"> This is a formal mechanism by which application servers can look for vendor-specific extensions inside standard JDBC objects like Connections, Statements, and ResultSets.</mrk><mrk mid="3" mtype="seg"> For <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>, this is a vacuous exercise because <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not expose any of these extensions.</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Statement events.<ept id="1">&lt;/b&gt;</ept> With JDBC 4.0 and above, connection pools can listen for Statement closing and Statement error events. New methods were added to <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>javax.sql.PooledConnection<ept id="2">&lt;/i&gt;</ept>: <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>addStatementEventListener<ept id="3">&lt;/i&gt;</ept> and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>removeStatementEventListener<ept id="4">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Statement events.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> With JDBC 4.0 and above, connection pools can listen for Statement closing and Statement error events.</mrk><mrk mid="2" mtype="seg"> New methods were added to <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>javax.sql.PooledConnection<ept id="2">&lt;/i&gt;</ept>: <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>addStatementEventListener<ept id="3">&lt;/i&gt;</ept> and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>removeStatementEventListener<ept id="4">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Statement events.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> With JDBC 4.0 and above, connection pools can listen for Statement closing and Statement error events.</mrk><mrk mid="2" mtype="seg"> New methods were added to <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>javax.sql.PooledConnection<ept id="2">&lt;/i&gt;</ept>: <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>addStatementEventListener<ept id="3">&lt;/i&gt;</ept> and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>removeStatementEventListener<ept id="4">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Streaming APIs.<ept id="1">&lt;/b&gt;</ept> JDBC 4.0 added new overloads of the streaming methods in <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>CallableStatement<ept id="2">&lt;/i&gt;</ept>, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>PreparedStatement<ept id="3">&lt;/i&gt;</ept>, and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept>. These are the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>setXXX<ept id="5">&lt;/i&gt;</ept> and <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>updateXXX<ept id="6">&lt;/i&gt;</ept> methods which take <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>java.io.InputStream<ept id="7">&lt;/i&gt;</ept> and <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>java.io.Reader<ept id="8">&lt;/i&gt;</ept> arguments. The new overloads allow you to omit the length arguments or to specify <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>long<ept id="9">&lt;/i&gt;</ept> lengths. If you omit the length argument when the stream object is a LOB greater than a single page in size, performance will be impaired if you later retrieve the length of the LOB. However, if you are simply inserting or reading data, performance is unaffected.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Streaming APIs.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 added new overloads of the streaming methods in <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>CallableStatement<ept id="2">&lt;/i&gt;</ept>, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>PreparedStatement<ept id="3">&lt;/i&gt;</ept>, and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> These are the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>setXXX<ept id="5">&lt;/i&gt;</ept> and <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>updateXXX<ept id="6">&lt;/i&gt;</ept> methods which take <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>java.io.InputStream<ept id="7">&lt;/i&gt;</ept> and <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>java.io.Reader<ept id="8">&lt;/i&gt;</ept> arguments.</mrk><mrk mid="3" mtype="seg"> The new overloads allow you to omit the length arguments or to specify <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>long<ept id="9">&lt;/i&gt;</ept> lengths.</mrk><mrk mid="4" mtype="seg"> If you omit the length argument when the stream object is a LOB greater than a single page in size, performance will be impaired if you later retrieve the length of the LOB.</mrk><mrk mid="5" mtype="seg"> However, if you are simply inserting or reading data, performance is unaffected.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>Streaming APIs.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> JDBC 4.0 added new overloads of the streaming methods in <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>CallableStatement<ept id="2">&lt;/i&gt;</ept>, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>PreparedStatement<ept id="3">&lt;/i&gt;</ept>, and <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> These are the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>setXXX<ept id="5">&lt;/i&gt;</ept> and <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>updateXXX<ept id="6">&lt;/i&gt;</ept> methods which take <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>java.io.InputStream<ept id="7">&lt;/i&gt;</ept> and <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>java.io.Reader<ept id="8">&lt;/i&gt;</ept> arguments.</mrk><mrk mid="3" mtype="seg"> The new overloads allow you to omit the length arguments or to specify <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>long<ept id="9">&lt;/i&gt;</ept> lengths.</mrk><mrk mid="4" mtype="seg"> If you omit the length argument when the stream object is a LOB greater than a single page in size, performance will be impaired if you later retrieve the length of the LOB.</mrk><mrk mid="5" mtype="seg"> However, if you are simply inserting or reading data, performance is unaffected.</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>New methods.<ept id="1">&lt;/b&gt;</ept> New methods were added to the following interfaces: <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Connection<ept id="2">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DatabaseMetaData<ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Statement<ept id="4">&lt;/codeph&gt;</ept>. See <bpt id="5" ctype="x-xref">&lt;xref href="rrefjdbc4_0connection.dita#rrefjdbc4_0connection"&gt;</bpt><ept id="5">&lt;/xref&gt;</ept>, <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc4_0databaseMetaData.dita#rrefjdbc4_0databaseMetaData"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept>, <bpt id="7" ctype="x-xref">&lt;xref href="rrefjdbc4_0statement.dita#rrefjdbc4_0statement"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>New methods.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> New methods were added to the following interfaces: <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Connection<ept id="2">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DatabaseMetaData<ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Statement<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> See <bpt id="5" ctype="x-xref">&lt;xref href="rrefjdbc4_0connection.dita#rrefjdbc4_0connection"&gt;</bpt><ept id="5">&lt;/xref&gt;</ept>, <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc4_0databaseMetaData.dita#rrefjdbc4_0databaseMetaData"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept>, <bpt id="7" ctype="x-xref">&lt;xref href="rrefjdbc4_0statement.dita#rrefjdbc4_0statement"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>New methods.<ept id="1">&lt;/b&gt;</ept></mrk><mrk mid="1" mtype="seg"> New methods were added to the following interfaces: <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Connection<ept id="2">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.DatabaseMetaData<ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>javax.sql.Statement<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> See <bpt id="5" ctype="x-xref">&lt;xref href="rrefjdbc4_0connection.dita#rrefjdbc4_0connection"&gt;</bpt><ept id="5">&lt;/xref&gt;</ept>, <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc4_0databaseMetaData.dita#rrefjdbc4_0databaseMetaData"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept>, <bpt id="7" ctype="x-xref">&lt;xref href="rrefjdbc4_0statement.dita#rrefjdbc4_0statement"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
