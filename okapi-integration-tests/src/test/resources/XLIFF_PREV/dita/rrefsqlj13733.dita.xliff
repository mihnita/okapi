<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj13733.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">CHAR data type</source>
<seg-source><mrk mid="0" mtype="seg">CHAR data type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CHAR data type</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">CHAR data type</source>
<seg-source><mrk mid="0" mtype="seg">CHAR data type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CHAR data type</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">CHAR provides for fixed-length storage of strings.</source>
<seg-source><mrk mid="0" mtype="seg">CHAR provides for fixed-length storage of strings.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CHAR provides for fixed-length storage of strings.</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CHAR[ACTER] [(<bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept>)] <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CHAR[ACTER] [(<bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept>)] <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CHAR[ACTER] [(<bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept>)] <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is an unsigned integer literal designating the length in bytes. The default <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept> for a CHAR is 1, and the maximum size of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>length<ept id="3">&lt;/i&gt;</ept> is 254.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is an unsigned integer literal designating the length in bytes.</mrk><mrk mid="1" mtype="seg"> The default <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept> for a CHAR is 1, and the maximum size of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>length<ept id="3">&lt;/i&gt;</ept> is 254.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is an unsigned integer literal designating the length in bytes.</mrk><mrk mid="1" mtype="seg"> The default <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>length<ept id="2">&lt;/i&gt;</ept> for a CHAR is 1, and the maximum size of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>length<ept id="3">&lt;/i&gt;</ept> is 254.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Corresponding compile-time Java type</source>
<seg-source><mrk mid="0" mtype="seg">Corresponding compile-time Java type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Corresponding compile-time Java type</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.String<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.String<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.String<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">JDBC metadata type (java.sql.Types)</source>
<seg-source><mrk mid="0" mtype="seg">JDBC metadata type (java.sql.Types)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC metadata type (java.sql.Types)</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">CHAR</source>
<seg-source><mrk mid="0" mtype="seg">CHAR</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CHAR</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> inserts spaces to pad a string value shorter than the expected length. <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> truncates spaces from a string value longer than the expected length. Characters other than spaces cause an exception to be raised. When <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt>comparison boolean operators<ept id="3">&lt;/xref&gt;</ept> are applied to CHARs, the shorter string is padded with spaces to the length of the longer string.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> inserts spaces to pad a string value shorter than the expected length.</mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> truncates spaces from a string value longer than the expected length.</mrk><mrk mid="2" mtype="seg"> Characters other than spaces cause an exception to be raised.</mrk><mrk mid="3" mtype="seg"> When <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt>comparison boolean operators<ept id="3">&lt;/xref&gt;</ept> are applied to CHARs, the shorter string is padded with spaces to the length of the longer string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> inserts spaces to pad a string value shorter than the expected length.</mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> truncates spaces from a string value longer than the expected length.</mrk><mrk mid="2" mtype="seg"> Characters other than spaces cause an exception to be raised.</mrk><mrk mid="3" mtype="seg"> When <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt>comparison boolean operators<ept id="3">&lt;/xref&gt;</ept> are applied to CHARs, the shorter string is padded with spaces to the length of the longer string.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">When CHARs and VARCHARs are mixed in expressions, the shorter value is padded with spaces to the length of the longer value.</source>
<seg-source><mrk mid="0" mtype="seg">When CHARs and VARCHARs are mixed in expressions, the shorter value is padded with spaces to the length of the longer value.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When CHARs and VARCHARs are mixed in expressions, the shorter value is padded with spaces to the length of the longer value.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">The type of a string constant is CHAR.</source>
<seg-source><mrk mid="0" mtype="seg">The type of a string constant is CHAR.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The type of a string constant is CHAR.</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- within a string constant use two single quotation marks -- to represent a single quotation mark or apostrophe <ept id="2">&lt;/ph&gt;</ept> VALUES 'hello this is Joe''s string'<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- within a string constant use two single quotation marks -- to represent a single quotation mark or apostrophe <ept id="2">&lt;/ph&gt;</ept> VALUES 'hello this is Joe''s string'<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- within a string constant use two single quotation marks -- to represent a single quotation mark or apostrophe <ept id="2">&lt;/ph&gt;</ept> VALUES 'hello this is Joe''s string'<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- create a table with a CHAR field CREATE TABLE STATUS ( STATUSCODE CHAR(2) NOT NULL CONSTRAINT PK_STATUS PRIMARY KEY, STATUSDESC VARCHAR(40) NOT NULL ); <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- create a table with a CHAR field CREATE TABLE STATUS ( STATUSCODE CHAR(2) NOT NULL CONSTRAINT PK_STATUS PRIMARY KEY, STATUSDESC VARCHAR(40) NOT NULL ); <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>-- create a table with a CHAR field CREATE TABLE STATUS ( STATUSCODE CHAR(2) NOT NULL CONSTRAINT PK_STATUS PRIMARY KEY, STATUSDESC VARCHAR(40) NOT NULL ); <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
