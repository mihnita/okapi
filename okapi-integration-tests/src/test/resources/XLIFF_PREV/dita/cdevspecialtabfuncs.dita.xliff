<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevspecialtabfuncs.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Programming <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions</source>
<seg-source><mrk mid="0" mtype="seg">Programming <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Programming <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> lets you create table functions. Table functions are functions which package up external data to look like <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables. The external data can be an XML file, a table in a foreign database, a live data feed--in short, any information source that can be presented as a JDBC <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> lets you create table functions.</mrk><mrk mid="1" mtype="seg"> Table functions are functions which package up external data to look like <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables.</mrk><mrk mid="2" mtype="seg"> The external data can be an XML file, a table in a foreign database, a live data feed--in short, any information source that can be presented as a JDBC <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> lets you create table functions.</mrk><mrk mid="1" mtype="seg"> Table functions are functions which package up external data to look like <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables.</mrk><mrk mid="2" mtype="seg"> The external data can be an XML file, a table in a foreign database, a live data feed--in short, any information source that can be presented as a JDBC <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Functions</source>
<seg-source><mrk mid="0" mtype="seg">Functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Functions</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">programming table functions</source>
<seg-source><mrk mid="0" mtype="seg">programming table functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">programming table functions</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions let you efficiently import foreign data into <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables. Table functions let you join <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> tables with any of the following data sources:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions let you efficiently import foreign data into <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables.</mrk><mrk mid="1" mtype="seg"> Table functions let you join <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> tables with any of the following data sources:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table functions let you efficiently import foreign data into <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> tables.</mrk><mrk mid="1" mtype="seg"> Table functions let you join <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> tables with any of the following data sources:</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">XML-formatted reports and logs</source>
<seg-source><mrk mid="0" mtype="seg">XML-formatted reports and logs</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">XML-formatted reports and logs</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Queries that run in foreign databases</source>
<seg-source><mrk mid="0" mtype="seg">Queries that run in foreign databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Queries that run in foreign databases</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Streaming data from sensors</source>
<seg-source><mrk mid="0" mtype="seg">Streaming data from sensors</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Streaming data from sensors</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">RSS feeds</source>
<seg-source><mrk mid="0" mtype="seg">RSS feeds</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">RSS feeds</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">See "CREATE FUNCTION statement" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for the complete syntax needed to declare <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>-style table functions. The following topics provide information on how to write Java methods which wrap foreign data sources inside <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>s.</source>
<seg-source><mrk mid="0" mtype="seg">See "CREATE FUNCTION statement" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for the complete syntax needed to declare <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>-style table functions.</mrk><mrk mid="1" mtype="seg"> The following topics provide information on how to write Java methods which wrap foreign data sources inside <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>s.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See "CREATE FUNCTION statement" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for the complete syntax needed to declare <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>-style table functions.</mrk><mrk mid="1" mtype="seg"> The following topics provide information on how to write Java methods which wrap foreign data sources inside <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="3">&lt;/i&gt;</ept>s.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
