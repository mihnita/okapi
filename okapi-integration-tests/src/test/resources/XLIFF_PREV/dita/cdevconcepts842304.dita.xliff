<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevconcepts842304.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Shared locks</source>
<seg-source><mrk mid="0" mtype="seg">Shared locks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Shared locks</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">When a statement reads data without making any modifications, its transaction obtains a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shared lock<ept id="1">&lt;/i&gt;</ept> on the data.</source>
<seg-source><mrk mid="0" mtype="seg">When a statement reads data without making any modifications, its transaction obtains a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shared lock<ept id="1">&lt;/i&gt;</ept> on the data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a statement reads data without making any modifications, its transaction obtains a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shared lock<ept id="1">&lt;/i&gt;</ept> on the data.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Another transaction that tries to read the same data is permitted to read, but a transaction that tries to update the data will be prevented from doing so until the shared lock is released. How long this shared lock is held depends on the isolation level of the transaction holding the lock. Transactions using the TRANSACTION_READ_COMMITTED isolation level release the lock when the transaction steps through to the next row. Transactions using the TRANSACTION_SERIALIZABLE or TRANSACTION_REPEATABLE_READ isolation level hold the lock until the transaction is committed, so even a SELECT can prevent updates if a commit is never issued. Transactions using the TRANSACTION_READ_UNCOMMITTED isolation level do not request any locks.</source>
<seg-source><mrk mid="0" mtype="seg">Another transaction that tries to read the same data is permitted to read, but a transaction that tries to update the data will be prevented from doing so until the shared lock is released.</mrk><mrk mid="1" mtype="seg"> How long this shared lock is held depends on the isolation level of the transaction holding the lock.</mrk><mrk mid="2" mtype="seg"> Transactions using the TRANSACTION_READ_COMMITTED isolation level release the lock when the transaction steps through to the next row.</mrk><mrk mid="3" mtype="seg"> Transactions using the TRANSACTION_SERIALIZABLE or TRANSACTION_REPEATABLE_READ isolation level hold the lock until the transaction is committed, so even a SELECT can prevent updates if a commit is never issued.</mrk><mrk mid="4" mtype="seg"> Transactions using the TRANSACTION_READ_UNCOMMITTED isolation level do not request any locks.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Another transaction that tries to read the same data is permitted to read, but a transaction that tries to update the data will be prevented from doing so until the shared lock is released.</mrk><mrk mid="1" mtype="seg"> How long this shared lock is held depends on the isolation level of the transaction holding the lock.</mrk><mrk mid="2" mtype="seg"> Transactions using the TRANSACTION_READ_COMMITTED isolation level release the lock when the transaction steps through to the next row.</mrk><mrk mid="3" mtype="seg"> Transactions using the TRANSACTION_SERIALIZABLE or TRANSACTION_REPEATABLE_READ isolation level hold the lock until the transaction is committed, so even a SELECT can prevent updates if a commit is never issued.</mrk><mrk mid="4" mtype="seg"> Transactions using the TRANSACTION_READ_UNCOMMITTED isolation level do not request any locks.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
