<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevdvlpinmemdb.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Using in-memory databases</source>
<seg-source><mrk mid="0" mtype="seg">Using in-memory databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using in-memory databases</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">For testing and developing applications, or for processing transient or reproducible data, you can use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s in-memory database facility.</source>
<seg-source><mrk mid="0" mtype="seg">For testing and developing applications, or for processing transient or reproducible data, you can use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s in-memory database facility.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For testing and developing applications, or for processing transient or reproducible data, you can use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>'s in-memory database facility.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">in-memory databases</source>
<seg-source><mrk mid="0" mtype="seg">in-memory databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">in-memory databases</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">databases</source>
<seg-source><mrk mid="0" mtype="seg">databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">databases</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">in-memory</source>
<seg-source><mrk mid="0" mtype="seg">in-memory</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">in-memory</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">An in-memory database resides completely in main memory, not in the file system. It is useful for testing and developing applications, when you may want to create and discard databases that will never be used again. It is also useful when you need to process only temporary or reproducible data.</source>
<seg-source><mrk mid="0" mtype="seg">An in-memory database resides completely in main memory, not in the file system.</mrk><mrk mid="1" mtype="seg"> It is useful for testing and developing applications, when you may want to create and discard databases that will never be used again.</mrk><mrk mid="2" mtype="seg"> It is also useful when you need to process only temporary or reproducible data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An in-memory database resides completely in main memory, not in the file system.</mrk><mrk mid="1" mtype="seg"> It is useful for testing and developing applications, when you may want to create and discard databases that will never be used again.</mrk><mrk mid="2" mtype="seg"> It is also useful when you need to process only temporary or reproducible data.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">If you have the required memory available, you may also benefit from faster processing (no disk I/O) and from the simplicity of not having to explicitly delete databases you have finished with.</source>
<seg-source><mrk mid="0" mtype="seg">If you have the required memory available, you may also benefit from faster processing (no disk I/O) and from the simplicity of not having to explicitly delete databases you have finished with.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you have the required memory available, you may also benefit from faster processing (no disk I/O) and from the simplicity of not having to explicitly delete databases you have finished with.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Creating an in-memory database</source>
<seg-source><mrk mid="0" mtype="seg">Creating an in-memory database</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creating an in-memory database</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">To create an in-memory database, specify <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> as the JDBC subsubprotocol. For example, to create an in-memory database named <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myDB<ept id="2">&lt;/codeph&gt;</ept> using the embedded driver, use the following connection URL:</source>
<seg-source><mrk mid="0" mtype="seg">To create an in-memory database, specify <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> as the JDBC subsubprotocol.</mrk><mrk mid="1" mtype="seg"> For example, to create an in-memory database named <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myDB<ept id="2">&lt;/codeph&gt;</ept> using the embedded driver, use the following connection URL:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To create an in-memory database, specify <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> as the JDBC subsubprotocol.</mrk><mrk mid="1" mtype="seg"> For example, to create an in-memory database named <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myDB<ept id="2">&lt;/codeph&gt;</ept> using the embedded driver, use the following connection URL:</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">jdbc:derby:memory:myDB;create=true</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby:memory:myDB;create=true</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby:memory:myDB;create=true</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">For the network client driver, use the following connection URL. Because the client driver does not understand the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> subsubprotocol, you must include it in the database name:</source>
<seg-source><mrk mid="0" mtype="seg">For the network client driver, use the following connection URL.</mrk><mrk mid="1" mtype="seg"> Because the client driver does not understand the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> subsubprotocol, you must include it in the database name:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For the network client driver, use the following connection URL.</mrk><mrk mid="1" mtype="seg"> Because the client driver does not understand the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="1">&lt;/codeph&gt;</ept> subsubprotocol, you must include it in the database name:</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;create=true</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;create=true</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;create=true</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Be careful to specify a colon (<bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>:<ept id="1">&lt;/codeph&gt;</ept>) after <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="2">&lt;/codeph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">Be careful to specify a colon (<bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>:<ept id="1">&lt;/codeph&gt;</ept>) after <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="2">&lt;/codeph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Be careful to specify a colon (<bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>:<ept id="1">&lt;/codeph&gt;</ept>) after <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>memory<ept id="2">&lt;/codeph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">Referring to in-memory databases</source>
<seg-source><mrk mid="0" mtype="seg">Referring to in-memory databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Referring to in-memory databases</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">When you create or refer to an in-memory database, any path that is not absolute is interpreted as relative to the system directory, just as with file system databases. For example, if the system directory is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>C:\myderby<ept id="1">&lt;/codeph&gt;</ept>, the following paths are regarded as equivalent:</source>
<seg-source><mrk mid="0" mtype="seg">When you create or refer to an in-memory database, any path that is not absolute is interpreted as relative to the system directory, just as with file system databases.</mrk><mrk mid="1" mtype="seg"> For example, if the system directory is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>C:\myderby<ept id="1">&lt;/codeph&gt;</ept>, the following paths are regarded as equivalent:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you create or refer to an in-memory database, any path that is not absolute is interpreted as relative to the system directory, just as with file system databases.</mrk><mrk mid="1" mtype="seg"> For example, if the system directory is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>C:\myderby<ept id="1">&lt;/codeph&gt;</ept>, the following paths are regarded as equivalent:</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">jdbc:derby:memory:db jdbc:derby:memory:C:\myderby\db</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby:memory:db jdbc:derby:memory:C:\myderby\db</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby:memory:db jdbc:derby:memory:C:\myderby\db</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Similarly, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> treats the following URLs as names for the same in-memory database:</source>
<seg-source><mrk mid="0" mtype="seg">Similarly, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> treats the following URLs as names for the same in-memory database:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Similarly, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> treats the following URLs as names for the same in-memory database:</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">jdbc:derby:memory:/home/myname/db jdbc:derby:memory:/home/myname/../myname/db</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby:memory:/home/myname/db jdbc:derby:memory:/home/myname/../myname/db</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby:memory:/home/myname/db jdbc:derby:memory:/home/myname/../myname/db</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="cdevdvlp40350.dita#cdevdvlp40350"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> has more information on database paths.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="cdevdvlp40350.dita#cdevdvlp40350"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> has more information on database paths.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="cdevdvlp40350.dita#cdevdvlp40350"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> has more information on database paths.</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">Using in-memory databases</source>
<seg-source><mrk mid="0" mtype="seg">Using in-memory databases</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using in-memory databases</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">When you use an in-memory database, you need to make sure to configure the heap and the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> page cache size. See "Configure <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> to use an in-memory database" in <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/cittuning"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> for details.</source>
<seg-source><mrk mid="0" mtype="seg">When you use an in-memory database, you need to make sure to configure the heap and the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> page cache size.</mrk><mrk mid="1" mtype="seg"> See "Configure <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> to use an in-memory database" in <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/cittuning"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> for details.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you use an in-memory database, you need to make sure to configure the heap and the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> page cache size.</mrk><mrk mid="1" mtype="seg"> See "Configure <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> to use an in-memory database" in <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/cittuning"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> for details.</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">For examples of how to use an in-memory database, see some of the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> command examples in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citutilities"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> (<bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>execute<ept id="3">&lt;/codeph&gt;</ept> and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>async<ept id="4">&lt;/codeph&gt;</ept>, for example).</source>
<seg-source><mrk mid="0" mtype="seg">For examples of how to use an in-memory database, see some of the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> command examples in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citutilities"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> (<bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>execute<ept id="3">&lt;/codeph&gt;</ept> and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>async<ept id="4">&lt;/codeph&gt;</ept>, for example).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For examples of how to use an in-memory database, see some of the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> command examples in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citutilities"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> (<bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>execute<ept id="3">&lt;/codeph&gt;</ept> and <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>async<ept id="4">&lt;/codeph&gt;</ept>, for example).</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Removing an in-memory database</source>
<seg-source><mrk mid="0" mtype="seg">Removing an in-memory database</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Removing an in-memory database</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">To remove an in-memory database, use the connection URL attribute <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>drop<ept id="1">&lt;/i&gt;</ept> as follows:</source>
<seg-source><mrk mid="0" mtype="seg">To remove an in-memory database, use the connection URL attribute <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>drop<ept id="1">&lt;/i&gt;</ept> as follows:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To remove an in-memory database, use the connection URL attribute <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>drop<ept id="1">&lt;/i&gt;</ept> as follows:</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">jdbc:derby:memory:myDB;drop=true</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby:memory:myDB;drop=true</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby:memory:myDB;drop=true</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;drop=true</source>
<seg-source><mrk mid="0" mtype="seg">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;drop=true</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jdbc:derby://<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>myhost<ept id="1">&lt;/i&gt;</ept>:1527/memory:myDB;drop=true</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">You can shut down an in-memory database using the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shutdown=true<ept id="1">&lt;/i&gt;</ept> attribute before you drop the database, but this is optional. Dropping the database also performs the shutdown.</source>
<seg-source><mrk mid="0" mtype="seg">You can shut down an in-memory database using the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shutdown=true<ept id="1">&lt;/i&gt;</ept> attribute before you drop the database, but this is optional.</mrk><mrk mid="1" mtype="seg"> Dropping the database also performs the shutdown.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can shut down an in-memory database using the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>shutdown=true<ept id="1">&lt;/i&gt;</ept> attribute before you drop the database, but this is optional.</mrk><mrk mid="1" mtype="seg"> Dropping the database also performs the shutdown.</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">When you drop the database, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues what appears to be an error but is actually an indication of success. You need to catch error 08006, as described in "The WwdEmbedded program" in <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citgetstart"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">When you drop the database, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues what appears to be an error but is actually an indication of success.</mrk><mrk mid="1" mtype="seg"> You need to catch error 08006, as described in "The WwdEmbedded program" in <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citgetstart"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you drop the database, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> issues what appears to be an error but is actually an indication of success.</mrk><mrk mid="1" mtype="seg"> You need to catch error 08006, as described in "The WwdEmbedded program" in <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citgetstart"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">If user <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecure36127.dita#cdevcsecure36127"&gt;</bpt>authentication<ept id="1">&lt;/xref&gt;</ept> and <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecure36595.dita#cdevcsecure36595"&gt;</bpt>SQL authorization<ept id="2">&lt;/xref&gt;</ept> are both enabled, only the <bpt id="3" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="3">&lt;/xref&gt;</ept> can drop the database.</source>
<seg-source><mrk mid="0" mtype="seg">If user <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecure36127.dita#cdevcsecure36127"&gt;</bpt>authentication<ept id="1">&lt;/xref&gt;</ept> and <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecure36595.dita#cdevcsecure36595"&gt;</bpt>SQL authorization<ept id="2">&lt;/xref&gt;</ept> are both enabled, only the <bpt id="3" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="3">&lt;/xref&gt;</ept> can drop the database.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If user <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecure36127.dita#cdevcsecure36127"&gt;</bpt>authentication<ept id="1">&lt;/xref&gt;</ept> and <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecure36595.dita#cdevcsecure36595"&gt;</bpt>SQL authorization<ept id="2">&lt;/xref&gt;</ept> are both enabled, only the <bpt id="3" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="3">&lt;/xref&gt;</ept> can drop the database.</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">An in-memory database is automatically removed if any of the following happens:</source>
<seg-source><mrk mid="0" mtype="seg">An in-memory database is automatically removed if any of the following happens:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An in-memory database is automatically removed if any of the following happens:</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">The Java Virtual Machine (JVM) is shut down normally (for example, if you exit the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> tool)</source>
<seg-source><mrk mid="0" mtype="seg">The Java Virtual Machine (JVM) is shut down normally (for example, if you exit the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> tool)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The Java Virtual Machine (JVM) is shut down normally (for example, if you exit the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="1">&lt;/codeph&gt;</ept> tool)</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">The JVM crashes</source>
<seg-source><mrk mid="0" mtype="seg">The JVM crashes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The JVM crashes</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en">The machine you are running on crashes or shuts down</source>
<seg-source><mrk mid="0" mtype="seg">The machine you are running on crashes or shuts down</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The machine you are running on crashes or shuts down</mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">Persisting an in-memory database</source>
<seg-source><mrk mid="0" mtype="seg">Persisting an in-memory database</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Persisting an in-memory database</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en">If you create an in-memory database and then decided that you want to keep it after all, you can use one of the backup system procedures (SYSCS_UTIL.SYSCS_BACKUP_DATABASE, for example) to persist it. You can then boot it as an in-memory database at a later time, or use it as a normal file system database. See "Backing up and restoring databases" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citadmin"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for information on using the backup procedures.</source>
<seg-source><mrk mid="0" mtype="seg">If you create an in-memory database and then decided that you want to keep it after all, you can use one of the backup system procedures (SYSCS_UTIL.SYSCS_BACKUP_DATABASE, for example) to persist it.</mrk><mrk mid="1" mtype="seg"> You can then boot it as an in-memory database at a later time, or use it as a normal file system database.</mrk><mrk mid="2" mtype="seg"> See "Backing up and restoring databases" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citadmin"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for information on using the backup procedures.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you create an in-memory database and then decided that you want to keep it after all, you can use one of the backup system procedures (SYSCS_UTIL.SYSCS_BACKUP_DATABASE, for example) to persist it.</mrk><mrk mid="1" mtype="seg"> You can then boot it as an in-memory database at a later time, or use it as a normal file system database.</mrk><mrk mid="2" mtype="seg"> See "Backing up and restoring databases" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citadmin"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for information on using the backup procedures.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
