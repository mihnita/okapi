<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj28468.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Capitalization and special characters</source>
<seg-source><mrk mid="0" mtype="seg">Capitalization and special characters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Capitalization and special characters</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">Case sensitivity of keywords and identifiers</source>
<seg-source><mrk mid="0" mtype="seg">Case sensitivity of keywords and identifiers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Case sensitivity of keywords and identifiers</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Keywords</source>
<seg-source><mrk mid="0" mtype="seg">Keywords</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Keywords</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">case insensitivity of</source>
<seg-source><mrk mid="0" mtype="seg">case insensitivity of</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">case insensitivity of</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Special characters</source>
<seg-source><mrk mid="0" mtype="seg">Special characters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Special characters</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">escaping in SQL statements</source>
<seg-source><mrk mid="0" mtype="seg">escaping in SQL statements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">escaping in SQL statements</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Escape character</source>
<seg-source><mrk mid="0" mtype="seg">Escape character</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Escape character</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">for single-quotation mark</source>
<seg-source><mrk mid="0" mtype="seg">for single-quotation mark</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">for single-quotation mark</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">Strings</source>
<seg-source><mrk mid="0" mtype="seg">Strings</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Strings</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">delimited by single quotation marks within SQL statements</source>
<seg-source><mrk mid="0" mtype="seg">delimited by single quotation marks within SQL statements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">delimited by single quotation marks within SQL statements</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Unicode escapes</source>
<seg-source><mrk mid="0" mtype="seg">Unicode escapes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unicode escapes</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">support for in SQL statements</source>
<seg-source><mrk mid="0" mtype="seg">support for in SQL statements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">support for in SQL statements</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Java identifiers</source>
<seg-source><mrk mid="0" mtype="seg">Java identifiers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Java identifiers</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">case sensitivity of within SQL</source>
<seg-source><mrk mid="0" mtype="seg">case sensitivity of within SQL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">case sensitivity of within SQL</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">* as wildcard in SQL SELECT</source>
<seg-source><mrk mid="0" mtype="seg">* as wildcard in SQL SELECT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">* as wildcard in SQL SELECT</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">% as wildcard in SQL</source>
<seg-source><mrk mid="0" mtype="seg">% as wildcard in SQL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">% as wildcard in SQL</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">_ as wildcard within SQL</source>
<seg-source><mrk mid="0" mtype="seg">_ as wildcard within SQL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_ as wildcard within SQL</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">Wildcards in SQL</source>
<seg-source><mrk mid="0" mtype="seg">Wildcards in SQL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wildcards in SQL</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">Comment delimiters within SQL</source>
<seg-source><mrk mid="0" mtype="seg">Comment delimiters within SQL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Comment delimiters within SQL</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">-- (comment delimiters within SQL)</source>
<seg-source><mrk mid="0" mtype="seg">-- (comment delimiters within SQL)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">-- (comment delimiters within SQL)</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">Using the classes and methods of JDBC, you submit SQL statements to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> as strings. The character set permitted for strings containing SQL statements is Unicode. Within these strings, the following rules apply:</source>
<seg-source><mrk mid="0" mtype="seg">Using the classes and methods of JDBC, you submit SQL statements to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> as strings.</mrk><mrk mid="1" mtype="seg"> The character set permitted for strings containing SQL statements is Unicode.</mrk><mrk mid="2" mtype="seg"> Within these strings, the following rules apply:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using the classes and methods of JDBC, you submit SQL statements to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> as strings.</mrk><mrk mid="1" mtype="seg"> The character set permitted for strings containing SQL statements is Unicode.</mrk><mrk mid="2" mtype="seg"> Within these strings, the following rules apply:</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">Double quotation marks delimit special identifiers referred to in SQL-92 as <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>delimited identifiers<ept id="1">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">Double quotation marks delimit special identifiers referred to in SQL-92 as <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>delimited identifiers<ept id="1">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Double quotation marks delimit special identifiers referred to in SQL-92 as <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>delimited identifiers<ept id="1">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Single quotation marks delimit character strings.</source>
<seg-source><mrk mid="0" mtype="seg">Single quotation marks delimit character strings.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Single quotation marks delimit character strings.</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">Within a character string, to represent a single quotation mark or apostrophe, use two single quotation marks. (In other words, a single quotation mark is the escape character for a single quotation mark.)</source>
<seg-source><mrk mid="0" mtype="seg">Within a character string, to represent a single quotation mark or apostrophe, use two single quotation marks.</mrk><mrk mid="1" mtype="seg"> (In other words, a single quotation mark is the escape character for a single quotation mark.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Within a character string, to represent a single quotation mark or apostrophe, use two single quotation marks.</mrk><mrk mid="1" mtype="seg"> (In other words, a single quotation mark is the escape character for a single quotation mark.)</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">A double quotation mark does not need an escape character. To represent a double quotation mark, simply use a double quotation mark. However, note that in a Java program, a double quotation mark requires the backslash escape character.</source>
<seg-source><mrk mid="0" mtype="seg">A double quotation mark does not need an escape character.</mrk><mrk mid="1" mtype="seg"> To represent a double quotation mark, simply use a double quotation mark.</mrk><mrk mid="2" mtype="seg"> However, note that in a Java program, a double quotation mark requires the backslash escape character.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A double quotation mark does not need an escape character.</mrk><mrk mid="1" mtype="seg"> To represent a double quotation mark, simply use a double quotation mark.</mrk><mrk mid="2" mtype="seg"> However, note that in a Java program, a double quotation mark requires the backslash escape character.</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph&gt;</bpt><bpt id="2" ctype="x-b">&lt;b&gt;</bpt>Example:<ept id="2">&lt;/b&gt;</ept><ept id="1">&lt;/ph&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph&gt;</bpt><bpt id="2" ctype="x-b">&lt;b&gt;</bpt>Example:<ept id="2">&lt;/b&gt;</ept><ept id="1">&lt;/ph&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph&gt;</bpt><bpt id="2" ctype="x-b">&lt;b&gt;</bpt>Example:<ept id="2">&lt;/b&gt;</ept><ept id="1">&lt;/ph&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a single quotation mark is the escape character -- for a single quotation mark<ept id="2">&lt;/ph&gt;</ept> VALUES 'Joe''s umbrella' <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- in ij, you don't need to escape the double quotation marks<ept id="3">&lt;/ph&gt;</ept> VALUES 'He said, "hello!"' n = stmt.executeUpdate( "UPDATE aTable setStringcol = 'He said, \"hello!\"'");<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a single quotation mark is the escape character -- for a single quotation mark<ept id="2">&lt;/ph&gt;</ept> VALUES 'Joe''s umbrella' <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- in ij, you don't need to escape the double quotation marks<ept id="3">&lt;/ph&gt;</ept> VALUES 'He said, "hello!"' n = stmt.executeUpdate( "UPDATE aTable setStringcol = 'He said, \"hello!\"'");<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a single quotation mark is the escape character -- for a single quotation mark<ept id="2">&lt;/ph&gt;</ept> VALUES 'Joe''s umbrella' <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- in ij, you don't need to escape the double quotation marks<ept id="3">&lt;/ph&gt;</ept> VALUES 'He said, "hello!"' n = stmt.executeUpdate( "UPDATE aTable setStringcol = 'He said, \"hello!\"'");<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">SQL keywords are case-insensitive. For example, you can type the keyword SELECT as SELECT, Select, select, or sELECT.</source>
<seg-source><mrk mid="0" mtype="seg">SQL keywords are case-insensitive.</mrk><mrk mid="1" mtype="seg"> For example, you can type the keyword SELECT as SELECT, Select, select, or sELECT.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL keywords are case-insensitive.</mrk><mrk mid="1" mtype="seg"> For example, you can type the keyword SELECT as SELECT, Select, select, or sELECT.</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">SQL-92-style identifiers are case-insensitive (see <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="crefsqlj34834.dita#crefsqlj34834"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>), unless they are delimited.</source>
<seg-source><mrk mid="0" mtype="seg">SQL-92-style identifiers are case-insensitive (see <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="crefsqlj34834.dita#crefsqlj34834"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>), unless they are delimited.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL-92-style identifiers are case-insensitive (see <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="crefsqlj34834.dita#crefsqlj34834"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>), unless they are delimited.</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">Java-style identifiers are always case-sensitive.</source>
<seg-source><mrk mid="0" mtype="seg">Java-style identifiers are always case-sensitive.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Java-style identifiers are always case-sensitive.</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">* is a wildcard within a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>.<ept id="1">&lt;/i&gt;</ept> See <bpt id="3" ctype="x-xref">&lt;xref
href="rrefselectexpression.dita#rrefselectexpression/sqlj38441"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>. It can also be the multiplication operator. In all other cases, it is a syntactical metasymbol that flags items you can repeat 0 or more times.</source>
<seg-source><mrk mid="0" mtype="seg">* is a wildcard within a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>.<ept id="1">&lt;/i&gt;</ept></mrk><mrk mid="1" mtype="seg"> See <bpt id="3" ctype="x-xref">&lt;xref
href="rrefselectexpression.dita#rrefselectexpression/sqlj38441"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> It can also be the multiplication operator.</mrk><mrk mid="3" mtype="seg"> In all other cases, it is a syntactical metasymbol that flags items you can repeat 0 or more times.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">* is a wildcard within a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>.<ept id="1">&lt;/i&gt;</ept></mrk><mrk mid="1" mtype="seg"> See <bpt id="3" ctype="x-xref">&lt;xref
href="rrefselectexpression.dita#rrefselectexpression/sqlj38441"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> It can also be the multiplication operator.</mrk><mrk mid="3" mtype="seg"> In all other cases, it is a syntactical metasymbol that flags items you can repeat 0 or more times.</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">% and _ are character wildcards when used within character strings following a LIKE operator (except when escaped with an escape character). See <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">% and _ are character wildcards when used within character strings following a LIKE operator (except when escaped with an escape character).</mrk><mrk mid="1" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">% and _ are character wildcards when used within character strings following a LIKE operator (except when escaped with an escape character).</mrk><mrk mid="1" mtype="seg"> See <bpt id="1" ctype="x-xref">&lt;xref
href="rrefsqlj23075.dita#rrefsqlj23075"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en">Comments can be either single- or multiline as per the SQL-92 standard. Singleline comments start with two dashes (--) and end with the newline character. Multiline comments are bracketed and start with forward slash star (/*), and end with star forward slash (*/). Note that bracketed comments may be nested. Any text between the starting and ending comment character sequence is ignored.</source>
<seg-source><mrk mid="0" mtype="seg">Comments can be either single- or multiline as per the SQL-92 standard.</mrk><mrk mid="1" mtype="seg"> Singleline comments start with two dashes (--) and end with the newline character.</mrk><mrk mid="2" mtype="seg"> Multiline comments are bracketed and start with forward slash star (/*), and end with star forward slash (*/).</mrk><mrk mid="3" mtype="seg"> Note that bracketed comments may be nested.</mrk><mrk mid="4" mtype="seg"> Any text between the starting and ending comment character sequence is ignored.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Comments can be either single- or multiline as per the SQL-92 standard.</mrk><mrk mid="1" mtype="seg"> Singleline comments start with two dashes (--) and end with the newline character.</mrk><mrk mid="2" mtype="seg"> Multiline comments are bracketed and start with forward slash star (/*), and end with star forward slash (*/).</mrk><mrk mid="3" mtype="seg"> Note that bracketed comments may be nested.</mrk><mrk mid="4" mtype="seg"> Any text between the starting and ending comment character sequence is ignored.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
