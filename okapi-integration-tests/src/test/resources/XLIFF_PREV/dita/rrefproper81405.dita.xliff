<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefproper81405.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">derby.database.forceDatabaseLock</source>
<seg-source><mrk mid="0" mtype="seg">derby.database.forceDatabaseLock</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.database.forceDatabaseLock</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">derby.database.forceDatabaseLock</source>
<seg-source><mrk mid="0" mtype="seg">derby.database.forceDatabaseLock</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.database.forceDatabaseLock</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Function</source>
<seg-source><mrk mid="0" mtype="seg">Function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Function</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">On some platforms, if set to true, prevents <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from booting a database if a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is present in the database directory.</source>
<seg-source><mrk mid="0" mtype="seg">On some platforms, if set to true, prevents <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from booting a database if a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is present in the database directory.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">On some platforms, if set to true, prevents <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from booting a database if a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is present in the database directory.</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to prevent two JVMs from accessing a database at one time (and potentially corrupting it) with the use of a file called <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> in the database directory. On some operating systems, the use of a lock file does not guarantee single access, and so <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> only issues a warning and might allow multiple JVM access even when the file is present. (For more information, see "Double-booting system behavior" in the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>.)</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to prevent two JVMs from accessing a database at one time (and potentially corrupting it) with the use of a file called <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> in the database directory.</mrk><mrk mid="1" mtype="seg"> On some operating systems, the use of a lock file does not guarantee single access, and so <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> only issues a warning and might allow multiple JVM access even when the file is present.</mrk><mrk mid="2" mtype="seg"> (For more information, see "Double-booting system behavior" in the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> attempts to prevent two JVMs from accessing a database at one time (and potentially corrupting it) with the use of a file called <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> in the database directory.</mrk><mrk mid="1" mtype="seg"> On some operating systems, the use of a lock file does not guarantee single access, and so <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> only issues a warning and might allow multiple JVM access even when the file is present.</mrk><mrk mid="2" mtype="seg"> (For more information, see "Double-booting system behavior" in the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>.)</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides the property <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>derby.database.forceDatabaseLock<ept id="2">&lt;/i&gt;</ept> for use on platforms that do not provide the ability for <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> to guarantee single JVM access. By default, this property is set to false. When this property is set to true, if <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> finds the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="5">&lt;/i&gt;</ept> file when it attempts to boot the database, it throws an exception and does not boot the database.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides the property <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>derby.database.forceDatabaseLock<ept id="2">&lt;/i&gt;</ept> for use on platforms that do not provide the ability for <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> to guarantee single JVM access.</mrk><mrk mid="1" mtype="seg"> By default, this property is set to false.</mrk><mrk mid="2" mtype="seg"> When this property is set to true, if <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> finds the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="5">&lt;/i&gt;</ept> file when it attempts to boot the database, it throws an exception and does not boot the database.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides the property <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>derby.database.forceDatabaseLock<ept id="2">&lt;/i&gt;</ept> for use on platforms that do not provide the ability for <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> to guarantee single JVM access.</mrk><mrk mid="1" mtype="seg"> By default, this property is set to false.</mrk><mrk mid="2" mtype="seg"> When this property is set to true, if <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> finds the <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="5">&lt;/i&gt;</ept> file when it attempts to boot the database, it throws an exception and does not boot the database.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">This situation can occur even when no other JVMs are accessing the database; in that case, remove the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="1">&lt;/i&gt;</ept> file by hand in order to boot the database. If the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is removed by hand while a JVM is still accessing a <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> database, there is no way for <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to prevent a second VM from starting up and possibly corrupting the database. In this situation no warning message is logged to the error log.</source>
<seg-source><mrk mid="0" mtype="seg">This situation can occur even when no other JVMs are accessing the database; in that case, remove the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="1">&lt;/i&gt;</ept> file by hand in order to boot the database.</mrk><mrk mid="1" mtype="seg"> If the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is removed by hand while a JVM is still accessing a <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> database, there is no way for <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to prevent a second VM from starting up and possibly corrupting the database.</mrk><mrk mid="2" mtype="seg"> In this situation no warning message is logged to the error log.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This situation can occur even when no other JVMs are accessing the database; in that case, remove the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="1">&lt;/i&gt;</ept> file by hand in order to boot the database.</mrk><mrk mid="1" mtype="seg"> If the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>db.lck<ept id="2">&lt;/i&gt;</ept> file is removed by hand while a JVM is still accessing a <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> database, there is no way for <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to prevent a second VM from starting up and possibly corrupting the database.</mrk><mrk mid="2" mtype="seg"> In this situation no warning message is logged to the error log.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Default</source>
<seg-source><mrk mid="0" mtype="seg">Default</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Default</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">False.</source>
<seg-source><mrk mid="0" mtype="seg">False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.database.forceDatabaseLock=true<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.database.forceDatabaseLock=true<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.database.forceDatabaseLock=true<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">Dynamic or static</source>
<seg-source><mrk mid="0" mtype="seg">Dynamic or static</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dynamic or static</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</source>
<seg-source><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
