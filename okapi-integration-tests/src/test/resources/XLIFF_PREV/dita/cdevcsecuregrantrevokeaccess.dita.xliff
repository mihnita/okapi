<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevcsecuregrantrevokeaccess.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Using SQL standard authorization</source>
<seg-source><mrk mid="0" mtype="seg">Using SQL standard authorization</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using SQL standard authorization</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">When the SQL standard authorization mode is enabled, object owners can use the GRANT and REVOKE SQL statements to set the user privileges for specific database objects or for specific SQL actions. They can also use roles to administer privileges.</source>
<seg-source><mrk mid="0" mtype="seg">When the SQL standard authorization mode is enabled, object owners can use the GRANT and REVOKE SQL statements to set the user privileges for specific database objects or for specific SQL actions.</mrk><mrk mid="1" mtype="seg"> They can also use roles to administer privileges.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When the SQL standard authorization mode is enabled, object owners can use the GRANT and REVOKE SQL statements to set the user privileges for specific database objects or for specific SQL actions.</mrk><mrk mid="1" mtype="seg"> They can also use roles to administer privileges.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">user authorizations</source>
<seg-source><mrk mid="0" mtype="seg">user authorizations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">user authorizations</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">granting</source>
<seg-source><mrk mid="0" mtype="seg">granting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">granting</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">user authorizations</source>
<seg-source><mrk mid="0" mtype="seg">user authorizations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">user authorizations</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">revoking</source>
<seg-source><mrk mid="0" mtype="seg">revoking</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">revoking</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">user authorizations</source>
<seg-source><mrk mid="0" mtype="seg">user authorizations</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">user authorizations</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">PUBLIC</source>
<seg-source><mrk mid="0" mtype="seg">PUBLIC</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">PUBLIC</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">GRANT statement</source>
<seg-source><mrk mid="0" mtype="seg">GRANT statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">GRANT statement</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">overview</source>
<seg-source><mrk mid="0" mtype="seg">overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">overview</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">REVOKE statement</source>
<seg-source><mrk mid="0" mtype="seg">REVOKE statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">REVOKE statement</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">overview</source>
<seg-source><mrk mid="0" mtype="seg">overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">overview</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">access control system</source>
<seg-source><mrk mid="0" mtype="seg">access control system</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">access control system</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">SQL2003</source>
<seg-source><mrk mid="0" mtype="seg">SQL2003</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL2003</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">SQL standard authorization mode</source>
<seg-source><mrk mid="0" mtype="seg">SQL standard authorization mode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL standard authorization mode</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">invoker rights</source>
<seg-source><mrk mid="0" mtype="seg">invoker rights</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">invoker rights</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">versus definer rights</source>
<seg-source><mrk mid="0" mtype="seg">versus definer rights</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">versus definer rights</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">definer rights</source>
<seg-source><mrk mid="0" mtype="seg">definer rights</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">definer rights</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">versus invoker rights</source>
<seg-source><mrk mid="0" mtype="seg">versus invoker rights</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">versus invoker rights</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">The SQL standard authorization mode is a SQL2003 compatible access control system. You enable the SQL standard authorization mode by setting the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.database.sqlAuthorization<ept id="1">&lt;/codeph&gt;</ept> property to <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>TRUE<ept id="2">&lt;/codeph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">The SQL standard authorization mode is a SQL2003 compatible access control system.</mrk><mrk mid="1" mtype="seg"> You enable the SQL standard authorization mode by setting the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.database.sqlAuthorization<ept id="1">&lt;/codeph&gt;</ept> property to <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>TRUE<ept id="2">&lt;/codeph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The SQL standard authorization mode is a SQL2003 compatible access control system.</mrk><mrk mid="1" mtype="seg"> You enable the SQL standard authorization mode by setting the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.database.sqlAuthorization<ept id="1">&lt;/codeph&gt;</ept> property to <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>TRUE<ept id="2">&lt;/codeph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">While <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has a simpler database access mode which can be set to provide users with <bpt id="2" ctype="x-varname">&lt;varname&gt;</bpt>full<ept id="2">&lt;/varname&gt;</ept>, <bpt id="3" ctype="x-varname">&lt;varname&gt;</bpt>read-only<ept id="3">&lt;/varname&gt;</ept>, or <bpt id="4" ctype="x-varname">&lt;varname&gt;</bpt>no access<ept id="4">&lt;/varname&gt;</ept> authorization, this simpler access mode is less appropriate for most client-server database configurations. When users or applications issue SQL statements directly against the database, the <bpt id="5" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="5">&lt;/ph&gt;</ept> SQL authorization mode provides a more precise mechanism to limit the actions that users can take on the database.</source>
<seg-source><mrk mid="0" mtype="seg">While <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has a simpler database access mode which can be set to provide users with <bpt id="2" ctype="x-varname">&lt;varname&gt;</bpt>full<ept id="2">&lt;/varname&gt;</ept>, <bpt id="3" ctype="x-varname">&lt;varname&gt;</bpt>read-only<ept id="3">&lt;/varname&gt;</ept>, or <bpt id="4" ctype="x-varname">&lt;varname&gt;</bpt>no access<ept id="4">&lt;/varname&gt;</ept> authorization, this simpler access mode is less appropriate for most client-server database configurations.</mrk><mrk mid="1" mtype="seg"> When users or applications issue SQL statements directly against the database, the <bpt id="5" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="5">&lt;/ph&gt;</ept> SQL authorization mode provides a more precise mechanism to limit the actions that users can take on the database.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">While <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> has a simpler database access mode which can be set to provide users with <bpt id="2" ctype="x-varname">&lt;varname&gt;</bpt>full<ept id="2">&lt;/varname&gt;</ept>, <bpt id="3" ctype="x-varname">&lt;varname&gt;</bpt>read-only<ept id="3">&lt;/varname&gt;</ept>, or <bpt id="4" ctype="x-varname">&lt;varname&gt;</bpt>no access<ept id="4">&lt;/varname&gt;</ept> authorization, this simpler access mode is less appropriate for most client-server database configurations.</mrk><mrk mid="1" mtype="seg"> When users or applications issue SQL statements directly against the database, the <bpt id="5" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="5">&lt;/ph&gt;</ept> SQL authorization mode provides a more precise mechanism to limit the actions that users can take on the database.</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">The GRANT statement is used to grant specific privileges to users or to roles, or to grant roles to users or to roles. The REVOKE statement is used to revoke privileges and role grants. The grant and revoke privileges are:</source>
<seg-source><mrk mid="0" mtype="seg">The GRANT statement is used to grant specific privileges to users or to roles, or to grant roles to users or to roles.</mrk><mrk mid="1" mtype="seg"> The REVOKE statement is used to revoke privileges and role grants.</mrk><mrk mid="2" mtype="seg"> The grant and revoke privileges are:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The GRANT statement is used to grant specific privileges to users or to roles, or to grant roles to users or to roles.</mrk><mrk mid="1" mtype="seg"> The REVOKE statement is used to revoke privileges and role grants.</mrk><mrk mid="2" mtype="seg"> The grant and revoke privileges are:</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">DELETE</source>
<seg-source><mrk mid="0" mtype="seg">DELETE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DELETE</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">EXECUTE</source>
<seg-source><mrk mid="0" mtype="seg">EXECUTE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">EXECUTE</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">INSERT</source>
<seg-source><mrk mid="0" mtype="seg">INSERT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">INSERT</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">SELECT</source>
<seg-source><mrk mid="0" mtype="seg">SELECT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SELECT</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">REFERENCES</source>
<seg-source><mrk mid="0" mtype="seg">REFERENCES</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">REFERENCES</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">TRIGGER</source>
<seg-source><mrk mid="0" mtype="seg">TRIGGER</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TRIGGER</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">UPDATE</source>
<seg-source><mrk mid="0" mtype="seg">UPDATE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UPDATE</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">When a table, view, function, or procedure is created, the person that creates the object is referred to as the <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>owner<ept id="1">&lt;/term&gt;</ept> of the object. Only the object owner and the <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="2">&lt;/xref&gt;</ept> have full privileges on the object. No other users have privileges on the object until the object owner grants privileges to them.</source>
<seg-source><mrk mid="0" mtype="seg">When a table, view, function, or procedure is created, the person that creates the object is referred to as the <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>owner<ept id="1">&lt;/term&gt;</ept> of the object.</mrk><mrk mid="1" mtype="seg"> Only the object owner and the <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="2">&lt;/xref&gt;</ept> have full privileges on the object.</mrk><mrk mid="2" mtype="seg"> No other users have privileges on the object until the object owner grants privileges to them.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a table, view, function, or procedure is created, the person that creates the object is referred to as the <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>owner<ept id="1">&lt;/term&gt;</ept> of the object.</mrk><mrk mid="1" mtype="seg"> Only the object owner and the <bpt id="2" ctype="x-xref">&lt;xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner"&gt;</bpt>database owner<ept id="2">&lt;/xref&gt;</ept> have full privileges on the object.</mrk><mrk mid="2" mtype="seg"> No other users have privileges on the object until the object owner grants privileges to them.</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">Another way of saying that privileges on objects belong to the owner is to call them <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>definer rights<ept id="1">&lt;/term&gt;</ept>, as opposed to <bpt id="2" ctype="x-term">&lt;term&gt;</bpt>invoker rights<ept id="2">&lt;/term&gt;</ept>. This is the terminology used by the SQL standard.</source>
<seg-source><mrk mid="0" mtype="seg">Another way of saying that privileges on objects belong to the owner is to call them <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>definer rights<ept id="1">&lt;/term&gt;</ept>, as opposed to <bpt id="2" ctype="x-term">&lt;term&gt;</bpt>invoker rights<ept id="2">&lt;/term&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> This is the terminology used by the SQL standard.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Another way of saying that privileges on objects belong to the owner is to call them <bpt id="1" ctype="x-term">&lt;term&gt;</bpt>definer rights<ept id="1">&lt;/term&gt;</ept>, as opposed to <bpt id="2" ctype="x-term">&lt;term&gt;</bpt>invoker rights<ept id="2">&lt;/term&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> This is the terminology used by the SQL standard.</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">See the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept> for more information on the GRANT and REVOKE statements.</source>
<seg-source><mrk mid="0" mtype="seg">See the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept> for more information on the GRANT and REVOKE statements.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept> for more information on the GRANT and REVOKE statements.</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en">Public and individual user privileges</source>
<seg-source><mrk mid="0" mtype="seg">Public and individual user privileges</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Public and individual user privileges</mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">The object owner can grant and revoke privileges for specific users, for specific roles, or for all users. The keyword PUBLIC is used to specify all users. When PUBLIC is specified, the privileges affect all current and future users. The privileges granted and revoked to PUBLIC and to individual users or roles are independent. For example, a SELECT privilege on table <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="1">&lt;/codeph&gt;</ept> is granted to both PUBLIC and to the user <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="2">&lt;/codeph&gt;</ept>. The SELECT privilege is later revoked from user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept>, but user <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="4">&lt;/codeph&gt;</ept> has access to table <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="5">&lt;/codeph&gt;</ept> through the PUBLIC privilege.</source>
<seg-source><mrk mid="0" mtype="seg">The object owner can grant and revoke privileges for specific users, for specific roles, or for all users.</mrk><mrk mid="1" mtype="seg"> The keyword PUBLIC is used to specify all users.</mrk><mrk mid="2" mtype="seg"> When PUBLIC is specified, the privileges affect all current and future users.</mrk><mrk mid="3" mtype="seg"> The privileges granted and revoked to PUBLIC and to individual users or roles are independent.</mrk><mrk mid="4" mtype="seg"> For example, a SELECT privilege on table <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="1">&lt;/codeph&gt;</ept> is granted to both PUBLIC and to the user <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="2">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> The SELECT privilege is later revoked from user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept>, but user <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="4">&lt;/codeph&gt;</ept> has access to table <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="5">&lt;/codeph&gt;</ept> through the PUBLIC privilege.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The object owner can grant and revoke privileges for specific users, for specific roles, or for all users.</mrk><mrk mid="1" mtype="seg"> The keyword PUBLIC is used to specify all users.</mrk><mrk mid="2" mtype="seg"> When PUBLIC is specified, the privileges affect all current and future users.</mrk><mrk mid="3" mtype="seg"> The privileges granted and revoked to PUBLIC and to individual users or roles are independent.</mrk><mrk mid="4" mtype="seg"> For example, a SELECT privilege on table <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="1">&lt;/codeph&gt;</ept> is granted to both PUBLIC and to the user <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="2">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> The SELECT privilege is later revoked from user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept>, but user <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="4">&lt;/codeph&gt;</ept> has access to table <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>t<ept id="5">&lt;/codeph&gt;</ept> through the PUBLIC privilege.</mrk></target>
</trans-unit>
<trans-unit id="tu35" restype="x-othertype">
<source xml:lang="en">Exception</source>
<seg-source><mrk mid="0" mtype="seg">Exception</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Exception</mrk></target>
</trans-unit>
<trans-unit id="tu36">
<source xml:lang="en">When you create a view, trigger, or constraint, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> first checks to determine if you have the required privileges at the user level. If you have the user-level privileges, the object is created and is dependent on that user-level privilege. If you do not have the required privileges at the user-level, <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> checks to determine if you have the required privileges at the PUBLIC level. If you have the PUBLIC level privileges, the object is created and is dependent on that PUBLIC level privilege. After the object is created, if the privilege on which the object depends is revoked, the object is automatically dropped. <bpt id="3" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not try to determine if you have other privileges that can replace the privileges that are being revoked.</source>
<seg-source><mrk mid="0" mtype="seg">When you create a view, trigger, or constraint, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> first checks to determine if you have the required privileges at the user level.</mrk><mrk mid="1" mtype="seg"> If you have the user-level privileges, the object is created and is dependent on that user-level privilege.</mrk><mrk mid="2" mtype="seg"> If you do not have the required privileges at the user-level, <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> checks to determine if you have the required privileges at the PUBLIC level.</mrk><mrk mid="3" mtype="seg"> If you have the PUBLIC level privileges, the object is created and is dependent on that PUBLIC level privilege.</mrk><mrk mid="4" mtype="seg"> After the object is created, if the privilege on which the object depends is revoked, the object is automatically dropped.</mrk><mrk mid="5" mtype="seg"> <bpt id="3" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not try to determine if you have other privileges that can replace the privileges that are being revoked.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you create a view, trigger, or constraint, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> first checks to determine if you have the required privileges at the user level.</mrk><mrk mid="1" mtype="seg"> If you have the user-level privileges, the object is created and is dependent on that user-level privilege.</mrk><mrk mid="2" mtype="seg"> If you do not have the required privileges at the user-level, <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> checks to determine if you have the required privileges at the PUBLIC level.</mrk><mrk mid="3" mtype="seg"> If you have the PUBLIC level privileges, the object is created and is dependent on that PUBLIC level privilege.</mrk><mrk mid="4" mtype="seg"> After the object is created, if the privilege on which the object depends is revoked, the object is automatically dropped.</mrk><mrk mid="5" mtype="seg"> <bpt id="3" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not try to determine if you have other privileges that can replace the privileges that are being revoked.</mrk></target>
</trans-unit>
<trans-unit id="tu37">
<source xml:lang="en">Example 1</source>
<seg-source><mrk mid="0" mtype="seg">Example 1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 1</mrk></target>
</trans-unit>
<trans-unit id="tu38">
<source xml:lang="en">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> on table <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="4">&lt;/codeph&gt;</ept>. User <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="5">&lt;/codeph&gt;</ept> grants SELECT privileges to PUBLIC on table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="6">&lt;/codeph&gt;</ept>. User <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="7">&lt;/codeph&gt;</ept> creates view <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="8">&lt;/codeph&gt;</ept> with the statement <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from zhi.t1<ept id="9">&lt;/codeph&gt;</ept>. The view depends on the user-level privilege that user <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="10">&lt;/codeph&gt;</ept> has on <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="11">&lt;/codeph&gt;</ept>. Subsequently, user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="12">&lt;/codeph&gt;</ept> revokes SELECT privileges from user <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="13">&lt;/codeph&gt;</ept> on table <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="14">&lt;/codeph&gt;</ept>. As a result, the view <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="15">&lt;/codeph&gt;</ept> is dropped.</source>
<seg-source><mrk mid="0" mtype="seg">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> on table <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> User <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="5">&lt;/codeph&gt;</ept> grants SELECT privileges to PUBLIC on table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="6">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> User <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="7">&lt;/codeph&gt;</ept> creates view <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="8">&lt;/codeph&gt;</ept> with the statement <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from zhi.t1<ept id="9">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> The view depends on the user-level privilege that user <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="10">&lt;/codeph&gt;</ept> has on <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="11">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> Subsequently, user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="12">&lt;/codeph&gt;</ept> revokes SELECT privileges from user <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="13">&lt;/codeph&gt;</ept> on table <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="14">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> As a result, the view <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="15">&lt;/codeph&gt;</ept> is dropped.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to user <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> on table <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> User <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="5">&lt;/codeph&gt;</ept> grants SELECT privileges to PUBLIC on table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="6">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> User <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="7">&lt;/codeph&gt;</ept> creates view <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="8">&lt;/codeph&gt;</ept> with the statement <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from zhi.t1<ept id="9">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> The view depends on the user-level privilege that user <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="10">&lt;/codeph&gt;</ept> has on <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="11">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> Subsequently, user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>zhi<ept id="12">&lt;/codeph&gt;</ept> revokes SELECT privileges from user <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="13">&lt;/codeph&gt;</ept> on table <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="14">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> As a result, the view <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="15">&lt;/codeph&gt;</ept> is dropped.</mrk></target>
</trans-unit>
<trans-unit id="tu39">
<source xml:lang="en">Example 2</source>
<seg-source><mrk mid="0" mtype="seg">Example 2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 2</mrk></target>
</trans-unit>
<trans-unit id="tu40">
<source xml:lang="en">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to PUBLIC. User <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> creates view <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="4">&lt;/codeph&gt;</ept> with the statement <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from anita.t1<ept id="5">&lt;/codeph&gt;</ept>. The view depends on the PUBLIC level privilege that user <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="6">&lt;/codeph&gt;</ept> has on <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="7">&lt;/codeph&gt;</ept>, since user <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="8">&lt;/codeph&gt;</ept> does not have user-level privileges on table <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="9">&lt;/codeph&gt;</ept> when he creates the view <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="10">&lt;/codeph&gt;</ept>. Subsequently, user <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="11">&lt;/codeph&gt;</ept> grants SELECT privileges to user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="12">&lt;/codeph&gt;</ept> on table <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>anita.t1<ept id="13">&lt;/codeph&gt;</ept>. The view <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="14">&lt;/codeph&gt;</ept> continues to depend on the PUBLIC level privilege that user <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="15">&lt;/codeph&gt;</ept> has on <bpt id="16" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="16">&lt;/codeph&gt;</ept>. When user <bpt id="17" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="17">&lt;/codeph&gt;</ept> revokes SELECT privileges from PUBLIC on table <bpt id="18" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="18">&lt;/codeph&gt;</ept>, the view <bpt id="19" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="19">&lt;/codeph&gt;</ept> is dropped.</source>
<seg-source><mrk mid="0" mtype="seg">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to PUBLIC.</mrk><mrk mid="1" mtype="seg"> User <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> creates view <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="4">&lt;/codeph&gt;</ept> with the statement <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from anita.t1<ept id="5">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> The view depends on the PUBLIC level privilege that user <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="6">&lt;/codeph&gt;</ept> has on <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="7">&lt;/codeph&gt;</ept>, since user <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="8">&lt;/codeph&gt;</ept> does not have user-level privileges on table <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="9">&lt;/codeph&gt;</ept> when he creates the view <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="10">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> Subsequently, user <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="11">&lt;/codeph&gt;</ept> grants SELECT privileges to user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="12">&lt;/codeph&gt;</ept> on table <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>anita.t1<ept id="13">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> The view <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="14">&lt;/codeph&gt;</ept> continues to depend on the PUBLIC level privilege that user <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="15">&lt;/codeph&gt;</ept> has on <bpt id="16" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="16">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> When user <bpt id="17" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="17">&lt;/codeph&gt;</ept> revokes SELECT privileges from PUBLIC on table <bpt id="18" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="18">&lt;/codeph&gt;</ept>, the view <bpt id="19" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="19">&lt;/codeph&gt;</ept> is dropped.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">User <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="1">&lt;/codeph&gt;</ept> creates table <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="2">&lt;/codeph&gt;</ept> and grants SELECT privileges to PUBLIC.</mrk><mrk mid="1" mtype="seg"> User <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="3">&lt;/codeph&gt;</ept> creates view <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt>v1<ept id="4">&lt;/codeph&gt;</ept> with the statement <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>SELECT * from anita.t1<ept id="5">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> The view depends on the PUBLIC level privilege that user <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="6">&lt;/codeph&gt;</ept> has on <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="7">&lt;/codeph&gt;</ept>, since user <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="8">&lt;/codeph&gt;</ept> does not have user-level privileges on table <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="9">&lt;/codeph&gt;</ept> when he creates the view <bpt id="10" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="10">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> Subsequently, user <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="11">&lt;/codeph&gt;</ept> grants SELECT privileges to user <bpt id="12" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="12">&lt;/codeph&gt;</ept> on table <bpt id="13" ctype="x-codeph">&lt;codeph&gt;</bpt>anita.t1<ept id="13">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> The view <bpt id="14" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="14">&lt;/codeph&gt;</ept> continues to depend on the PUBLIC level privilege that user <bpt id="15" ctype="x-codeph">&lt;codeph&gt;</bpt>harry<ept id="15">&lt;/codeph&gt;</ept> has on <bpt id="16" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="16">&lt;/codeph&gt;</ept>.</mrk><mrk mid="5" mtype="seg"> When user <bpt id="17" ctype="x-codeph">&lt;codeph&gt;</bpt>anita<ept id="17">&lt;/codeph&gt;</ept> revokes SELECT privileges from PUBLIC on table <bpt id="18" ctype="x-codeph">&lt;codeph&gt;</bpt>t1<ept id="18">&lt;/codeph&gt;</ept>, the view <bpt id="19" ctype="x-codeph">&lt;codeph&gt;</bpt>harry.v1<ept id="19">&lt;/codeph&gt;</ept> is dropped.</mrk></target>
</trans-unit>
<trans-unit id="tu41">
<source xml:lang="en">See <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecureprivileges.dita#cdevcsecureprivileges"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for more information.</source>
<seg-source><mrk mid="0" mtype="seg">See <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecureprivileges.dita#cdevcsecureprivileges"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for more information.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See <bpt id="1" ctype="x-xref">&lt;xref href="cdevcsecureprivileges.dita#cdevcsecureprivileges"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for more information.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
