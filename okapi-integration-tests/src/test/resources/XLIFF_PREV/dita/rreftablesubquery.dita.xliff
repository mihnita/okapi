<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rreftablesubquery.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">tableSubquery</source>
<seg-source><mrk mid="0" mtype="seg">tableSubquery</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">tableSubquery</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">tableSubquery</source>
<seg-source><mrk mid="0" mtype="seg">tableSubquery</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">tableSubquery</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="1">&lt;/i&gt;</ept> is a subquery that returns multiple rows.</source>
<seg-source><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="1">&lt;/i&gt;</ept> is a subquery that returns multiple rows.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="1">&lt;/i&gt;</ept> is a subquery that returns multiple rows.</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Unlike a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefscalarsubquery.dita#rrefscalarsubquery"&gt;</bpt>scalarSubquery<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="3">&lt;/i&gt;</ept> is allowed only:</source>
<seg-source><mrk mid="0" mtype="seg">Unlike a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefscalarsubquery.dita#rrefscalarsubquery"&gt;</bpt>scalarSubquery<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="3">&lt;/i&gt;</ept> is allowed only:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unlike a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefscalarsubquery.dita#rrefscalarsubquery"&gt;</bpt>scalarSubquery<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>tableSubquery<ept id="3">&lt;/i&gt;</ept> is allowed only:</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">As a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg">As a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">As a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">With EXISTS, IN, or quantified comparisons</source>
<seg-source><mrk mid="0" mtype="seg">With EXISTS, IN, or quantified comparisons</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">With EXISTS, IN, or quantified comparisons</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">When used as a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept>, or with EXISTS, it can return multiple columns.</source>
<seg-source><mrk mid="0" mtype="seg">When used as a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept>, or with EXISTS, it can return multiple columns.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When used as a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rreftableexpression.dita#rreftableexpression"&gt;</bpt>tableExpression<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> in a <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21583.dita#rrefsqlj21583"&gt;</bpt>FROM clause<ept id="3">&lt;/xref&gt;</ept>, or with EXISTS, it can return multiple columns.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">When used with IN or quantified comparisons, it must return a single column.</source>
<seg-source><mrk mid="0" mtype="seg">When used with IN or quantified comparisons, it must return a single column.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When used with IN or quantified comparisons, it must return a single column.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21571.dita#rrefsqlj21571"&gt;</bpt>query<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21571.dita#rrefsqlj21571"&gt;</bpt>query<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj21571.dita#rrefsqlj21571"&gt;</bpt>query<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ] [ <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ] [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used as a tableExpression in a FROM clause<ept id="2">&lt;/ph&gt;</ept> SELECT VirtualFlightTable.flight_ID FROM (SELECT flight_ID, orig_airport, dest_airport FROM Flights WHERE (orig_airport = 'SFO' OR dest_airport = 'SCL') ) AS VirtualFlightTable <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery (values expression) used as a tableExpression -- in a FROM clause<ept id="3">&lt;/ph&gt;</ept> SELECT mycol1 FROM (VALUES (1, 2), (3, 4)) AS mytable (mycol1, mycol2) <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with EXISTS<ept id="4">&lt;/ph&gt;</ept> SELECT * FROM Flights WHERE EXISTS (SELECT * FROM Flights WHERE dest_airport = 'SFO' AND orig_airport = 'GRU') <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with IN<ept id="5">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL') <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery with ORDER BY and FETCH FIRST clauses<ept id="6">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL' ORDER BY flight_id FETCH FIRST 12 ROWS ONLY) <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with a quantified comparison<ept id="7">&lt;/ph&gt;</ept> SELECT NAME, COMM FROM STAFF WHERE COMM &gt; (SELECT AVG(BONUS + 800) FROM EMPLOYEE WHERE COMM &lt; 5000)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used as a tableExpression in a FROM clause<ept id="2">&lt;/ph&gt;</ept> SELECT VirtualFlightTable.flight_ID FROM (SELECT flight_ID, orig_airport, dest_airport FROM Flights WHERE (orig_airport = 'SFO' OR dest_airport = 'SCL') ) AS VirtualFlightTable <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery (values expression) used as a tableExpression -- in a FROM clause<ept id="3">&lt;/ph&gt;</ept> SELECT mycol1 FROM (VALUES (1, 2), (3, 4)) AS mytable (mycol1, mycol2) <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with EXISTS<ept id="4">&lt;/ph&gt;</ept> SELECT * FROM Flights WHERE EXISTS (SELECT * FROM Flights WHERE dest_airport = 'SFO' AND orig_airport = 'GRU') <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with IN<ept id="5">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL') <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery with ORDER BY and FETCH FIRST clauses<ept id="6">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL' ORDER BY flight_id FETCH FIRST 12 ROWS ONLY) <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with a quantified comparison<ept id="7">&lt;/ph&gt;</ept> SELECT NAME, COMM FROM STAFF WHERE COMM &gt; (SELECT AVG(BONUS + 800) FROM EMPLOYEE WHERE COMM &lt; 5000)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used as a tableExpression in a FROM clause<ept id="2">&lt;/ph&gt;</ept> SELECT VirtualFlightTable.flight_ID FROM (SELECT flight_ID, orig_airport, dest_airport FROM Flights WHERE (orig_airport = 'SFO' OR dest_airport = 'SCL') ) AS VirtualFlightTable <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery (values expression) used as a tableExpression -- in a FROM clause<ept id="3">&lt;/ph&gt;</ept> SELECT mycol1 FROM (VALUES (1, 2), (3, 4)) AS mytable (mycol1, mycol2) <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with EXISTS<ept id="4">&lt;/ph&gt;</ept> SELECT * FROM Flights WHERE EXISTS (SELECT * FROM Flights WHERE dest_airport = 'SFO' AND orig_airport = 'GRU') <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with IN<ept id="5">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL') <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery with ORDER BY and FETCH FIRST clauses<ept id="6">&lt;/ph&gt;</ept> SELECT flight_id, segment_number FROM Flights WHERE flight_id IN (SELECT flight_ID FROM Flights WHERE orig_airport = 'SFO' OR dest_airport = 'SCL' ORDER BY flight_id FETCH FIRST 12 ROWS ONLY) <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- a subquery used with a quantified comparison<ept id="7">&lt;/ph&gt;</ept> SELECT NAME, COMM FROM STAFF WHERE COMM &gt; (SELECT AVG(BONUS + 800) FROM EMPLOYEE WHERE COMM &lt; 5000)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
