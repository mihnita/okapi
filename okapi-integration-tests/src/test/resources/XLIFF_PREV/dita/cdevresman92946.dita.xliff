<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevresman92946.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Shutting down or creating a database</source>
<seg-source><mrk mid="0" mtype="seg">Shutting down or creating a database</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Shutting down or creating a database</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">If you need to shut down or create a database, it is easiest just to work with the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-specific implementations of interfaces, as shown in these examples.</source>
<seg-source><mrk mid="0" mtype="seg">If you need to shut down or create a database, it is easiest just to work with the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-specific implementations of interfaces, as shown in these examples.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you need to shut down or create a database, it is easiest just to work with the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-specific implementations of interfaces, as shown in these examples.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">javax.sql.XADataSource xads = makeXADataSource(mydb, true); <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>// example of setting property directory using <ept id="1">&lt;/b&gt;</ept> // <bpt id="2" ctype="x-b">&lt;b&gt;</bpt><bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> 's <ept id="2">&lt;/b&gt;</ept>XADataSource object import org.apache.derby.jdbc.EmbeddedXADataSource; import javax.sql.XADataSource; <bpt id="4" ctype="x-b">&lt;b&gt;</bpt>// dbname is the database name // if create is true, create the database if not already created<ept id="4">&lt;/b&gt;</ept> XADataSource makeXADataSource (String dbname, boolean create) { <it id="5" ctype="x-b" pos="open">&lt;b&gt;</it>// // If your application runs on JDK 1.6 or higher, then // you will use the JDBC4 variant of this class: // EmbeddedXADataSource40. //<it id="5" ctype="x-b" pos="close">&lt;/b&gt;</it> EmbeddedXADataSource xads = new EmbeddedXADataSource(); <bpt id="6" ctype="x-b">&lt;b&gt;</bpt> // use <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> 's setDatabaseName call<ept id="6">&lt;/b&gt;</ept> xads.setDatabaseName(dbname); if (create) xads.setCreateDatabase("create"); return xads; }</source>
<seg-source><mrk mid="0" mtype="seg">javax.sql.XADataSource xads = makeXADataSource(mydb, true); <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>// example of setting property directory using <ept id="1">&lt;/b&gt;</ept> // <bpt id="2" ctype="x-b">&lt;b&gt;</bpt><bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> 's <ept id="2">&lt;/b&gt;</ept>XADataSource object import org.apache.derby.jdbc.EmbeddedXADataSource; import javax.sql.XADataSource; <bpt id="4" ctype="x-b">&lt;b&gt;</bpt>// dbname is the database name // if create is true, create the database if not already created<ept id="4">&lt;/b&gt;</ept> XADataSource makeXADataSource (String dbname, boolean create) { <it id="5" ctype="x-b" pos="open">&lt;b&gt;</it>// // If your application runs on JDK 1.6 or higher, then // you will use the JDBC4 variant of this class: // EmbeddedXADataSource40.</mrk><mrk mid="1" mtype="seg"> //<it id="5" ctype="x-b" pos="close">&lt;/b&gt;</it> EmbeddedXADataSource xads = new EmbeddedXADataSource(); <bpt id="6" ctype="x-b">&lt;b&gt;</bpt> // use <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> 's setDatabaseName call<ept id="6">&lt;/b&gt;</ept> xads.setDatabaseName(dbname); if (create) xads.setCreateDatabase("create"); return xads; }</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">javax.sql.XADataSource xads = makeXADataSource(mydb, true); <bpt id="1" ctype="x-b">&lt;b&gt;</bpt>// example of setting property directory using <ept id="1">&lt;/b&gt;</ept> // <bpt id="2" ctype="x-b">&lt;b&gt;</bpt><bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> 's <ept id="2">&lt;/b&gt;</ept>XADataSource object import org.apache.derby.jdbc.EmbeddedXADataSource; import javax.sql.XADataSource; <bpt id="4" ctype="x-b">&lt;b&gt;</bpt>// dbname is the database name // if create is true, create the database if not already created<ept id="4">&lt;/b&gt;</ept> XADataSource makeXADataSource (String dbname, boolean create) { <it id="5" ctype="x-b" pos="open">&lt;b&gt;</it>// // If your application runs on JDK 1.6 or higher, then // you will use the JDBC4 variant of this class: // EmbeddedXADataSource40.</mrk><mrk mid="1" mtype="seg"> //<it id="5" ctype="x-b" pos="close">&lt;/b&gt;</it> EmbeddedXADataSource xads = new EmbeddedXADataSource(); <bpt id="6" ctype="x-b">&lt;b&gt;</bpt> // use <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> 's setDatabaseName call<ept id="6">&lt;/b&gt;</ept> xads.setDatabaseName(dbname); if (create) xads.setCreateDatabase("create"); return xads; }</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Setting the property does not create or shut down the database. The database is not actually created or shut down until the next connection request.</source>
<seg-source><mrk mid="0" mtype="seg">Setting the property does not create or shut down the database.</mrk><mrk mid="1" mtype="seg"> The database is not actually created or shut down until the next connection request.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Setting the property does not create or shut down the database.</mrk><mrk mid="1" mtype="seg"> The database is not actually created or shut down until the next connection request.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
