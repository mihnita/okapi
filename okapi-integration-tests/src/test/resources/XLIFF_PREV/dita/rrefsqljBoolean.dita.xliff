<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqljBoolean.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">BOOLEAN data type</source>
<seg-source><mrk mid="0" mtype="seg">BOOLEAN data type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BOOLEAN data type</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">BOOLEAN data type</source>
<seg-source><mrk mid="0" mtype="seg">BOOLEAN data type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BOOLEAN data type</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">BOOLEAN provides 1 byte of storage for logical values.</source>
<seg-source><mrk mid="0" mtype="seg">BOOLEAN provides 1 byte of storage for logical values.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BOOLEAN provides 1 byte of storage for logical values.</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>BOOLEAN<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>BOOLEAN<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>BOOLEAN<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Corresponding compile-time Java type</source>
<seg-source><mrk mid="0" mtype="seg">Corresponding compile-time Java type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Corresponding compile-time Java type</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.Boolean<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.Boolean<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.lang.Boolean<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">JDBC metadata type (java.sql.Types)</source>
<seg-source><mrk mid="0" mtype="seg">JDBC metadata type (java.sql.Types)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC metadata type (java.sql.Types)</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">BOOLEAN</source>
<seg-source><mrk mid="0" mtype="seg">BOOLEAN</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BOOLEAN</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">Legal values</source>
<seg-source><mrk mid="0" mtype="seg">Legal values</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Legal values</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">The legal values are <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>true<ept id="1">&lt;/i&gt;</ept>, <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>false<ept id="2">&lt;/i&gt;</ept>, and <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>null<ept id="3">&lt;/i&gt;</ept>. BOOLEAN values can be cast to and from character typed values. For comparisons and ordering operations, <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>true<ept id="4">&lt;/i&gt;</ept> sorts higher than <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>false<ept id="5">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">The legal values are <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>true<ept id="1">&lt;/i&gt;</ept>, <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>false<ept id="2">&lt;/i&gt;</ept>, and <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>null<ept id="3">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> BOOLEAN values can be cast to and from character typed values.</mrk><mrk mid="2" mtype="seg"> For comparisons and ordering operations, <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>true<ept id="4">&lt;/i&gt;</ept> sorts higher than <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>false<ept id="5">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The legal values are <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>true<ept id="1">&lt;/i&gt;</ept>, <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>false<ept id="2">&lt;/i&gt;</ept>, and <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>null<ept id="3">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> BOOLEAN values can be cast to and from character typed values.</mrk><mrk mid="2" mtype="seg"> For comparisons and ordering operations, <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>true<ept id="4">&lt;/i&gt;</ept> sorts higher than <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>false<ept id="5">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>values true values false values cast (null as boolean) <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>values true values false values cast (null as boolean) <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>values true values false values cast (null as boolean) <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
