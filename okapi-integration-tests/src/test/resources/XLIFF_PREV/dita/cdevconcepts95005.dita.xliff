<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevconcepts95005.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Deadlock detection</source>
<seg-source><mrk mid="0" mtype="seg">Deadlock detection</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Deadlock detection</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">When a transaction waits more than a specific amount of time to obtain a lock (called the deadlock timeout), <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> can detect whether the transaction is involved in a deadlock.</source>
<seg-source><mrk mid="0" mtype="seg">When a transaction waits more than a specific amount of time to obtain a lock (called the deadlock timeout), <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> can detect whether the transaction is involved in a deadlock.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a transaction waits more than a specific amount of time to obtain a lock (called the deadlock timeout), <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> can detect whether the transaction is involved in a deadlock.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Deadlock detection</source>
<seg-source><mrk mid="0" mtype="seg">Deadlock detection</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Deadlock detection</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> analyzes such a situation for deadlocks it tries to determine how many transactions are involved in the deadlock (two or more). Usually aborting one transaction breaks the deadlock. <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> must pick one transaction as the victim and abort that transaction; it picks the transaction that holds the fewest number of locks as the victim, on the assumption that transaction has performed the least amount of work. (This may not be the case, however; the transaction might have recently been escalated from row-level locking to table locking and thus hold a small number of locks even though it has done the most work.)</source>
<seg-source><mrk mid="0" mtype="seg">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> analyzes such a situation for deadlocks it tries to determine how many transactions are involved in the deadlock (two or more).</mrk><mrk mid="1" mtype="seg"> Usually aborting one transaction breaks the deadlock.</mrk><mrk mid="2" mtype="seg"> <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> must pick one transaction as the victim and abort that transaction; it picks the transaction that holds the fewest number of locks as the victim, on the assumption that transaction has performed the least amount of work.</mrk><mrk mid="3" mtype="seg"> (This may not be the case, however; the transaction might have recently been escalated from row-level locking to table locking and thus hold a small number of locks even though it has done the most work.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> analyzes such a situation for deadlocks it tries to determine how many transactions are involved in the deadlock (two or more).</mrk><mrk mid="1" mtype="seg"> Usually aborting one transaction breaks the deadlock.</mrk><mrk mid="2" mtype="seg"> <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> must pick one transaction as the victim and abort that transaction; it picks the transaction that holds the fewest number of locks as the victim, on the assumption that transaction has performed the least amount of work.</mrk><mrk mid="3" mtype="seg"> (This may not be the case, however; the transaction might have recently been escalated from row-level locking to table locking and thus hold a small number of locks even though it has done the most work.)</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> aborts the victim transaction, it receives a deadlock error (an <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLException<ept id="2">&lt;/i&gt;</ept> with an <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLState<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> of 40001). The error message gives you the transaction IDs, the statements, and the status of locks involved in a deadlock situation.</source>
<seg-source><mrk mid="0" mtype="seg">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> aborts the victim transaction, it receives a deadlock error (an <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLException<ept id="2">&lt;/i&gt;</ept> with an <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLState<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> of 40001).</mrk><mrk mid="1" mtype="seg"> The error message gives you the transaction IDs, the statements, and the status of locks involved in a deadlock situation.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> aborts the victim transaction, it receives a deadlock error (an <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLException<ept id="2">&lt;/i&gt;</ept> with an <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLState<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> of 40001).</mrk><mrk mid="1" mtype="seg"> The error message gives you the transaction IDs, the statements, and the status of locks involved in a deadlock situation.</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks &amp; waiters is: Lock : ROW, DEPARTMENT, (1,14) Waiting XID : {752, X} , APP, update department set location='Boise' where deptno='E21' Granted XID : {758, X} Lock : ROW, EMPLOYEE, (2,8) Waiting XID : {758, U} , APP, update employee set bonus=150 where salary=23840 Granted XID : {752, X} The selected victim is XID : 752</source>
<seg-source><mrk mid="0" mtype="seg">ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks &amp; waiters is: Lock : ROW, DEPARTMENT, (1,14) Waiting XID : {752, X} , APP, update department set location='Boise' where deptno='E21' Granted XID : {758, X} Lock : ROW, EMPLOYEE, (2,8) Waiting XID : {758, U} , APP, update employee set bonus=150 where salary=23840 Granted XID : {752, X} The selected victim is XID : 752</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks &amp; waiters is: Lock : ROW, DEPARTMENT, (1,14) Waiting XID : {752, X} , APP, update department set location='Boise' where deptno='E21' Granted XID : {758, X} Lock : ROW, EMPLOYEE, (2,8) Waiting XID : {758, U} , APP, update employee set bonus=150 where salary=23840 Granted XID : {752, X} The selected victim is XID : 752</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">For information on configuring when deadlock checking occurs, see <bpt id="1" ctype="x-xref">&lt;xref
href="cdevconcepts16400.dita#cdevconcepts16400"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">For information on configuring when deadlock checking occurs, see <bpt id="1" ctype="x-xref">&lt;xref
href="cdevconcepts16400.dita#cdevconcepts16400"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For information on configuring when deadlock checking occurs, see <bpt id="1" ctype="x-xref">&lt;xref
href="cdevconcepts16400.dita#cdevconcepts16400"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Deadlocks are detected only within a single database. Deadlocks across multiple databases are not detected. Non-database deadlocks caused by Java synchronization primitives are not detected by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">Deadlocks are detected only within a single database.</mrk><mrk mid="1" mtype="seg"> Deadlocks across multiple databases are not detected.</mrk><mrk mid="2" mtype="seg"> Non-database deadlocks caused by Java synchronization primitives are not detected by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Deadlocks are detected only within a single database.</mrk><mrk mid="1" mtype="seg"> Deadlocks across multiple databases are not detected.</mrk><mrk mid="2" mtype="seg"> Non-database deadlocks caused by Java synchronization primitives are not detected by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
