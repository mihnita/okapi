<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cwwdactivities.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Tutorial overview</source>
<seg-source><mrk mid="0" mtype="seg">Tutorial overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Tutorial overview</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">Each activity in this self-study tutorial highlights an important feature of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">Each activity in this self-study tutorial highlights an important feature of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Each activity in this self-study tutorial highlights an important feature of <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">self-study tutorial</source>
<seg-source><mrk mid="0" mtype="seg">self-study tutorial</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">self-study tutorial</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">overview</source>
<seg-source><mrk mid="0" mtype="seg">overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">overview</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Here is what you can expect to learn in each activity:</source>
<seg-source><mrk mid="0" mtype="seg">Here is what you can expect to learn in each activity:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Here is what you can expect to learn in each activity:</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Activity 1:</source>
<seg-source><mrk mid="0" mtype="seg">Activity 1:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Activity 1:</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept> tool to load the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> embedded driver and start the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database engine. Create the database <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>firstdb<ept id="5">&lt;/codeph&gt;</ept> and the table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>FIRSTTABLE<ept id="6">&lt;/codeph&gt;</ept>. Use a few basic SQL statements to insert and select data. The <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> message log <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.log<ept id="8">&lt;/codeph&gt;</ept> and the database directories and files are introduced.</source>
<seg-source><mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept> tool to load the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> embedded driver and start the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database engine.</mrk><mrk mid="1" mtype="seg"> Create the database <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>firstdb<ept id="5">&lt;/codeph&gt;</ept> and the table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>FIRSTTABLE<ept id="6">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> Use a few basic SQL statements to insert and select data.</mrk><mrk mid="3" mtype="seg"> The <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> message log <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.log<ept id="8">&lt;/codeph&gt;</ept> and the database directories and files are introduced.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="2">&lt;/codeph&gt;</ept> tool to load the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> embedded driver and start the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database engine.</mrk><mrk mid="1" mtype="seg"> Create the database <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>firstdb<ept id="5">&lt;/codeph&gt;</ept> and the table <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>FIRSTTABLE<ept id="6">&lt;/codeph&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> Use a few basic SQL statements to insert and select data.</mrk><mrk mid="3" mtype="seg"> The <bpt id="7" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="7">&lt;/ph&gt;</ept> message log <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>derby.log<ept id="8">&lt;/codeph&gt;</ept> and the database directories and files are introduced.</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Activity 2:</source>
<seg-source><mrk mid="0" mtype="seg">Activity 2:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Activity 2:</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">Use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> within a client/server configuration. Start the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> Network Server, which will embed the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> engine. In a separate process, use the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="5">&lt;/codeph&gt;</ept> tool to load the <bpt id="6" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="6">&lt;/ph&gt;</ept> client driver and connect to the Network Server. Create a database called <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>seconddb<ept id="7">&lt;/codeph&gt;</ept> and the table <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>SECONDTABLE<ept id="8">&lt;/codeph&gt;</ept>. Use a few basic SQL statements to insert and select data.</source>
<seg-source><mrk mid="0" mtype="seg">Use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> within a client/server configuration.</mrk><mrk mid="1" mtype="seg"> Start the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> Network Server, which will embed the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> engine.</mrk><mrk mid="2" mtype="seg"> In a separate process, use the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="5">&lt;/codeph&gt;</ept> tool to load the <bpt id="6" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="6">&lt;/ph&gt;</ept> client driver and connect to the Network Server.</mrk><mrk mid="3" mtype="seg"> Create a database called <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>seconddb<ept id="7">&lt;/codeph&gt;</ept> and the table <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>SECONDTABLE<ept id="8">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> Use a few basic SQL statements to insert and select data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Use <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> within a client/server configuration.</mrk><mrk mid="1" mtype="seg"> Start the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> Network Server, which will embed the <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> engine.</mrk><mrk mid="2" mtype="seg"> In a separate process, use the <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>ij<ept id="5">&lt;/codeph&gt;</ept> tool to load the <bpt id="6" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="6">&lt;/ph&gt;</ept> client driver and connect to the Network Server.</mrk><mrk mid="3" mtype="seg"> Create a database called <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt>seconddb<ept id="7">&lt;/codeph&gt;</ept> and the table <bpt id="8" ctype="x-codeph">&lt;codeph&gt;</bpt>SECONDTABLE<ept id="8">&lt;/codeph&gt;</ept>.</mrk><mrk mid="4" mtype="seg"> Use a few basic SQL statements to insert and select data.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">Activity 3:</source>
<seg-source><mrk mid="0" mtype="seg">Activity 3:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Activity 3:</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">Load the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> database engine from a simple Java JDBC program. Use the embedded driver to create the database <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>jdbcDemoDB<ept id="2">&lt;/codeph&gt;</ept> and the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>WISH_LIST<ept id="3">&lt;/codeph&gt;</ept> table. Populate the table with text entered from the keyboard, then view a list of the records in the table. Walk through the code to understand the basic structure of a JDBC program that accesses a <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database. The <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>CLASSPATH<ept id="5">&lt;/codeph&gt;</ept> variable and connection URL attribute <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>;shutdown=true<ept id="6">&lt;/codeph&gt;</ept> are introduced.</source>
<seg-source><mrk mid="0" mtype="seg">Load the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> database engine from a simple Java JDBC program.</mrk><mrk mid="1" mtype="seg"> Use the embedded driver to create the database <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>jdbcDemoDB<ept id="2">&lt;/codeph&gt;</ept> and the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>WISH_LIST<ept id="3">&lt;/codeph&gt;</ept> table.</mrk><mrk mid="2" mtype="seg"> Populate the table with text entered from the keyboard, then view a list of the records in the table.</mrk><mrk mid="3" mtype="seg"> Walk through the code to understand the basic structure of a JDBC program that accesses a <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database.</mrk><mrk mid="4" mtype="seg"> The <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>CLASSPATH<ept id="5">&lt;/codeph&gt;</ept> variable and connection URL attribute <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>;shutdown=true<ept id="6">&lt;/codeph&gt;</ept> are introduced.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Load the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> database engine from a simple Java JDBC program.</mrk><mrk mid="1" mtype="seg"> Use the embedded driver to create the database <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>jdbcDemoDB<ept id="2">&lt;/codeph&gt;</ept> and the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>WISH_LIST<ept id="3">&lt;/codeph&gt;</ept> table.</mrk><mrk mid="2" mtype="seg"> Populate the table with text entered from the keyboard, then view a list of the records in the table.</mrk><mrk mid="3" mtype="seg"> Walk through the code to understand the basic structure of a JDBC program that accesses a <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> database.</mrk><mrk mid="4" mtype="seg"> The <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>CLASSPATH<ept id="5">&lt;/codeph&gt;</ept> variable and connection URL attribute <bpt id="6" ctype="x-codeph">&lt;codeph&gt;</bpt>;shutdown=true<ept id="6">&lt;/codeph&gt;</ept> are introduced.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">Activity 4:</source>
<seg-source><mrk mid="0" mtype="seg">Activity 4:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Activity 4:</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Modify the Java JDBC program to load the client driver and connect to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> Network Server. Compile the altered program and test that the program operates as it did in the previous activity.</source>
<seg-source><mrk mid="0" mtype="seg">Modify the Java JDBC program to load the client driver and connect to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> Network Server.</mrk><mrk mid="1" mtype="seg"> Compile the altered program and test that the program operates as it did in the previous activity.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Modify the Java JDBC program to load the client driver and connect to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> Network Server.</mrk><mrk mid="1" mtype="seg"> Compile the altered program and test that the program operates as it did in the previous activity.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
