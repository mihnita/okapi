<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefproperlogboottrace.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">derby.stream.error.logBootTrace</source>
<seg-source><mrk mid="0" mtype="seg">derby.stream.error.logBootTrace</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.stream.error.logBootTrace</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">derby.stream.error.logBootTrace</source>
<seg-source><mrk mid="0" mtype="seg">derby.stream.error.logBootTrace</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">derby.stream.error.logBootTrace</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Error log</source>
<seg-source><mrk mid="0" mtype="seg">Error log</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Error log</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">adding boot errors to</source>
<seg-source><mrk mid="0" mtype="seg">adding boot errors to</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">adding boot errors to</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">double-booting issues</source>
<seg-source><mrk mid="0" mtype="seg">double-booting issues</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">double-booting issues</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">diagnosing</source>
<seg-source><mrk mid="0" mtype="seg">diagnosing</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">diagnosing</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Function</source>
<seg-source><mrk mid="0" mtype="seg">Function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Function</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">Specifies whether boot errors are written to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> log file.</source>
<seg-source><mrk mid="0" mtype="seg">Specifies whether boot errors are written to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> log file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies whether boot errors are written to the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> log file.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">This property helps in diagnosing double-booting problems. Typically, when two Java Virtual Machines (JVMs) or class loaders attempt to boot <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, an error message like the following appears:</source>
<seg-source><mrk mid="0" mtype="seg">This property helps in diagnosing double-booting problems.</mrk><mrk mid="1" mtype="seg"> Typically, when two Java Virtual Machines (JVMs) or class loaders attempt to boot <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, an error message like the following appears:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This property helps in diagnosing double-booting problems.</mrk><mrk mid="1" mtype="seg"> Typically, when two Java Virtual Machines (JVMs) or class loaders attempt to boot <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, an error message like the following appears:</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">ERROR XJ040: Failed to start database 'testdb' with class loader sun.misc.Launcher$AppClassLoader@481e481e, see the next exception for details. ERROR XSDB6: Another instance of Derby may have already booted the database C:\derby\testdb.</source>
<seg-source><mrk mid="0" mtype="seg">ERROR XJ040: Failed to start database 'testdb' with class loader sun.misc.Launcher$AppClassLoader@481e481e, see the next exception for details.</mrk><mrk mid="1" mtype="seg"> ERROR XSDB6: Another instance of Derby may have already booted the database C:\derby\testdb.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ERROR XJ040: Failed to start database 'testdb' with class loader sun.misc.Launcher$AppClassLoader@481e481e, see the next exception for details.</mrk><mrk mid="1" mtype="seg"> ERROR XSDB6: Another instance of Derby may have already booted the database C:\derby\testdb.</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">The message will also show the stack trace and class loader of the failed boot attempt. It is sometimes also useful to see the stack trace when the first successful boot attempt occurred. To see the stack trace of successful boots and shutdowns, set <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/i&gt;</ept> to trace the successful attempt. If you think that both attempts should be from the same class loader context, check also the class loader information for boot and shutdown attempts and make sure they all come from the same class loader context.</source>
<seg-source><mrk mid="0" mtype="seg">The message will also show the stack trace and class loader of the failed boot attempt.</mrk><mrk mid="1" mtype="seg"> It is sometimes also useful to see the stack trace when the first successful boot attempt occurred.</mrk><mrk mid="2" mtype="seg"> To see the stack trace of successful boots and shutdowns, set <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/i&gt;</ept> to trace the successful attempt.</mrk><mrk mid="3" mtype="seg"> If you think that both attempts should be from the same class loader context, check also the class loader information for boot and shutdown attempts and make sure they all come from the same class loader context.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The message will also show the stack trace and class loader of the failed boot attempt.</mrk><mrk mid="1" mtype="seg"> It is sometimes also useful to see the stack trace when the first successful boot attempt occurred.</mrk><mrk mid="2" mtype="seg"> To see the stack trace of successful boots and shutdowns, set <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/i&gt;</ept> to trace the successful attempt.</mrk><mrk mid="3" mtype="seg"> If you think that both attempts should be from the same class loader context, check also the class loader information for boot and shutdown attempts and make sure they all come from the same class loader context.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">For more information, see "Double-booting system behavior" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">For more information, see "Double-booting system behavior" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For more information, see "Double-booting system behavior" in <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Default</source>
<seg-source><mrk mid="0" mtype="seg">Default</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Default</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">False.</source>
<seg-source><mrk mid="0" mtype="seg">False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False.</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>derby.stream.error.logBootTrace=true<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Scope</source>
<seg-source><mrk mid="0" mtype="seg">Scope</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Scope</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="crefproper51399.dita#crefproper51399/rrefproper41229"&gt;</bpt>system-wide<ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="crefproper51399.dita#crefproper51399/rrefproper41229"&gt;</bpt>system-wide<ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="crefproper51399.dita#crefproper51399/rrefproper41229"&gt;</bpt>system-wide<ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">Dynamic or static</source>
<seg-source><mrk mid="0" mtype="seg">Dynamic or static</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dynamic or static</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</source>
<seg-source><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This property is static; if you change it while <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> is running, the change does not take effect until you reboot.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
