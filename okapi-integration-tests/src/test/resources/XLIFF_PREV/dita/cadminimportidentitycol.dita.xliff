<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cadminimportidentitycol.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Import into tables that contain identity columns</source>
<seg-source><mrk mid="0" mtype="seg">Import into tables that contain identity columns</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Import into tables that contain identity columns</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">You can use the either the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> procedure or the <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedure to import data into a table that contains an identity column. The approach that you take depends on whether the identity column is GENERATED ALWAYS or GENERATED BY DEFAULT.</source>
<seg-source><mrk mid="0" mtype="seg">You can use the either the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> procedure or the <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedure to import data into a table that contains an identity column.</mrk><mrk mid="1" mtype="seg"> The approach that you take depends on whether the identity column is GENERATED ALWAYS or GENERATED BY DEFAULT.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use the either the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> procedure or the <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedure to import data into a table that contains an identity column.</mrk><mrk mid="1" mtype="seg"> The approach that you take depends on whether the identity column is GENERATED ALWAYS or GENERATED BY DEFAULT.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">importing data</source>
<seg-source><mrk mid="0" mtype="seg">importing data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing data</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">tables with identity columns</source>
<seg-source><mrk mid="0" mtype="seg">tables with identity columns</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">tables with identity columns</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Identity columns and the REPLACE parameter</source>
<seg-source><mrk mid="0" mtype="seg">Identity columns and the REPLACE parameter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Identity columns and the REPLACE parameter</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">If the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>REPLACE<ept id="1">&lt;/codeph&gt;</ept> parameter is used during import, <bpt id="2" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> resets its internal counter of the last identity value for a column to the initial value defined for the identity column.</source>
<seg-source><mrk mid="0" mtype="seg">If the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>REPLACE<ept id="1">&lt;/codeph&gt;</ept> parameter is used during import, <bpt id="2" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> resets its internal counter of the last identity value for a column to the initial value defined for the identity column.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>REPLACE<ept id="1">&lt;/codeph&gt;</ept> parameter is used during import, <bpt id="2" ctype="x-ph">&lt;ph
conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> resets its internal counter of the last identity value for a column to the initial value defined for the identity column.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Identity column is GENERATED ALWAYS</source>
<seg-source><mrk mid="0" mtype="seg">Identity column is GENERATED ALWAYS</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Identity column is GENERATED ALWAYS</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">If the identity column is defined as GENERATED ALWAYS, an identity value is always generated for a table row. When a corresponding row in the input file already contains a value for the identity column, the row cannot be inserted into the table and the import operation will fail.</source>
<seg-source><mrk mid="0" mtype="seg">If the identity column is defined as GENERATED ALWAYS, an identity value is always generated for a table row.</mrk><mrk mid="1" mtype="seg"> When a corresponding row in the input file already contains a value for the identity column, the row cannot be inserted into the table and the import operation will fail.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the identity column is defined as GENERATED ALWAYS, an identity value is always generated for a table row.</mrk><mrk mid="1" mtype="seg"> When a corresponding row in the input file already contains a value for the identity column, the row cannot be inserted into the table and the import operation will fail.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">To prevent such failure, the following examples show how to specify parameters in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to ignore data for the identity column from the file, and omit the column name from the insert column list.</source>
<seg-source><mrk mid="0" mtype="seg">To prevent such failure, the following examples show how to specify parameters in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to ignore data for the identity column from the file, and omit the column name from the insert column list.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To prevent such failure, the following examples show how to specify parameters in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to ignore data for the identity column from the file, and omit the column name from the insert column list.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</source>
<seg-source><mrk mid="0" mtype="seg">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED ALWAYS AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED ALWAYS AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED ALWAYS AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information. The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</source>
<seg-source><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information.</mrk><mrk mid="1" mtype="seg"> The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information.</mrk><mrk mid="1" mtype="seg"> The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Robert,45.2,J Mike,76.9,K Leo,23.4,I</source>
<seg-source><mrk mid="0" mtype="seg">Robert,45.2,J Mike,76.9,K Leo,23.4,I</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Robert,45.2,J Mike,76.9,K Leo,23.4,I</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure. For example:</source>
<seg-source><mrk mid="0" mtype="seg">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information. The file contains three fields with the following data:</source>
<seg-source><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information.</mrk><mrk mid="1" mtype="seg"> The file contains three fields with the following data:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information.</mrk><mrk mid="1" mtype="seg"> The file contains three fields with the following data:</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</source>
<seg-source><mrk mid="0" mtype="seg">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">To import the data, you must explicitly specify an insert column list without the identity column <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure. For example:</source>
<seg-source><mrk mid="0" mtype="seg">To import the data, you must explicitly specify an insert column list without the identity column <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To import the data, you must explicitly specify an insert column list without the identity column <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">Identity column is GENERATED BY DEFAULT</source>
<seg-source><mrk mid="0" mtype="seg">Identity column is GENERATED BY DEFAULT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Identity column is GENERATED BY DEFAULT</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">If the identity column is defined as GENERATED BY DEFAULT, an identity value is generated for a table row only if no explicit value is given. This means that you have several options, depending on the contents of your input file and the desired outcome of the import processing:</source>
<seg-source><mrk mid="0" mtype="seg">If the identity column is defined as GENERATED BY DEFAULT, an identity value is generated for a table row only if no explicit value is given.</mrk><mrk mid="1" mtype="seg"> This means that you have several options, depending on the contents of your input file and the desired outcome of the import processing:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the identity column is defined as GENERATED BY DEFAULT, an identity value is generated for a table row only if no explicit value is given.</mrk><mrk mid="1" mtype="seg"> This means that you have several options, depending on the contents of your input file and the desired outcome of the import processing:</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">You may omit the identity column from the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will generate a new value for the identity column for each input row. You may use this option whether or not the input file contains values for the identity column, but note that if the input file contains values for the identity column, you must also then omit the identity column from the column indexes when you call the procedure.</source>
<seg-source><mrk mid="0" mtype="seg">You may omit the identity column from the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will generate a new value for the identity column for each input row.</mrk><mrk mid="1" mtype="seg"> You may use this option whether or not the input file contains values for the identity column, but note that if the input file contains values for the identity column, you must also then omit the identity column from the column indexes when you call the procedure.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You may omit the identity column from the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will generate a new value for the identity column for each input row.</mrk><mrk mid="1" mtype="seg"> You may use this option whether or not the input file contains values for the identity column, but note that if the input file contains values for the identity column, you must also then omit the identity column from the column indexes when you call the procedure.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">You may include the identity column in the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will use the column values from the input file. Of course, this option is available only if the input file actually contains values for the identity column.</source>
<seg-source><mrk mid="0" mtype="seg">You may include the identity column in the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will use the column values from the input file.</mrk><mrk mid="1" mtype="seg"> Of course, this option is available only if the input file actually contains values for the identity column.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You may include the identity column in the insert column list, in which case <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> will use the column values from the input file.</mrk><mrk mid="1" mtype="seg"> Of course, this option is available only if the input file actually contains values for the identity column.</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</source>
<seg-source><mrk mid="0" mtype="seg">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The following table definition contains an identity column, <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="1">&lt;/codeph&gt;</ept>, and is used in the examples below:</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED BY DEFAULT AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED BY DEFAULT AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TABLE tab1 (c1 CHAR(30), c2 INT GENERATED BY DEFAULT AS IDENTITY, c3 REAL, c4 CHAR(1))<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information. The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</source>
<seg-source><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information.</mrk><mrk mid="1" mtype="seg"> The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="2">&lt;/codeph&gt;</ept>, that does not have identity column information.</mrk><mrk mid="1" mtype="seg"> The <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>myfile.del<ept id="3">&lt;/codeph&gt;</ept> file contains three fields with the following data:</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">Robert,45.2,J Mike,76.9,K Leo,23.4,I</source>
<seg-source><mrk mid="0" mtype="seg">Robert,45.2,J Mike,76.9,K Leo,23.4,I</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Robert,45.2,J Mike,76.9,K Leo,23.4,I</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure. For example:</source>
<seg-source><mrk mid="0" mtype="seg">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To import the data, you must explicitly list the column names in the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> table, except for the identity column <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="2">&lt;/codeph&gt;</ept>, when you call the procedure.</mrk><mrk mid="1" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', null, 'myfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information. The file contains three fields with the following data:</source>
<seg-source><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information.</mrk><mrk mid="1" mtype="seg"> The file contains three fields with the following data:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Suppose that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information.</mrk><mrk mid="1" mtype="seg"> The file contains three fields with the following data:</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</source>
<seg-source><mrk mid="0" mtype="seg">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Robert,1,45.2,J Mike,2,23.4,I Leo,3,23.4,I</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">In this case, suppose that you wish to use the existing identity column values from the input file. To import the data, you may simply pass <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>null<ept id="1">&lt;/codeph&gt;</ept> for the insert column list and column indexes parameters when you call the procedure. For example:</source>
<seg-source><mrk mid="0" mtype="seg">In this case, suppose that you wish to use the existing identity column values from the input file.</mrk><mrk mid="1" mtype="seg"> To import the data, you may simply pass <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>null<ept id="1">&lt;/codeph&gt;</ept> for the insert column list and column indexes parameters when you call the procedure.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In this case, suppose that you wish to use the existing identity column values from the input file.</mrk><mrk mid="1" mtype="seg"> To import the data, you may simply pass <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>null<ept id="1">&lt;/codeph&gt;</ept> for the insert column list and column indexes parameters when you call the procedure.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', NULL, NULL, 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', NULL, NULL, 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', NULL, NULL, 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">Suppose (again) that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information, but in this case, suppose that you do <bpt id="3" ctype="x-b">&lt;b&gt;</bpt>not<ept id="3">&lt;/b&gt;</ept> wish to use the identity column values from the input file, but would prefer to allow <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to generate new identity column values instead. In this case, to import the data, you must specify an insert column list without the identity column <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="5">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure. For example:</source>
<seg-source><mrk mid="0" mtype="seg">Suppose (again) that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information, but in this case, suppose that you do <bpt id="3" ctype="x-b">&lt;b&gt;</bpt>not<ept id="3">&lt;/b&gt;</ept> wish to use the identity column values from the input file, but would prefer to allow <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to generate new identity column values instead.</mrk><mrk mid="1" mtype="seg"> In this case, to import the data, you must specify an insert column list without the identity column <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="5">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Suppose (again) that you want to import data into <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>tab1<ept id="1">&lt;/codeph&gt;</ept> from a file, <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>empfile.del<ept id="2">&lt;/codeph&gt;</ept>, that also has identity column information, but in this case, suppose that you do <bpt id="3" ctype="x-b">&lt;b&gt;</bpt>not<ept id="3">&lt;/b&gt;</ept> wish to use the identity column values from the input file, but would prefer to allow <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept> to generate new identity column values instead.</mrk><mrk mid="1" mtype="seg"> In this case, to import the data, you must specify an insert column list without the identity column <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt>c2<ept id="5">&lt;/codeph&gt;</ept> and specify the column indexes without identity column data when you call the procedure.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA (NULL, 'TAB1', 'C1,C3,C4', '1,3,4', 'empfile.del',null, null, null, 0)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
