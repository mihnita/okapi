<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefbuiltsmallint.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">SMALLINT function</source>
<seg-source><mrk mid="0" mtype="seg">SMALLINT function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SMALLINT function</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">The SMALLINT function returns a small integer representation of a number or character string in the form of a small integer constant.</source>
<seg-source><mrk mid="0" mtype="seg">The SMALLINT function returns a small integer representation of a number or character string in the form of a small integer constant.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The SMALLINT function returns a small integer representation of a number or character string in the form of a small integer constant.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">functions</source>
<seg-source><mrk mid="0" mtype="seg">functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">functions</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">SMALLINT</source>
<seg-source><mrk mid="0" mtype="seg">SMALLINT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SMALLINT</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">SMALLINT function</source>
<seg-source><mrk mid="0" mtype="seg">SMALLINT function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SMALLINT function</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SMALLINT ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> | <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="3">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SMALLINT ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> | <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="3">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>SMALLINT ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="2">&lt;/i&gt;</ept> | <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="3">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">An expression that returns a value of any built-in numeric data type. If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the argument were assigned to a small integer column or variable. If the whole part of the argument is not within the range of small integers, an error occurs. The decimal part of the argument is truncated if present.</source>
<seg-source><mrk mid="0" mtype="seg">An expression that returns a value of any built-in numeric data type.</mrk><mrk mid="1" mtype="seg"> If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the argument were assigned to a small integer column or variable.</mrk><mrk mid="2" mtype="seg"> If the whole part of the argument is not within the range of small integers, an error occurs.</mrk><mrk mid="3" mtype="seg"> The decimal part of the argument is truncated if present.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An expression that returns a value of any built-in numeric data type.</mrk><mrk mid="1" mtype="seg"> If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>numericExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the argument were assigned to a small integer column or variable.</mrk><mrk mid="2" mtype="seg"> If the whole part of the argument is not within the range of small integers, an error occurs.</mrk><mrk mid="3" mtype="seg"> The decimal part of the argument is truncated if present.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">An expression that returns a character string value of length not greater than the maximum length of a character constant. Leading and trailing blanks are eliminated and the resulting string must conform to the rules for forming an SQL integer constant. However, the value of the constant must be in the range of small integers. The character string cannot be a long string. If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the corresponding integer constant were assigned to a small integer column or variable.</source>
<seg-source><mrk mid="0" mtype="seg">An expression that returns a character string value of length not greater than the maximum length of a character constant.</mrk><mrk mid="1" mtype="seg"> Leading and trailing blanks are eliminated and the resulting string must conform to the rules for forming an SQL integer constant.</mrk><mrk mid="2" mtype="seg"> However, the value of the constant must be in the range of small integers.</mrk><mrk mid="3" mtype="seg"> The character string cannot be a long string.</mrk><mrk mid="4" mtype="seg"> If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the corresponding integer constant were assigned to a small integer column or variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An expression that returns a character string value of length not greater than the maximum length of a character constant.</mrk><mrk mid="1" mtype="seg"> Leading and trailing blanks are eliminated and the resulting string must conform to the rules for forming an SQL integer constant.</mrk><mrk mid="2" mtype="seg"> However, the value of the constant must be in the range of small integers.</mrk><mrk mid="3" mtype="seg"> The character string cannot be a long string.</mrk><mrk mid="4" mtype="seg"> If the argument is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="1">&lt;/i&gt;</ept>, the result is the same number that would occur if the corresponding integer constant were assigned to a small integer column or variable.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">The result of the function is a small integer. If the argument can be null, the result can be null. If the argument is null, the result is the null value.</source>
<seg-source><mrk mid="0" mtype="seg">The result of the function is a small integer.</mrk><mrk mid="1" mtype="seg"> If the argument can be null, the result can be null.</mrk><mrk mid="2" mtype="seg"> If the argument is null, the result is the null value.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result of the function is a small integer.</mrk><mrk mid="1" mtype="seg"> If the argument can be null, the result can be null.</mrk><mrk mid="2" mtype="seg"> If the argument is null, the result is the null value.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">To determine the small integer representation of the number 32767.99, use this clause:</source>
<seg-source><mrk mid="0" mtype="seg">To determine the small integer representation of the number 32767.99, use this clause:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To determine the small integer representation of the number 32767.99, use this clause:</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (32767.99)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (32767.99)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (32767.99)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">The result is 32767.</source>
<seg-source><mrk mid="0" mtype="seg">The result is 32767.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result is 32767.</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">To determine the small integer representation of the number 1, use this clause:</source>
<seg-source><mrk mid="0" mtype="seg">To determine the small integer representation of the number 1, use this clause:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To determine the small integer representation of the number 1, use this clause:</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (1)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (1)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>VALUES SMALLINT (1)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">The result is 1.</source>
<seg-source><mrk mid="0" mtype="seg">The result is 1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result is 1.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
