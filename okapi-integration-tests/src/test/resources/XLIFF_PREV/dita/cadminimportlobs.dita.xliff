<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cadminimportlobs.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Bulk import and export of large objects</source>
<seg-source><mrk mid="0" mtype="seg">Bulk import and export of large objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Bulk import and export of large objects</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">You can import and export large objects (LOBs) using the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> system procedures.</source>
<seg-source><mrk mid="0" mtype="seg">You can import and export large objects (LOBs) using the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> system procedures.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can import and export large objects (LOBs) using the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> system procedures.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">bulk import and export</source>
<seg-source><mrk mid="0" mtype="seg">bulk import and export</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">bulk import and export</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">large objects</source>
<seg-source><mrk mid="0" mtype="seg">large objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">large objects</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">large objects</source>
<seg-source><mrk mid="0" mtype="seg">large objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">large objects</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">importing data</source>
<seg-source><mrk mid="0" mtype="seg">importing data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing data</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">large objects</source>
<seg-source><mrk mid="0" mtype="seg">large objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">large objects</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">exporting data</source>
<seg-source><mrk mid="0" mtype="seg">exporting data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">exporting data</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">large objects</source>
<seg-source><mrk mid="0" mtype="seg">large objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">large objects</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">CLOB data</source>
<seg-source><mrk mid="0" mtype="seg">CLOB data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CLOB data</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">BLOB data</source>
<seg-source><mrk mid="0" mtype="seg">BLOB data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BLOB data</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">CHAR FOR BIT DATA</source>
<seg-source><mrk mid="0" mtype="seg">CHAR FOR BIT DATA</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CHAR FOR BIT DATA</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">VARCHAR FOR BIT DATA</source>
<seg-source><mrk mid="0" mtype="seg">VARCHAR FOR BIT DATA</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">VARCHAR FOR BIT DATA</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">LONG VARCHAR FOR BIT DATA</source>
<seg-source><mrk mid="0" mtype="seg">LONG VARCHAR FOR BIT DATA</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">LONG VARCHAR FOR BIT DATA</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">importing and exporting</source>
<seg-source><mrk mid="0" mtype="seg">importing and exporting</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">importing and exporting</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">Importing and exporting CLOB and BLOB data</source>
<seg-source><mrk mid="0" mtype="seg">Importing and exporting CLOB and BLOB data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Importing and exporting CLOB and BLOB data</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">CLOB and BLOB data can be exported to the same file as the rest of the column data, or the LOB column data can be exported to a separate external file. When the LOB column data is exported to a separate external file, reference to the location of the LOB data is placed in the LOB column in the main export file.</source>
<seg-source><mrk mid="0" mtype="seg">CLOB and BLOB data can be exported to the same file as the rest of the column data, or the LOB column data can be exported to a separate external file.</mrk><mrk mid="1" mtype="seg"> When the LOB column data is exported to a separate external file, reference to the location of the LOB data is placed in the LOB column in the main export file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CLOB and BLOB data can be exported to the same file as the rest of the column data, or the LOB column data can be exported to a separate external file.</mrk><mrk mid="1" mtype="seg"> When the LOB column data is exported to a separate external file, reference to the location of the LOB data is placed in the LOB column in the main export file.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Importing and exporting LOB data using a separate external file might be faster than storing the LOB data in the same file as the rest of the column data:</source>
<seg-source><mrk mid="0" mtype="seg">Importing and exporting LOB data using a separate external file might be faster than storing the LOB data in the same file as the rest of the column data:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Importing and exporting LOB data using a separate external file might be faster than storing the LOB data in the same file as the rest of the column data:</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">The CLOB data does not have to be scanned for the delimiters inside the data</source>
<seg-source><mrk mid="0" mtype="seg">The CLOB data does not have to be scanned for the delimiters inside the data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The CLOB data does not have to be scanned for the delimiters inside the data</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">The BLOB data does not need to be converted to hexadecimal format</source>
<seg-source><mrk mid="0" mtype="seg">The BLOB data does not need to be converted to hexadecimal format</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The BLOB data does not need to be converted to hexadecimal format</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">Importing and exporting other binary data</source>
<seg-source><mrk mid="0" mtype="seg">Importing and exporting other binary data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Importing and exporting other binary data</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">When you export columns that contain the data types CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, and LONG VARCHAR FOR BIT DATA, the column data is always exported to the main export file. The data is written in hexadecimal format. To import data into a table that has columns of these data types, the data in the import file for those columns must be in hexadecimal format.</source>
<seg-source><mrk mid="0" mtype="seg">When you export columns that contain the data types CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, and LONG VARCHAR FOR BIT DATA, the column data is always exported to the main export file.</mrk><mrk mid="1" mtype="seg"> The data is written in hexadecimal format.</mrk><mrk mid="2" mtype="seg"> To import data into a table that has columns of these data types, the data in the import file for those columns must be in hexadecimal format.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you export columns that contain the data types CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, and LONG VARCHAR FOR BIT DATA, the column data is always exported to the main export file.</mrk><mrk mid="1" mtype="seg"> The data is written in hexadecimal format.</mrk><mrk mid="2" mtype="seg"> To import data into a table that has columns of these data types, the data in the import file for those columns must be in hexadecimal format.</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">Importing LOB data from a file that contains all of the data</source>
<seg-source><mrk mid="0" mtype="seg">Importing LOB data from a file that contains all of the data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Importing LOB data from a file that contains all of the data</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="2">&lt;/codeph&gt;</ept> procedures to import data into a table that contains a LOB column. The LOB data must be stored in the same file as the other column data that you are importing. If you are importing data from a file that was exported from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the binary data must be in hexadecimal format.</source>
<seg-source><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="2">&lt;/codeph&gt;</ept> procedures to import data into a table that contains a LOB column.</mrk><mrk mid="1" mtype="seg"> The LOB data must be stored in the same file as the other column data that you are importing.</mrk><mrk mid="2" mtype="seg"> If you are importing data from a file that was exported from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the binary data must be in hexadecimal format.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA<ept id="2">&lt;/codeph&gt;</ept> procedures to import data into a table that contains a LOB column.</mrk><mrk mid="1" mtype="seg"> The LOB data must be stored in the same file as the other column data that you are importing.</mrk><mrk mid="2" mtype="seg"> If you are importing data from a file that was exported from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the binary data must be in hexadecimal format.</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en">Importing LOB data from a separate external file</source>
<seg-source><mrk mid="0" mtype="seg">Importing LOB data from a separate external file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Importing LOB data from a separate external file</mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to import LOB data that is stored in a file that is separate from the main import file. These procedures read the LOB data using the reference that is stored in the main import file. If you are importing data from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the references to the LOB data must be in the main import file in the format <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="5" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="5">&lt;/i&gt;</ept>.<bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="6">&lt;/i&gt;</ept>.<bpt id="7" ctype="x-i">&lt;i&gt;</bpt>length<ept id="7">&lt;/i&gt;</ept>/<ept id="4">&lt;/codeph&gt;</ept>. This is the same method that the <bpt id="8" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="8">&lt;/ph&gt;</ept> export procedures use to export the LOB data to a separate external file.</source>
<seg-source><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to import LOB data that is stored in a file that is separate from the main import file.</mrk><mrk mid="1" mtype="seg"> These procedures read the LOB data using the reference that is stored in the main import file.</mrk><mrk mid="2" mtype="seg"> If you are importing data from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the references to the LOB data must be in the main import file in the format <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="5" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="5">&lt;/i&gt;</ept>.<bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="6">&lt;/i&gt;</ept>.<bpt id="7" ctype="x-i">&lt;i&gt;</bpt>length<ept id="7">&lt;/i&gt;</ept>/<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> This is the same method that the <bpt id="8" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="8">&lt;/ph&gt;</ept> export procedures use to export the LOB data to a separate external file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to import LOB data that is stored in a file that is separate from the main import file.</mrk><mrk mid="1" mtype="seg"> These procedures read the LOB data using the reference that is stored in the main import file.</mrk><mrk mid="2" mtype="seg"> If you are importing data from a non-<bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> source, the references to the LOB data must be in the main import file in the format <bpt id="4" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="5" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="5">&lt;/i&gt;</ept>.<bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="6">&lt;/i&gt;</ept>.<bpt id="7" ctype="x-i">&lt;i&gt;</bpt>length<ept id="7">&lt;/i&gt;</ept>/<ept id="4">&lt;/codeph&gt;</ept>.</mrk><mrk mid="3" mtype="seg"> This is the same method that the <bpt id="8" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="8">&lt;/ph&gt;</ept> export procedures use to export the LOB data to a separate external file.</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">Exporting LOB data to the same file as the other column data</source>
<seg-source><mrk mid="0" mtype="seg">Exporting LOB data to the same file as the other column data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Exporting LOB data to the same file as the other column data</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data, along with the rest of the column data, to a single export file.</source>
<seg-source><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data, along with the rest of the column data, to a single export file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data, along with the rest of the column data, to a single export file.</mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en">CLOB column data is treated same as other character data. Character delimiters are allowed inside the CLOB data. The export procedures write the delimiter inside the data as a double-delimiter.</source>
<seg-source><mrk mid="0" mtype="seg">CLOB column data is treated same as other character data.</mrk><mrk mid="1" mtype="seg"> Character delimiters are allowed inside the CLOB data.</mrk><mrk mid="2" mtype="seg"> The export procedures write the delimiter inside the data as a double-delimiter.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CLOB column data is treated same as other character data.</mrk><mrk mid="1" mtype="seg"> Character delimiters are allowed inside the CLOB data.</mrk><mrk mid="2" mtype="seg"> The export procedures write the delimiter inside the data as a double-delimiter.</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en">BLOB column data is written to the export file in hexadecimal format. For each byte of BLOB data, two characters are generated. The first character represents the high nibble (4 bits) in hexadecimal and the second character represents the low nibble.</source>
<seg-source><mrk mid="0" mtype="seg">BLOB column data is written to the export file in hexadecimal format.</mrk><mrk mid="1" mtype="seg"> For each byte of BLOB data, two characters are generated.</mrk><mrk mid="2" mtype="seg"> The first character represents the high nibble (4 bits) in hexadecimal and the second character represents the low nibble.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BLOB column data is written to the export file in hexadecimal format.</mrk><mrk mid="1" mtype="seg"> For each byte of BLOB data, two characters are generated.</mrk><mrk mid="2" mtype="seg"> The first character represents the high nibble (4 bits) in hexadecimal and the second character represents the low nibble.</mrk></target>
</trans-unit>
<trans-unit id="tu36">
<source xml:lang="en">Exporting LOB data to a separate external file from the other column data</source>
<seg-source><mrk mid="0" mtype="seg">Exporting LOB data to a separate external file from the other column data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Exporting LOB data to a separate external file from the other column data</mrk></target>
</trans-unit>
<trans-unit id="tu37">
<source xml:lang="en">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data to a separate external file. These procedures include the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>LOBSFILENAME<ept id="3">&lt;/codeph&gt;</ept> parameter, which specifies the name of the external file for the LOB data.</source>
<seg-source><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data to a separate external file.</mrk><mrk mid="1" mtype="seg"> These procedures include the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>LOBSFILENAME<ept id="3">&lt;/codeph&gt;</ept> parameter, which specifies the name of the external file for the LOB data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE<ept id="1">&lt;/codeph&gt;</ept> and <bpt id="2" ctype="x-codeph">&lt;codeph&gt;</bpt>SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE<ept id="2">&lt;/codeph&gt;</ept> procedures to write LOB data to a separate external file.</mrk><mrk mid="1" mtype="seg"> These procedures include the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt>LOBSFILENAME<ept id="3">&lt;/codeph&gt;</ept> parameter, which specifies the name of the external file for the LOB data.</mrk></target>
</trans-unit>
<trans-unit id="tu38">
<source xml:lang="en">When you use these procedures, the location of the LOB data is written to the main export file. The format of the reference to the LOB stored in the main export file is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="2">&lt;/i&gt;</ept>.<bpt id="3" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="3">&lt;/i&gt;</ept>.<bpt id="4" ctype="x-i">&lt;i&gt;</bpt>length<ept id="4">&lt;/i&gt;</ept>/<ept id="1">&lt;/codeph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">When you use these procedures, the location of the LOB data is written to the main export file.</mrk><mrk mid="1" mtype="seg"> The format of the reference to the LOB stored in the main export file is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="2">&lt;/i&gt;</ept>.<bpt id="3" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="3">&lt;/i&gt;</ept>.<bpt id="4" ctype="x-i">&lt;i&gt;</bpt>length<ept id="4">&lt;/i&gt;</ept>/<ept id="1">&lt;/codeph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you use these procedures, the location of the LOB data is written to the main export file.</mrk><mrk mid="1" mtype="seg"> The format of the reference to the LOB stored in the main export file is <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>lobsFileName<ept id="2">&lt;/i&gt;</ept>.<bpt id="3" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="3">&lt;/i&gt;</ept>.<bpt id="4" ctype="x-i">&lt;i&gt;</bpt>length<ept id="4">&lt;/i&gt;</ept>/<ept id="1">&lt;/codeph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu39">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="1">&lt;/i&gt;</ept> is the position in the external file in bytes</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="1">&lt;/i&gt;</ept> is the position in the external file in bytes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Offset<ept id="1">&lt;/i&gt;</ept> is the position in the external file in bytes</mrk></target>
</trans-unit>
<trans-unit id="tu40">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is the size of the LOB column data in bytes</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is the size of the LOB column data in bytes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is the size of the LOB column data in bytes</mrk></target>
</trans-unit>
<trans-unit id="tu41">
<source xml:lang="en">If a LOB column value is NULL, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is written as -1. No data conversion is performed when you export LOB data to an external file. BLOB data is written in binary format, and CLOB data is written using the codeset that you specify.</source>
<seg-source><mrk mid="0" mtype="seg">If a LOB column value is NULL, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is written as -1.</mrk><mrk mid="1" mtype="seg"> No data conversion is performed when you export LOB data to an external file.</mrk><mrk mid="2" mtype="seg"> BLOB data is written in binary format, and CLOB data is written using the codeset that you specify.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If a LOB column value is NULL, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>length<ept id="1">&lt;/i&gt;</ept> is written as -1.</mrk><mrk mid="1" mtype="seg"> No data conversion is performed when you export LOB data to an external file.</mrk><mrk mid="2" mtype="seg"> BLOB data is written in binary format, and CLOB data is written using the codeset that you specify.</mrk></target>
</trans-unit>
<trans-unit id="tu42">
<source xml:lang="en">See <bpt id="1" ctype="x-xref">&lt;xref href="radminimport91458.dita#radminimport91458"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for examples using each of the import and export procedures.</source>
<seg-source><mrk mid="0" mtype="seg">See <bpt id="1" ctype="x-xref">&lt;xref href="radminimport91458.dita#radminimport91458"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for examples using each of the import and export procedures.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See <bpt id="1" ctype="x-xref">&lt;xref href="radminimport91458.dita#radminimport91458"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> for examples using each of the import and export procedures.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
