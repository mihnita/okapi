<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj11277.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">VALUES expression</source>
<seg-source><mrk mid="0" mtype="seg">VALUES expression</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">VALUES expression</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">VALUES expression</source>
<seg-source><mrk mid="0" mtype="seg">VALUES expression</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">VALUES expression</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">The VALUES expression allows construction of a row or a table from other values. A VALUES expression can be used in all the places where a query can, and thus can be used in any of the following ways:</source>
<seg-source><mrk mid="0" mtype="seg">The VALUES expression allows construction of a row or a table from other values.</mrk><mrk mid="1" mtype="seg"> A VALUES expression can be used in all the places where a query can, and thus can be used in any of the following ways:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The VALUES expression allows construction of a row or a table from other values.</mrk><mrk mid="1" mtype="seg"> A VALUES expression can be used in all the places where a query can, and thus can be used in any of the following ways:</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">As a statement that returns a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg">As a statement that returns a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">As a statement that returns a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Within expressions and statements wherever subqueries are permitted</source>
<seg-source><mrk mid="0" mtype="seg">Within expressions and statements wherever subqueries are permitted</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Within expressions and statements wherever subqueries are permitted</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">As the source of values for an INSERT statement (in an INSERT statement, you normally use a VALUES expression when you do not use a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>)</source>
<seg-source><mrk mid="0" mtype="seg">As the source of values for an INSERT statement (in an INSERT statement, you normally use a VALUES expression when you do not use a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">As the source of values for an INSERT statement (in an INSERT statement, you normally use a VALUES expression when you do not use a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept>)</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ VALUES ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>value<ept id="2">&lt;/i&gt;</ept> [ , <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>value<ept id="3">&lt;/i&gt;</ept> ]* ) [ , ( <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>value<ept id="4">&lt;/i&gt;</ept> [ , <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>value<ept id="5">&lt;/i&gt;</ept> ]* ) ]* | VALUES <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>value<ept id="6">&lt;/i&gt;</ept> [ , <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>value<ept id="7">&lt;/i&gt;</ept> ]* } [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> ] <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ VALUES ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>value<ept id="2">&lt;/i&gt;</ept> [ , <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>value<ept id="3">&lt;/i&gt;</ept> ]* ) [ , ( <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>value<ept id="4">&lt;/i&gt;</ept> [ , <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>value<ept id="5">&lt;/i&gt;</ept> ]* ) ]* | VALUES <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>value<ept id="6">&lt;/i&gt;</ept> [ , <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>value<ept id="7">&lt;/i&gt;</ept> ]* } [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> ] <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ VALUES ( <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>value<ept id="2">&lt;/i&gt;</ept> [ , <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>value<ept id="3">&lt;/i&gt;</ept> ]* ) [ , ( <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>value<ept id="4">&lt;/i&gt;</ept> [ , <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>value<ept id="5">&lt;/i&gt;</ept> ]* ) ]* | VALUES <bpt id="6" ctype="x-i">&lt;i&gt;</bpt>value<ept id="6">&lt;/i&gt;</ept> [ , <bpt id="7" ctype="x-i">&lt;i&gt;</bpt>value<ept id="7">&lt;/i&gt;</ept> ]* } [ <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rrefsqlj13658.dita#rrefsqlj13658"&gt;</bpt>ORDER BY clause<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ] [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>result offset clause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ <bpt id="12" ctype="x-i">&lt;i&gt;</bpt><bpt id="13" ctype="x-xref">&lt;xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"&gt;</bpt>fetch first clause<ept id="13">&lt;/xref&gt;</ept><ept id="12">&lt;/i&gt;</ept> ] <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">where <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>value<ept id="1">&lt;/i&gt;</ept> is defined as</source>
<seg-source><mrk mid="0" mtype="seg">where <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>value<ept id="1">&lt;/i&gt;</ept> is defined as</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">where <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>value<ept id="1">&lt;/i&gt;</ept> is defined as</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>expression<ept id="2">&lt;/i&gt;</ept> | DEFAULT<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>expression<ept id="2">&lt;/i&gt;</ept> | DEFAULT<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>expression<ept id="2">&lt;/i&gt;</ept> | DEFAULT<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">The first form constructs multi-column rows. The second form constructs single-column rows, each expression being the value of the column of the row.</source>
<seg-source><mrk mid="0" mtype="seg">The first form constructs multi-column rows.</mrk><mrk mid="1" mtype="seg"> The second form constructs single-column rows, each expression being the value of the column of the row.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The first form constructs multi-column rows.</mrk><mrk mid="1" mtype="seg"> The second form constructs single-column rows, each expression being the value of the column of the row.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">The DEFAULT keyword is allowed only if the VALUES expression is in an INSERT statement. Specifying DEFAULT for a column inserts the column's default value into the column. Another way to insert the default value into the column is to omit the column from the column list and only insert values into other columns in the table.</source>
<seg-source><mrk mid="0" mtype="seg">The DEFAULT keyword is allowed only if the VALUES expression is in an INSERT statement.</mrk><mrk mid="1" mtype="seg"> Specifying DEFAULT for a column inserts the column's default value into the column.</mrk><mrk mid="2" mtype="seg"> Another way to insert the default value into the column is to omit the column from the column list and only insert values into other columns in the table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The DEFAULT keyword is allowed only if the VALUES expression is in an INSERT statement.</mrk><mrk mid="1" mtype="seg"> Specifying DEFAULT for a column inserts the column's default value into the column.</mrk><mrk mid="2" mtype="seg"> Another way to insert the default value into the column is to omit the column from the column list and only insert values into other columns in the table.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">A VALUES expression that is used in an INSERT statement cannot use an ORDER BY, result offset, or fetch first clause. However, if the VALUES expression does not contain the DEFAULT keyword, the VALUES clause can be put in a subquery and ordered, as in the following statement:</source>
<seg-source><mrk mid="0" mtype="seg">A VALUES expression that is used in an INSERT statement cannot use an ORDER BY, result offset, or fetch first clause.</mrk><mrk mid="1" mtype="seg"> However, if the VALUES expression does not contain the DEFAULT keyword, the VALUES clause can be put in a subquery and ordered, as in the following statement:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A VALUES expression that is used in an INSERT statement cannot use an ORDER BY, result offset, or fetch first clause.</mrk><mrk mid="1" mtype="seg"> However, if the VALUES expression does not contain the DEFAULT keyword, the VALUES clause can be put in a subquery and ordered, as in the following statement:</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>INSERT INTO t SELECT * FROM (VALUES 'a','c','b') t ORDER BY 1;<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>INSERT INTO t SELECT * FROM (VALUES 'a','c','b') t ORDER BY 1;<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>INSERT INTO t SELECT * FROM (VALUES 'a','c','b') t ORDER BY 1;<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="2">&lt;/ph&gt;</ept> VALUES (1),(2),(3) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="3">&lt;/ph&gt;</ept> VALUES 1, 2, 3 <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- 1 row of 3 columns<ept id="4">&lt;/ph&gt;</ept> VALUES (1, 2, 3) <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 2 columns<ept id="5">&lt;/ph&gt;</ept> VALUES (1,21),(2,22),(3,23) <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and FETCH FIRST<ept id="6">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 FETCH FIRST 2 ROWS ONLY <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and OFFSET<ept id="7">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 OFFSET 1 ROW <bpt id="8" ctype="x-ph">&lt;ph&gt;</bpt>-- constructing a derived table<ept id="8">&lt;/ph&gt;</ept> VALUES ('orange', 'orange'), ('apple', 'red'), ('banana', 'yellow') <bpt id="9" ctype="x-ph">&lt;ph&gt;</bpt>-- Insert two new departments using one statement into the DEPARTMENT table, -- but do not assign a manager to the new department.<ept id="9">&lt;/ph&gt;</ept> INSERT INTO DEPARTMENT (DEPTNO, DEPTNAME, ADMRDEPT) VALUES ('B11', 'PURCHASING', 'B01'), ('E41', 'DATABASE ADMINISTRATION', 'E01') <bpt id="10" ctype="x-ph">&lt;ph&gt;</bpt>-- insert a row with a DEFAULT value for the MAJPROJ column<ept id="10">&lt;/ph&gt;</ept> INSERT INTO PROJECT (PROJNO, PROJNAME, DEPTNO, RESPEMP, PRSTDATE, MAJPROJ) VALUES ('PL2101', 'ENSURE COMPAT PLAN', 'B01', '000020', CURRENT_DATE, DEFAULT) <bpt id="11" ctype="x-ph">&lt;ph&gt;</bpt>-- using a built-in function<ept id="11">&lt;/ph&gt;</ept> VALUES CURRENT_DATE <bpt id="12" ctype="x-ph">&lt;ph&gt;</bpt>-- getting the value of an arbitrary expression<ept id="12">&lt;/ph&gt;</ept> VALUES (3*29, 26.0E0/3) <bpt id="13" ctype="x-ph">&lt;ph&gt;</bpt>-- getting a value returned by a built-in function<ept id="13">&lt;/ph&gt;</ept> values char(1) <it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="2">&lt;/ph&gt;</ept> VALUES (1),(2),(3) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="3">&lt;/ph&gt;</ept> VALUES 1, 2, 3 <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- 1 row of 3 columns<ept id="4">&lt;/ph&gt;</ept> VALUES (1, 2, 3) <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 2 columns<ept id="5">&lt;/ph&gt;</ept> VALUES (1,21),(2,22),(3,23) <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and FETCH FIRST<ept id="6">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 FETCH FIRST 2 ROWS ONLY <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and OFFSET<ept id="7">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 OFFSET 1 ROW <bpt id="8" ctype="x-ph">&lt;ph&gt;</bpt>-- constructing a derived table<ept id="8">&lt;/ph&gt;</ept> VALUES ('orange', 'orange'), ('apple', 'red'), ('banana', 'yellow') <bpt id="9" ctype="x-ph">&lt;ph&gt;</bpt>-- Insert two new departments using one statement into the DEPARTMENT table, -- but do not assign a manager to the new department.<ept id="9">&lt;/ph&gt;</ept></mrk><mrk mid="1" mtype="seg"> INSERT INTO DEPARTMENT (DEPTNO, DEPTNAME, ADMRDEPT) VALUES ('B11', 'PURCHASING', 'B01'), ('E41', 'DATABASE ADMINISTRATION', 'E01') <bpt id="10" ctype="x-ph">&lt;ph&gt;</bpt>-- insert a row with a DEFAULT value for the MAJPROJ column<ept id="10">&lt;/ph&gt;</ept> INSERT INTO PROJECT (PROJNO, PROJNAME, DEPTNO, RESPEMP, PRSTDATE, MAJPROJ) VALUES ('PL2101', 'ENSURE COMPAT PLAN', 'B01', '000020', CURRENT_DATE, DEFAULT) <bpt id="11" ctype="x-ph">&lt;ph&gt;</bpt>-- using a built-in function<ept id="11">&lt;/ph&gt;</ept> VALUES CURRENT_DATE <bpt id="12" ctype="x-ph">&lt;ph&gt;</bpt>-- getting the value of an arbitrary expression<ept id="12">&lt;/ph&gt;</ept> VALUES (3*29, 26.0E0/3) <bpt id="13" ctype="x-ph">&lt;ph&gt;</bpt>-- getting a value returned by a built-in function<ept id="13">&lt;/ph&gt;</ept> values char(1) <it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-b" pos="open">&lt;b&gt;</it><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="2">&lt;/ph&gt;</ept> VALUES (1),(2),(3) <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 1 column<ept id="3">&lt;/ph&gt;</ept> VALUES 1, 2, 3 <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- 1 row of 3 columns<ept id="4">&lt;/ph&gt;</ept> VALUES (1, 2, 3) <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- 3 rows of 2 columns<ept id="5">&lt;/ph&gt;</ept> VALUES (1,21),(2,22),(3,23) <bpt id="6" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and FETCH FIRST<ept id="6">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 FETCH FIRST 2 ROWS ONLY <bpt id="7" ctype="x-ph">&lt;ph&gt;</bpt>-- using ORDER BY and OFFSET<ept id="7">&lt;/ph&gt;</ept> VALUES (3,21),(1,22),(2,23) ORDER BY 1 OFFSET 1 ROW <bpt id="8" ctype="x-ph">&lt;ph&gt;</bpt>-- constructing a derived table<ept id="8">&lt;/ph&gt;</ept> VALUES ('orange', 'orange'), ('apple', 'red'), ('banana', 'yellow') <bpt id="9" ctype="x-ph">&lt;ph&gt;</bpt>-- Insert two new departments using one statement into the DEPARTMENT table, -- but do not assign a manager to the new department.<ept id="9">&lt;/ph&gt;</ept></mrk><mrk mid="1" mtype="seg"> INSERT INTO DEPARTMENT (DEPTNO, DEPTNAME, ADMRDEPT) VALUES ('B11', 'PURCHASING', 'B01'), ('E41', 'DATABASE ADMINISTRATION', 'E01') <bpt id="10" ctype="x-ph">&lt;ph&gt;</bpt>-- insert a row with a DEFAULT value for the MAJPROJ column<ept id="10">&lt;/ph&gt;</ept> INSERT INTO PROJECT (PROJNO, PROJNAME, DEPTNO, RESPEMP, PRSTDATE, MAJPROJ) VALUES ('PL2101', 'ENSURE COMPAT PLAN', 'B01', '000020', CURRENT_DATE, DEFAULT) <bpt id="11" ctype="x-ph">&lt;ph&gt;</bpt>-- using a built-in function<ept id="11">&lt;/ph&gt;</ept> VALUES CURRENT_DATE <bpt id="12" ctype="x-ph">&lt;ph&gt;</bpt>-- getting the value of an arbitrary expression<ept id="12">&lt;/ph&gt;</ept> VALUES (3*29, 26.0E0/3) <bpt id="13" ctype="x-ph">&lt;ph&gt;</bpt>-- getting a value returned by a built-in function<ept id="13">&lt;/ph&gt;</ept> values char(1) <it id="1" ctype="x-b" pos="close">&lt;/b&gt;</it></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
