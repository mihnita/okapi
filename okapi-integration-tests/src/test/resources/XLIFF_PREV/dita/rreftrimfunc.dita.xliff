<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rreftrimfunc.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">TRIM function</source>
<seg-source><mrk mid="0" mtype="seg">TRIM function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TRIM function</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">The TRIM function takes a character expression and returns that expression with leading and/or trailing pad characters removed.</source>
<seg-source><mrk mid="0" mtype="seg">The TRIM function takes a character expression and returns that expression with leading and/or trailing pad characters removed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The TRIM function takes a character expression and returns that expression with leading and/or trailing pad characters removed.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">functions</source>
<seg-source><mrk mid="0" mtype="seg">functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">functions</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">TRIM</source>
<seg-source><mrk mid="0" mtype="seg">TRIM</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TRIM</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">TRIM function</source>
<seg-source><mrk mid="0" mtype="seg">TRIM function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">TRIM function</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Optional parameters indicate whether leading, or trailing, or both leading and trailing pad characters should be removed, and specify the pad character that is to be removed.</source>
<seg-source><mrk mid="0" mtype="seg">Optional parameters indicate whether leading, or trailing, or both leading and trailing pad characters should be removed, and specify the pad character that is to be removed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Optional parameters indicate whether leading, or trailing, or both leading and trailing pad characters should be removed, and specify the pad character that is to be removed.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>TRIM( [ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimOp"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimOperands<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="4">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>TRIM( [ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimOp"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimOperands<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="4">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>TRIM( [ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimOp"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimOperands<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> ] <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="4">&lt;/i&gt;</ept> )<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">trimOperands</source>
<seg-source><mrk mid="0" mtype="seg">trimOperands</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">trimOperands</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimTy"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> ] FROM | <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="5">&lt;/i&gt;</ept> FROM }<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimTy"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> ] FROM | <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="5">&lt;/i&gt;</ept> FROM }<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ <bpt id="2" ctype="x-xref">&lt;xref
href="rreftrimfunc.dita#rreftrimfunc/trimTy"&gt;</bpt><bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="3">&lt;/i&gt;</ept><ept id="2">&lt;/xref&gt;</ept> [ <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> ] FROM | <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="5">&lt;/i&gt;</ept> FROM }<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> is a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>characterExpression<ept id="2">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">trimType</source>
<seg-source><mrk mid="0" mtype="seg">trimType</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">trimType</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ LEADING | TRAILING | BOTH }<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ LEADING | TRAILING | BOTH }<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>{ LEADING | TRAILING | BOTH }<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is not specified, it defaults to BOTH. If <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="2">&lt;/i&gt;</ept> is not specified, it will default to the space character (' '). Otherwise the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> expression must evaulate to one of the following:</source>
<seg-source><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is not specified, it defaults to BOTH.</mrk><mrk mid="1" mtype="seg"> If <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="2">&lt;/i&gt;</ept> is not specified, it will default to the space character (' ').</mrk><mrk mid="2" mtype="seg"> Otherwise the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> expression must evaulate to one of the following:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is not specified, it defaults to BOTH.</mrk><mrk mid="1" mtype="seg"> If <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="2">&lt;/i&gt;</ept> is not specified, it will default to the space character (' ').</mrk><mrk mid="2" mtype="seg"> Otherwise the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> expression must evaulate to one of the following:</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">A character string whose length is exactly one</source>
<seg-source><mrk mid="0" mtype="seg">A character string whose length is exactly one</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A character string whose length is exactly one</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">NULL</source>
<seg-source><mrk mid="0" mtype="seg">NULL</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">NULL</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">If either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> evaluates to NULL, the result of the TRIM function is NULL. Otherwise, the result of the TRIM function is defined as follows:</source>
<seg-source><mrk mid="0" mtype="seg">If either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> evaluates to NULL, the result of the TRIM function is NULL.</mrk><mrk mid="1" mtype="seg"> Otherwise, the result of the TRIM function is defined as follows:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> evaluates to NULL, the result of the TRIM function is NULL.</mrk><mrk mid="1" mtype="seg"> Otherwise, the result of the TRIM function is defined as follows:</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is LEADING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</source>
<seg-source><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is LEADING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is LEADING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is TRAILING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all trailing occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</source>
<seg-source><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is TRAILING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all trailing occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is TRAILING, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all trailing occurrences of <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> removed.</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is BOTH, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>and<ept id="3">&lt;/i&gt;</ept> trailing occurrences of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> removed.</source>
<seg-source><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is BOTH, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>and<ept id="3">&lt;/i&gt;</ept> trailing occurrences of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> removed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimType<ept id="1">&lt;/i&gt;</ept> is BOTH, the result will be the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="2">&lt;/i&gt;</ept> value with all leading <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>and<ept id="3">&lt;/i&gt;</ept> trailing occurrences of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="4">&lt;/i&gt;</ept> removed.</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept>'s data type is CHAR or VARCHAR, the return type of the TRIM function will be VARCHAR. Otherwise the return type of the TRIM function will be CLOB.</source>
<seg-source><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept>'s data type is CHAR or VARCHAR, the return type of the TRIM function will be VARCHAR.</mrk><mrk mid="1" mtype="seg"> Otherwise the return type of the TRIM function will be CLOB.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>trimSource<ept id="1">&lt;/i&gt;</ept>'s data type is CHAR or VARCHAR, the return type of the TRIM function will be VARCHAR.</mrk><mrk mid="1" mtype="seg"> Otherwise the return type of the TRIM function will be CLOB.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' derby ')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(BOTH ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(BOTH ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby' (no spaces)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(BOTH ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby ' (with a space at the end)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(LEADING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby ' (with a space at the end)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(LEADING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns 'derby ' (with a space at the end)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(LEADING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derby' (with two spaces at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(TRAILING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derby' (with two spaces at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(TRAILING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derby' (with two spaces at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(TRAILING ' ' FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(cast (null as char(1)) FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(cast (null as char(1)) FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(cast (null as char(1)) FROM ' derby ')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' ' FROM cast(null as varchar(30)))<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' ' FROM cast(null as varchar(30)))<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns NULL<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM(' ' FROM cast(null as varchar(30)))<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derb' (with a space at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('y' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derb' (with a space at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('y' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- returns ' derb' (with a space at the beginning)<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('y' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- results in an error because <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> can only be 1 character<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('by' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- results in an error because <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> can only be 1 character<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('by' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- results in an error because <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>trimCharacter<ept id="3">&lt;/i&gt;</ept> can only be 1 character<ept id="2">&lt;/ph&gt;</ept> VALUES TRIM('by' FROM ' derby')<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
