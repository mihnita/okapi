<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevconcepts839085.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Explicitly closing Statements, ResultSets, and Connections</source>
<seg-source><mrk mid="0" mtype="seg">Explicitly closing Statements, ResultSets, and Connections</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Explicitly closing Statements, ResultSets, and Connections</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">You should explicitly close <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statements<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSets<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connections<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> when you no longer need them, unless you declare them in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement (available in JDK 7 and after).</source>
<seg-source><mrk mid="0" mtype="seg">You should explicitly close <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statements<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSets<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connections<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> when you no longer need them, unless you declare them in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement (available in JDK 7 and after).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You should explicitly close <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statements<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSets<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, and <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connections<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> when you no longer need them, unless you declare them in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement (available in JDK 7 and after).</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Explicit close of JDBC objects</source>
<seg-source><mrk mid="0" mtype="seg">Explicit close of JDBC objects</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Explicit close of JDBC objects</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">Connections to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> are resources external to an application, and the garbage collector will not close them automatically.</source>
<seg-source><mrk mid="0" mtype="seg">Connections to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> are resources external to an application, and the garbage collector will not close them automatically.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Connections to <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> are resources external to an application, and the garbage collector will not close them automatically.</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">To close a <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statement<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, or <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> object that is not declared in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement, use its <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="10" ctype="x-i">&lt;i&gt;</bpt>close<ept id="10">&lt;/i&gt;</ept><ept id="9">&lt;/codeph&gt;</ept> method. If auto-commit is disabled, you must explicitly commit or roll back active transactions before you close the connection.</source>
<seg-source><mrk mid="0" mtype="seg">To close a <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statement<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, or <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> object that is not declared in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement, use its <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="10" ctype="x-i">&lt;i&gt;</bpt>close<ept id="10">&lt;/i&gt;</ept><ept id="9">&lt;/codeph&gt;</ept> method.</mrk><mrk mid="1" mtype="seg"> If auto-commit is disabled, you must explicitly commit or roll back active transactions before you close the connection.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To close a <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>Statement<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>, <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>ResultSet<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>, or <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept> object that is not declared in a <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources statement, use its <bpt id="9" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="10" ctype="x-i">&lt;i&gt;</bpt>close<ept id="10">&lt;/i&gt;</ept><ept id="9">&lt;/codeph&gt;</ept> method.</mrk><mrk mid="1" mtype="seg"> If auto-commit is disabled, you must explicitly commit or roll back active transactions before you close the connection.</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Statements, result sets, and connections extend <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>AutoCloseable<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept> in JDK 7 and after. If you declare a connection in a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources statement and there is an error that the code does not catch, the JRE will attempt to close the connection automatically.</source>
<seg-source><mrk mid="0" mtype="seg">Statements, result sets, and connections extend <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>AutoCloseable<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept> in JDK 7 and after.</mrk><mrk mid="1" mtype="seg"> If you declare a connection in a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources statement and there is an error that the code does not catch, the JRE will attempt to close the connection automatically.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Statements, result sets, and connections extend <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>AutoCloseable<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept> in JDK 7 and after.</mrk><mrk mid="1" mtype="seg"> If you declare a connection in a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources statement and there is an error that the code does not catch, the JRE will attempt to close the connection automatically.</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">Note that a transaction-severity or higher exception causes <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> to abort an in-flight transaction. But a statement-severity exception does NOT roll back the transaction. Also note that <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> throws an exception if an attempt is made to close a connection with an in-flight transaction. Suppose now that a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> is declared in a <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>try<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept>-with-resources statement, a transaction is in-flight, and an unhandled statement-severity error occurs inside the <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources block. In this situation, <bpt id="9" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="9">&lt;/ph&gt;</ept> will raise a follow-on exception as the JRE exits the <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>try<ept id="10">&lt;/i&gt;</ept>-with-resources block. (For details on error severity levels, see the documentation of the <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="12" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logSeverityLevel<ept id="12">&lt;/i&gt;</ept><ept id="11">&lt;/codeph&gt;</ept> property in the <bpt id="13" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="13">&lt;/ph&gt;</ept>.)</source>
<seg-source><mrk mid="0" mtype="seg">Note that a transaction-severity or higher exception causes <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> to abort an in-flight transaction.</mrk><mrk mid="1" mtype="seg"> But a statement-severity exception does NOT roll back the transaction.</mrk><mrk mid="2" mtype="seg"> Also note that <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> throws an exception if an attempt is made to close a connection with an in-flight transaction.</mrk><mrk mid="3" mtype="seg"> Suppose now that a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> is declared in a <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>try<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept>-with-resources statement, a transaction is in-flight, and an unhandled statement-severity error occurs inside the <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources block.</mrk><mrk mid="4" mtype="seg"> In this situation, <bpt id="9" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="9">&lt;/ph&gt;</ept> will raise a follow-on exception as the JRE exits the <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>try<ept id="10">&lt;/i&gt;</ept>-with-resources block.</mrk><mrk mid="5" mtype="seg"> (For details on error severity levels, see the documentation of the <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="12" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logSeverityLevel<ept id="12">&lt;/i&gt;</ept><ept id="11">&lt;/codeph&gt;</ept> property in the <bpt id="13" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="13">&lt;/ph&gt;</ept>.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note that a transaction-severity or higher exception causes <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> to abort an in-flight transaction.</mrk><mrk mid="1" mtype="seg"> But a statement-severity exception does NOT roll back the transaction.</mrk><mrk mid="2" mtype="seg"> Also note that <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept> throws an exception if an attempt is made to close a connection with an in-flight transaction.</mrk><mrk mid="3" mtype="seg"> Suppose now that a <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>Connection<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept> is declared in a <bpt id="5" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="6" ctype="x-i">&lt;i&gt;</bpt>try<ept id="6">&lt;/i&gt;</ept><ept id="5">&lt;/codeph&gt;</ept>-with-resources statement, a transaction is in-flight, and an unhandled statement-severity error occurs inside the <bpt id="7" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="8" ctype="x-i">&lt;i&gt;</bpt>try<ept id="8">&lt;/i&gt;</ept><ept id="7">&lt;/codeph&gt;</ept>-with-resources block.</mrk><mrk mid="4" mtype="seg"> In this situation, <bpt id="9" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="9">&lt;/ph&gt;</ept> will raise a follow-on exception as the JRE exits the <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>try<ept id="10">&lt;/i&gt;</ept>-with-resources block.</mrk><mrk mid="5" mtype="seg"> (For details on error severity levels, see the documentation of the <bpt id="11" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="12" ctype="x-i">&lt;i&gt;</bpt>derby.stream.error.logSeverityLevel<ept id="12">&lt;/i&gt;</ept><ept id="11">&lt;/codeph&gt;</ept> property in the <bpt id="13" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citref"&gt;</bpt><ept id="13">&lt;/ph&gt;</ept>.)</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">It is therefore always best to catch errors inside the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>try<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>-with-resources block and to either roll back or commit, as appropriate, to ensure that there is no pending transaction when leaving the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources block. This action also improves application portability, since DBMSs differ in their semantics when trying to close a connection with a pending transaction.</source>
<seg-source><mrk mid="0" mtype="seg">It is therefore always best to catch errors inside the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>try<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>-with-resources block and to either roll back or commit, as appropriate, to ensure that there is no pending transaction when leaving the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources block.</mrk><mrk mid="1" mtype="seg"> This action also improves application portability, since DBMSs differ in their semantics when trying to close a connection with a pending transaction.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It is therefore always best to catch errors inside the <bpt id="1" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="2" ctype="x-i">&lt;i&gt;</bpt>try<ept id="2">&lt;/i&gt;</ept><ept id="1">&lt;/codeph&gt;</ept>-with-resources block and to either roll back or commit, as appropriate, to ensure that there is no pending transaction when leaving the <bpt id="3" ctype="x-codeph">&lt;codeph&gt;</bpt><bpt id="4" ctype="x-i">&lt;i&gt;</bpt>try<ept id="4">&lt;/i&gt;</ept><ept id="3">&lt;/codeph&gt;</ept>-with-resources block.</mrk><mrk mid="1" mtype="seg"> This action also improves application portability, since DBMSs differ in their semantics when trying to close a connection with a pending transaction.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
