<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefjdbc4_2sqltype.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">java.sql.SQLType interface</source>
<seg-source><mrk mid="0" mtype="seg">java.sql.SQLType interface</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">java.sql.SQLType interface</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">JDBC 4.2</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.2</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">SQLType interface</source>
<seg-source><mrk mid="0" mtype="seg">SQLType interface</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQLType interface</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">JDBC 4.2 introduces a new data type identifier, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLType<ept id="1">&lt;/i&gt;</ept>, to help databases describe data types which do not appear in the ANSI/ISO SQL Standard. Databases which provide non-standard types can provide their own implementations of <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept>. JDBC 4.2 also supplies its own implementation, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.JDBCType<ept id="3">&lt;/i&gt;</ept>, which provides an enum for each of the type identifiers in <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="4">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">JDBC 4.2 introduces a new data type identifier, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLType<ept id="1">&lt;/i&gt;</ept>, to help databases describe data types which do not appear in the ANSI/ISO SQL Standard.</mrk><mrk mid="1" mtype="seg"> Databases which provide non-standard types can provide their own implementations of <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> JDBC 4.2 also supplies its own implementation, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.JDBCType<ept id="3">&lt;/i&gt;</ept>, which provides an enum for each of the type identifiers in <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="4">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">JDBC 4.2 introduces a new data type identifier, <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLType<ept id="1">&lt;/i&gt;</ept>, to help databases describe data types which do not appear in the ANSI/ISO SQL Standard.</mrk><mrk mid="1" mtype="seg"> Databases which provide non-standard types can provide their own implementations of <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> JDBC 4.2 also supplies its own implementation, <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.JDBCType<ept id="3">&lt;/i&gt;</ept>, which provides an enum for each of the type identifiers in <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="4">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> does not expose any datatypes which are not represented by <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="2">&lt;/i&gt;</ept> enums. Therefore, <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not need to provide its own implementation of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="4">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> does not expose any datatypes which are not represented by <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="2">&lt;/i&gt;</ept> enums.</mrk><mrk mid="1" mtype="seg"> Therefore, <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not need to provide its own implementation of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="4">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> does not expose any datatypes which are not represented by <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="2">&lt;/i&gt;</ept> enums.</mrk><mrk mid="1" mtype="seg"> Therefore, <bpt id="3" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="3">&lt;/ph&gt;</ept> does not need to provide its own implementation of <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="4">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Overloads with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> arguments have been added to a few interfaces, alongside the existing methods which take <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifiers from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>. The affected interfaces are as follows:</source>
<seg-source><mrk mid="0" mtype="seg">Overloads with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> arguments have been added to a few interfaces, alongside the existing methods which take <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifiers from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The affected interfaces are as follows:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Overloads with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> arguments have been added to a few interfaces, alongside the existing methods which take <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifiers from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The affected interfaces are as follows:</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.CallableStatement<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.CallableStatement<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.CallableStatement<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.PreparedStatement<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.PreparedStatement<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.PreparedStatement<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">With <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, these methods raise a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLFeatureNotSupportedException<ept id="2">&lt;/i&gt;</ept> (SQLState 0A000) if the caller passes in a bad <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="3">&lt;/i&gt;</ept>, which can be either of the following:</source>
<seg-source><mrk mid="0" mtype="seg">With <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, these methods raise a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLFeatureNotSupportedException<ept id="2">&lt;/i&gt;</ept> (SQLState 0A000) if the caller passes in a bad <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="3">&lt;/i&gt;</ept>, which can be either of the following:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">With <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>, these methods raise a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>java.sql.SQLFeatureNotSupportedException<ept id="2">&lt;/i&gt;</ept> (SQLState 0A000) if the caller passes in a bad <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="3">&lt;/i&gt;</ept>, which can be either of the following:</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> from a foreign database; that is, a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept> which is not one of the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="3">&lt;/i&gt;</ept> enums.</source>
<seg-source><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> from a foreign database; that is, a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept> which is not one of the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="3">&lt;/i&gt;</ept> enums.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="1">&lt;/i&gt;</ept> from a foreign database; that is, a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>SQLType<ept id="2">&lt;/i&gt;</ept> which is not one of the <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="3">&lt;/i&gt;</ept> enums.</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="1">&lt;/i&gt;</ept> enum whose corresponding <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifier (from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>) is not supported by <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>. The supported <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>int<ept id="5">&lt;/i&gt;</ept> type identifiers are documented in <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc20377.dita#rrefjdbc20377"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept> and in the <bpt id="7" ctype="x-xref">&lt;xref href="crefsqlj31068.dita#crefsqlj31068"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept> section. The <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="8">&lt;/i&gt;</ept> enums have the same names as their corresponding <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>int<ept id="9">&lt;/i&gt;</ept> identifiers in <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="10">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="1">&lt;/i&gt;</ept> enum whose corresponding <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifier (from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>) is not supported by <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The supported <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>int<ept id="5">&lt;/i&gt;</ept> type identifiers are documented in <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc20377.dita#rrefjdbc20377"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept> and in the <bpt id="7" ctype="x-xref">&lt;xref href="crefsqlj31068.dita#crefsqlj31068"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept> section.</mrk><mrk mid="2" mtype="seg"> The <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="8">&lt;/i&gt;</ept> enums have the same names as their corresponding <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>int<ept id="9">&lt;/i&gt;</ept> identifiers in <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="10">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="1">&lt;/i&gt;</ept> enum whose corresponding <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>int<ept id="2">&lt;/i&gt;</ept> type identifier (from <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="3">&lt;/i&gt;</ept>) is not supported by <bpt id="4" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="4">&lt;/ph&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> The supported <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>int<ept id="5">&lt;/i&gt;</ept> type identifiers are documented in <bpt id="6" ctype="x-xref">&lt;xref href="rrefjdbc20377.dita#rrefjdbc20377"&gt;</bpt><ept id="6">&lt;/xref&gt;</ept> and in the <bpt id="7" ctype="x-xref">&lt;xref href="crefsqlj31068.dita#crefsqlj31068"&gt;</bpt><ept id="7">&lt;/xref&gt;</ept> section.</mrk><mrk mid="2" mtype="seg"> The <bpt id="8" ctype="x-i">&lt;i&gt;</bpt>JDBCType<ept id="8">&lt;/i&gt;</ept> enums have the same names as their corresponding <bpt id="9" ctype="x-i">&lt;i&gt;</bpt>int<ept id="9">&lt;/i&gt;</ept> identifiers in <bpt id="10" ctype="x-i">&lt;i&gt;</bpt>java.sql.Types<ept id="10">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
