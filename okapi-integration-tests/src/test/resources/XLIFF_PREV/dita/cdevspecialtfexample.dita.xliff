<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevspecialtfexample.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Example <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table function</source>
<seg-source><mrk mid="0" mtype="seg">Example <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept>-style table function</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">The following simple table function selects rows from a foreign database.</source>
<seg-source><mrk mid="0" mtype="seg">The following simple table function selects rows from a foreign database.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The following simple table function selects rows from a foreign database.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Functions</source>
<seg-source><mrk mid="0" mtype="seg">Functions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Functions</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">table function example</source>
<seg-source><mrk mid="0" mtype="seg">table function example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">table function example</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">package com.example.hrSchema; import java.sql.*; /** * Sample Table Function for reading the employee table in an * external database. */ public class EmployeeTable { public static ResultSet read() throws SQLException { Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement( "select * from hrSchema.EmployeeTable" ); return ps.executeQuery(); } protected static Connection getConnection() throws SQLException { String EXTERNAL_DRIVER = "com.mysql.jdbc.Driver"; try { Class.forName( EXTERNAL_DRIVER ); } catch (ClassNotFoundException e) { throw new SQLException( "Could not find class " + EXTERNAL_DRIVER ); } Connection conn = DriverManager.getConnection( "jdbc:mysql://localhost/hr?user=root&amp;password=mysql-passwd" ); return conn; } }</source>
<seg-source><mrk mid="0" mtype="seg">package com.example.hrSchema; import java.sql.*; /** * Sample Table Function for reading the employee table in an * external database.</mrk><mrk mid="1" mtype="seg"> */ public class EmployeeTable { public static ResultSet read() throws SQLException { Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement( "select * from hrSchema.EmployeeTable" ); return ps.executeQuery(); } protected static Connection getConnection() throws SQLException { String EXTERNAL_DRIVER = "com.mysql.jdbc.Driver"; try { Class.forName( EXTERNAL_DRIVER ); } catch (ClassNotFoundException e) { throw new SQLException( "Could not find class " + EXTERNAL_DRIVER ); } Connection conn = DriverManager.getConnection( "jdbc:mysql://localhost/hr?user=root&amp;password=mysql-passwd" ); return conn; } }</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">package com.example.hrSchema; import java.sql.*; /** * Sample Table Function for reading the employee table in an * external database.</mrk><mrk mid="1" mtype="seg"> */ public class EmployeeTable { public static ResultSet read() throws SQLException { Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement( "select * from hrSchema.EmployeeTable" ); return ps.executeQuery(); } protected static Connection getConnection() throws SQLException { String EXTERNAL_DRIVER = "com.mysql.jdbc.Driver"; try { Class.forName( EXTERNAL_DRIVER ); } catch (ClassNotFoundException e) { throw new SQLException( "Could not find class " + EXTERNAL_DRIVER ); } Connection conn = DriverManager.getConnection( "jdbc:mysql://localhost/hr?user=root&amp;password=mysql-passwd" ); return conn; } }</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
