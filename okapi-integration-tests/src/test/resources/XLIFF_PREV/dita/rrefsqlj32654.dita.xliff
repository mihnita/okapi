<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj32654.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">GROUP BY clause</source>
<seg-source><mrk mid="0" mtype="seg">GROUP BY clause</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">GROUP BY clause</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">GROUP BY clause</source>
<seg-source><mrk mid="0" mtype="seg">GROUP BY clause</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">GROUP BY clause</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">A GROUP BY clause, part of a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> groups a result into subsets that have matching values for one or more columns. In each group, no two rows have the same value for the grouping column or columns. NULLs are considered equivalent for grouping purposes.</source>
<seg-source><mrk mid="0" mtype="seg">A GROUP BY clause, part of a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> groups a result into subsets that have matching values for one or more columns.</mrk><mrk mid="1" mtype="seg"> In each group, no two rows have the same value for the grouping column or columns.</mrk><mrk mid="2" mtype="seg"> NULLs are considered equivalent for grouping purposes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A GROUP BY clause, part of a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="2">&lt;/xref&gt;</ept>,<ept id="1">&lt;/i&gt;</ept> groups a result into subsets that have matching values for one or more columns.</mrk><mrk mid="1" mtype="seg"> In each group, no two rows have the same value for the grouping column or columns.</mrk><mrk mid="2" mtype="seg"> NULLs are considered equivalent for grouping purposes.</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">You typically use a GROUP BY clause in conjunction with an aggregate expression.</source>
<seg-source><mrk mid="0" mtype="seg">You typically use a GROUP BY clause in conjunction with an aggregate expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You typically use a GROUP BY clause in conjunction with an aggregate expression.</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">Using the ROLLUP syntax, you can specify that multiple levels of grouping should be computed at once.</source>
<seg-source><mrk mid="0" mtype="seg">Using the ROLLUP syntax, you can specify that multiple levels of grouping should be computed at once.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using the ROLLUP syntax, you can specify that multiple levels of grouping should be computed at once.</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> GROUP BY { <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ , <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ]* | ROLLUP ( <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> [ , <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ]* ) }<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> GROUP BY { <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ , <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ]* | ROLLUP ( <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> [ , <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ]* ) }<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt> GROUP BY { <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> [ , <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> ]* | ROLLUP ( <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> [ , <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> ]* ) }<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> must be a column from the current scope of the query; there can be no columns from a query block outside the current scope. For example, if a GROUP BY clause is in a subquery, it cannot refer to columns in the outer query.</source>
<seg-source><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> must be a column from the current scope of the query; there can be no columns from a query block outside the current scope.</mrk><mrk mid="1" mtype="seg"> For example, if a GROUP BY clause is in a subquery, it cannot refer to columns in the outer query.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt><bpt id="2" ctype="x-xref">&lt;xref href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="2">&lt;/xref&gt;</ept><ept id="1">&lt;/i&gt;</ept> must be a column from the current scope of the query; there can be no columns from a query block outside the current scope.</mrk><mrk mid="1" mtype="seg"> For example, if a GROUP BY clause is in a subquery, it cannot refer to columns in the outer query.</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>selectItems<ept id="1">&lt;/i&gt;</ept> in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> with a GROUP BY clause must contain only aggregates or grouping columns.</source>
<seg-source><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>selectItems<ept id="1">&lt;/i&gt;</ept> in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> with a GROUP BY clause must contain only aggregates or grouping columns.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>selectItems<ept id="1">&lt;/i&gt;</ept> in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref href="rrefselectexpression.dita#rrefselectexpression"&gt;</bpt>selectExpression<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> with a GROUP BY clause must contain only aggregates or grouping columns.</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- find the average flying_times of flights grouped by -- airport<ept id="2">&lt;/ph&gt;</ept> SELECT AVG (flying_time), orig_airport FROM Flights GROUP BY orig_airport SELECT MAX(city_name), region FROM Cities, Countries WHERE Cities.country_ISO_code = Countries.country_ISO_code GROUP BY region <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- group by an a smallint<ept id="3">&lt;/ph&gt;</ept> SELECT ID, AVG(SALARY) FROM SAMP.STAFF GROUP BY ID <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- Get the AVGSALARY and EMPCOUNT columns, and the DEPTNO column using the AS clause -- And group by the WORKDEPT column using the correlation name OTHERS<ept id="4">&lt;/ph&gt;</ept> SELECT OTHERS.WORKDEPT AS DEPTNO, AVG(OTHERS.SALARY) AS AVGSALARY, COUNT(*) AS EMPCOUNT FROM SAMP.EMPLOYEE OTHERS GROUP BY OTHERS.WORKDEPT <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- Compute sub-totals of Sales_History data, grouping it by Region, by -- (Region, State), and by (Region, State, Product), as well as computing -- an overall total of the sales for all Regions, States, and Products:<ept id="5">&lt;/ph&gt;</ept> SELECT Region, State, Product, SUM(Sales) Total_Sales FROM Sales_History GROUP BY ROLLUP(Region, State, Product) <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- find the average flying_times of flights grouped by -- airport<ept id="2">&lt;/ph&gt;</ept> SELECT AVG (flying_time), orig_airport FROM Flights GROUP BY orig_airport SELECT MAX(city_name), region FROM Cities, Countries WHERE Cities.country_ISO_code = Countries.country_ISO_code GROUP BY region <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- group by an a smallint<ept id="3">&lt;/ph&gt;</ept> SELECT ID, AVG(SALARY) FROM SAMP.STAFF GROUP BY ID <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- Get the AVGSALARY and EMPCOUNT columns, and the DEPTNO column using the AS clause -- And group by the WORKDEPT column using the correlation name OTHERS<ept id="4">&lt;/ph&gt;</ept> SELECT OTHERS.WORKDEPT AS DEPTNO, AVG(OTHERS.SALARY) AS AVGSALARY, COUNT(*) AS EMPCOUNT FROM SAMP.EMPLOYEE OTHERS GROUP BY OTHERS.WORKDEPT <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- Compute sub-totals of Sales_History data, grouping it by Region, by -- (Region, State), and by (Region, State, Product), as well as computing -- an overall total of the sales for all Regions, States, and Products:<ept id="5">&lt;/ph&gt;</ept> SELECT Region, State, Product, SUM(Sales) Total_Sales FROM Sales_History GROUP BY ROLLUP(Region, State, Product) <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- find the average flying_times of flights grouped by -- airport<ept id="2">&lt;/ph&gt;</ept> SELECT AVG (flying_time), orig_airport FROM Flights GROUP BY orig_airport SELECT MAX(city_name), region FROM Cities, Countries WHERE Cities.country_ISO_code = Countries.country_ISO_code GROUP BY region <bpt id="3" ctype="x-ph">&lt;ph&gt;</bpt>-- group by an a smallint<ept id="3">&lt;/ph&gt;</ept> SELECT ID, AVG(SALARY) FROM SAMP.STAFF GROUP BY ID <bpt id="4" ctype="x-ph">&lt;ph&gt;</bpt>-- Get the AVGSALARY and EMPCOUNT columns, and the DEPTNO column using the AS clause -- And group by the WORKDEPT column using the correlation name OTHERS<ept id="4">&lt;/ph&gt;</ept> SELECT OTHERS.WORKDEPT AS DEPTNO, AVG(OTHERS.SALARY) AS AVGSALARY, COUNT(*) AS EMPCOUNT FROM SAMP.EMPLOYEE OTHERS GROUP BY OTHERS.WORKDEPT <bpt id="5" ctype="x-ph">&lt;ph&gt;</bpt>-- Compute sub-totals of Sales_History data, grouping it by Region, by -- (Region, State), and by (Region, State, Product), as well as computing -- an overall total of the sales for all Regions, States, and Products:<ept id="5">&lt;/ph&gt;</ept> SELECT Region, State, Product, SUM(Sales) Total_Sales FROM Sales_History GROUP BY ROLLUP(Region, State, Product) <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
