<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="rrefsqlj43125.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">CREATE TRIGGER statement</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TRIGGER statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TRIGGER statement</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">CREATE TRIGGER statement</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TRIGGER statement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TRIGGER statement</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">SQL statements</source>
<seg-source><mrk mid="0" mtype="seg">SQL statements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SQL statements</mrk></target>
</trans-unit>
<trans-unit id="tu4">
<source xml:lang="en">CREATE TRIGGER</source>
<seg-source><mrk mid="0" mtype="seg">CREATE TRIGGER</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">CREATE TRIGGER</mrk></target>
</trans-unit>
<trans-unit id="tu5">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu6">
<source xml:lang="en">creating</source>
<seg-source><mrk mid="0" mtype="seg">creating</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">creating</mrk></target>
</trans-unit>
<trans-unit id="tu7">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu8">
<source xml:lang="en">defining when they fire</source>
<seg-source><mrk mid="0" mtype="seg">defining when they fire</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">defining when they fire</mrk></target>
</trans-unit>
<trans-unit id="tu9">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu10">
<source xml:lang="en">database events</source>
<seg-source><mrk mid="0" mtype="seg">database events</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">database events</mrk></target>
</trans-unit>
<trans-unit id="tu11">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu12">
<source xml:lang="en">referencing clause</source>
<seg-source><mrk mid="0" mtype="seg">referencing clause</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">referencing clause</mrk></target>
</trans-unit>
<trans-unit id="tu13">
<source xml:lang="en">referencing old and new values</source>
<seg-source><mrk mid="0" mtype="seg">referencing old and new values</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">referencing old and new values</mrk></target>
</trans-unit>
<trans-unit id="tu14">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu15">
<source xml:lang="en">statement versus row triggers</source>
<seg-source><mrk mid="0" mtype="seg">statement versus row triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">statement versus row triggers</mrk></target>
</trans-unit>
<trans-unit id="tu16">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu17">
<source xml:lang="en">triggeredSQLStatement</source>
<seg-source><mrk mid="0" mtype="seg">triggeredSQLStatement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggeredSQLStatement</mrk></target>
</trans-unit>
<trans-unit id="tu18">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu19">
<source xml:lang="en">order of execution</source>
<seg-source><mrk mid="0" mtype="seg">order of execution</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">order of execution</mrk></target>
</trans-unit>
<trans-unit id="tu20">
<source xml:lang="en">triggers</source>
<seg-source><mrk mid="0" mtype="seg">triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggers</mrk></target>
</trans-unit>
<trans-unit id="tu21">
<source xml:lang="en">recursion</source>
<seg-source><mrk mid="0" mtype="seg">recursion</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">recursion</mrk></target>
</trans-unit>
<trans-unit id="tu22">
<source xml:lang="en">A trigger defines a set of actions that are executed when a database event occurs on a specified table. A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>database event<ept id="1">&lt;/i&gt;</ept> is a delete, insert, or update operation. For example, if you define a trigger for a delete on a particular table, the trigger's action occurs whenever someone deletes a row or rows from the table.</source>
<seg-source><mrk mid="0" mtype="seg">A trigger defines a set of actions that are executed when a database event occurs on a specified table.</mrk><mrk mid="1" mtype="seg"> A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>database event<ept id="1">&lt;/i&gt;</ept> is a delete, insert, or update operation.</mrk><mrk mid="2" mtype="seg"> For example, if you define a trigger for a delete on a particular table, the trigger's action occurs whenever someone deletes a row or rows from the table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A trigger defines a set of actions that are executed when a database event occurs on a specified table.</mrk><mrk mid="1" mtype="seg"> A <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>database event<ept id="1">&lt;/i&gt;</ept> is a delete, insert, or update operation.</mrk><mrk mid="2" mtype="seg"> For example, if you define a trigger for a delete on a particular table, the trigger's action occurs whenever someone deletes a row or rows from the table.</mrk></target>
</trans-unit>
<trans-unit id="tu23">
<source xml:lang="en">Along with constraints, triggers can help enforce data integrity rules with actions such as cascading deletes or updates. Triggers can also perform a variety of functions such as issuing alerts, updating other tables, sending e-mail, and other useful actions.</source>
<seg-source><mrk mid="0" mtype="seg">Along with constraints, triggers can help enforce data integrity rules with actions such as cascading deletes or updates.</mrk><mrk mid="1" mtype="seg"> Triggers can also perform a variety of functions such as issuing alerts, updating other tables, sending e-mail, and other useful actions.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Along with constraints, triggers can help enforce data integrity rules with actions such as cascading deletes or updates.</mrk><mrk mid="1" mtype="seg"> Triggers can also perform a variety of functions such as issuing alerts, updating other tables, sending e-mail, and other useful actions.</mrk></target>
</trans-unit>
<trans-unit id="tu24">
<source xml:lang="en">You can define any number of triggers for a single table, including multiple triggers on the same table for the same event.</source>
<seg-source><mrk mid="0" mtype="seg">You can define any number of triggers for a single table, including multiple triggers on the same table for the same event.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can define any number of triggers for a single table, including multiple triggers on the same table for the same event.</mrk></target>
</trans-unit>
<trans-unit id="tu25">
<source xml:lang="en">You can create a trigger in any schema where you are the schema owner. To create a trigger on a table that you do not own, you must be granted the TRIGGER privilege on that table. The <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> can also create triggers on any table in any schema.</source>
<seg-source><mrk mid="0" mtype="seg">You can create a trigger in any schema where you are the schema owner.</mrk><mrk mid="1" mtype="seg"> To create a trigger on a table that you do not own, you must be granted the TRIGGER privilege on that table.</mrk><mrk mid="2" mtype="seg"> The <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> can also create triggers on any table in any schema.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can create a trigger in any schema where you are the schema owner.</mrk><mrk mid="1" mtype="seg"> To create a trigger on a table that you do not own, you must be granted the TRIGGER privilege on that table.</mrk><mrk mid="2" mtype="seg"> The <bpt id="1" ctype="x-xref">&lt;xref href="rrefattrib26867.dita#rrefattrib26867"&gt;</bpt>database owner<ept id="1">&lt;/xref&gt;</ept> can also create triggers on any table in any schema.</mrk></target>
</trans-unit>
<trans-unit id="tu26">
<source xml:lang="en">A trigger operates with the privileges of the owner of the trigger. See "Using SQL standard authorization" and "Privileges on views, triggers, and constraints" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for details.</source>
<seg-source><mrk mid="0" mtype="seg">A trigger operates with the privileges of the owner of the trigger.</mrk><mrk mid="1" mtype="seg"> See "Using SQL standard authorization" and "Privileges on views, triggers, and constraints" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for details.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A trigger operates with the privileges of the owner of the trigger.</mrk><mrk mid="1" mtype="seg"> See "Using SQL standard authorization" and "Privileges on views, triggers, and constraints" in the <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> for details.</mrk></target>
</trans-unit>
<trans-unit id="tu27">
<source xml:lang="en">The trigger does not need to reside in the same schema as the table on which the trigger is defined.</source>
<seg-source><mrk mid="0" mtype="seg">The trigger does not need to reside in the same schema as the table on which the trigger is defined.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The trigger does not need to reside in the same schema as the table on which the trigger is defined.</mrk></target>
</trans-unit>
<trans-unit id="tu28">
<source xml:lang="en">If a qualified trigger name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">If a qualified trigger name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If a qualified trigger name is specified, the schema name cannot begin with <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>SYS<ept id="1">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu29">
<source xml:lang="en">Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Syntax</mrk></target>
</trans-unit>
<trans-unit id="tu30">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TRIGGER <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref
href="rreftriggername.dita#rreftriggername"&gt;</bpt>triggerName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { AFTER | NO CASCADE BEFORE } { INSERT | DELETE | UPDATE [ OF <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> [ , <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ]* ] } ON <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqlj89752.dita#rrefsqlj89752"&gt;</bpt>referencingClause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ FOR EACH { ROW | STATEMENT } ] [ MODE DB2SQL ] [ <bpt id="12" ctype="x-xref">&lt;xref href="rrefsqljwhenclause.dita#rrefsqljwhenclause"&gt;</bpt>WHEN ( <bpt id="13" ctype="x-i">&lt;i&gt;</bpt>booleanExpression<ept id="13">&lt;/i&gt;</ept> )<ept id="12">&lt;/xref&gt;</ept> ] <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/i1149821"&gt;</bpt>triggeredSQLStatement<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TRIGGER <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref
href="rreftriggername.dita#rreftriggername"&gt;</bpt>triggerName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { AFTER | NO CASCADE BEFORE } { INSERT | DELETE | UPDATE [ OF <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> [ , <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ]* ] } ON <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqlj89752.dita#rrefsqlj89752"&gt;</bpt>referencingClause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ FOR EACH { ROW | STATEMENT } ] [ MODE DB2SQL ] [ <bpt id="12" ctype="x-xref">&lt;xref href="rrefsqljwhenclause.dita#rrefsqljwhenclause"&gt;</bpt>WHEN ( <bpt id="13" ctype="x-i">&lt;i&gt;</bpt>booleanExpression<ept id="13">&lt;/i&gt;</ept> )<ept id="12">&lt;/xref&gt;</ept> ] <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/i1149821"&gt;</bpt>triggeredSQLStatement<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>CREATE TRIGGER <bpt id="2" ctype="x-i">&lt;i&gt;</bpt><bpt id="3" ctype="x-xref">&lt;xref
href="rreftriggername.dita#rreftriggername"&gt;</bpt>triggerName<ept id="3">&lt;/xref&gt;</ept><ept id="2">&lt;/i&gt;</ept> { AFTER | NO CASCADE BEFORE } { INSERT | DELETE | UPDATE [ OF <bpt id="4" ctype="x-i">&lt;i&gt;</bpt><bpt id="5" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="5">&lt;/xref&gt;</ept><ept id="4">&lt;/i&gt;</ept> [ , <bpt id="6" ctype="x-i">&lt;i&gt;</bpt><bpt id="7" ctype="x-xref">&lt;xref
href="rrefcolumnname.dita#rrefcolumnname"&gt;</bpt>columnName<ept id="7">&lt;/xref&gt;</ept><ept id="6">&lt;/i&gt;</ept> ]* ] } ON <bpt id="8" ctype="x-i">&lt;i&gt;</bpt><bpt id="9" ctype="x-xref">&lt;xref href="rreftablename.dita#rreftablename"&gt;</bpt>tableName<ept id="9">&lt;/xref&gt;</ept><ept id="8">&lt;/i&gt;</ept> [ <bpt id="10" ctype="x-i">&lt;i&gt;</bpt><bpt id="11" ctype="x-xref">&lt;xref href="rrefsqlj89752.dita#rrefsqlj89752"&gt;</bpt>referencingClause<ept id="11">&lt;/xref&gt;</ept><ept id="10">&lt;/i&gt;</ept> ] [ FOR EACH { ROW | STATEMENT } ] [ MODE DB2SQL ] [ <bpt id="12" ctype="x-xref">&lt;xref href="rrefsqljwhenclause.dita#rrefsqljwhenclause"&gt;</bpt>WHEN ( <bpt id="13" ctype="x-i">&lt;i&gt;</bpt>booleanExpression<ept id="13">&lt;/i&gt;</ept> )<ept id="12">&lt;/xref&gt;</ept> ] <bpt id="14" ctype="x-i">&lt;i&gt;</bpt><bpt id="15" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/i1149821"&gt;</bpt>triggeredSQLStatement<ept id="15">&lt;/xref&gt;</ept><ept id="14">&lt;/i&gt;</ept><ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu31">
<source xml:lang="en">Before or after: when triggers fire</source>
<seg-source><mrk mid="0" mtype="seg">Before or after: when triggers fire</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Before or after: when triggers fire</mrk></target>
</trans-unit>
<trans-unit id="tu32">
<source xml:lang="en">Triggers are defined as either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers.</source>
<seg-source><mrk mid="0" mtype="seg">Triggers are defined as either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Triggers are defined as either <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> or <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers.</mrk></target>
</trans-unit>
<trans-unit id="tu33">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> triggers fire before the statement's changes are applied and before any constraints have been applied. Before triggers can be either row or statement triggers (see <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>).</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> triggers fire before the statement's changes are applied and before any constraints have been applied.</mrk><mrk mid="1" mtype="seg"> Before triggers can be either row or statement triggers (see <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>Before<ept id="1">&lt;/i&gt;</ept> triggers fire before the statement's changes are applied and before any constraints have been applied.</mrk><mrk mid="1" mtype="seg"> Before triggers can be either row or statement triggers (see <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept>).</mrk></target>
</trans-unit>
<trans-unit id="tu34">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers fire after all constraints have been satisfied and after the changes have been applied to the target table. <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers can be either row or statement triggers (see <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>).</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers fire after all constraints have been satisfied and after the changes have been applied to the target table.</mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers can be either row or statement triggers (see <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers fire after all constraints have been satisfied and after the changes have been applied to the target table.</mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>After<ept id="2">&lt;/i&gt;</ept> triggers can be either row or statement triggers (see <bpt id="3" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="3">&lt;/xref&gt;</ept>).</mrk></target>
</trans-unit>
<trans-unit id="tu35">
<source xml:lang="en">Insert, delete, or update: what causes the trigger to fire</source>
<seg-source><mrk mid="0" mtype="seg">Insert, delete, or update: what causes the trigger to fire</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Insert, delete, or update: what causes the trigger to fire</mrk></target>
</trans-unit>
<trans-unit id="tu36">
<source xml:lang="en">A trigger is fired by one of the following database events, depending on how you define it (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> above):</source>
<seg-source><mrk mid="0" mtype="seg">A trigger is fired by one of the following database events, depending on how you define it (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> above):</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A trigger is fired by one of the following database events, depending on how you define it (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept> above):</mrk></target>
</trans-unit>
<trans-unit id="tu37">
<source xml:lang="en">INSERT</source>
<seg-source><mrk mid="0" mtype="seg">INSERT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">INSERT</mrk></target>
</trans-unit>
<trans-unit id="tu38">
<source xml:lang="en">UPDATE</source>
<seg-source><mrk mid="0" mtype="seg">UPDATE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UPDATE</mrk></target>
</trans-unit>
<trans-unit id="tu39">
<source xml:lang="en">DELETE</source>
<seg-source><mrk mid="0" mtype="seg">DELETE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DELETE</mrk></target>
</trans-unit>
<trans-unit id="tu40">
<source xml:lang="en">You can define any number of triggers for a given event on a given table. For update, you can specify columns.</source>
<seg-source><mrk mid="0" mtype="seg">You can define any number of triggers for a given event on a given table.</mrk><mrk mid="1" mtype="seg"> For update, you can specify columns.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can define any number of triggers for a given event on a given table.</mrk><mrk mid="1" mtype="seg"> For update, you can specify columns.</mrk></target>
</trans-unit>
<trans-unit id="tu41">
<source xml:lang="en">Referencing old and new values: the REFERENCING clause</source>
<seg-source><mrk mid="0" mtype="seg">Referencing old and new values: the REFERENCING clause</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Referencing old and new values: the REFERENCING clause</mrk></target>
</trans-unit>
<trans-unit id="tu42">
<source xml:lang="en">Many <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s need to refer to data that is currently being changed by the database event that caused them to fire. The <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> might need to refer to the new (post-change or "after") values.</source>
<seg-source><mrk mid="0" mtype="seg">Many <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s need to refer to data that is currently being changed by the database event that caused them to fire.</mrk><mrk mid="1" mtype="seg"> The <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> might need to refer to the new (post-change or "after") values.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Many <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s need to refer to data that is currently being changed by the database event that caused them to fire.</mrk><mrk mid="1" mtype="seg"> The <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> might need to refer to the new (post-change or "after") values.</mrk></target>
</trans-unit>
<trans-unit id="tu43">
<source xml:lang="en"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides you with a number of ways to refer to data that is currently being changed by the database event that caused the trigger to fire. Changed data can be referred to in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> using <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>transition variables<ept id="3">&lt;/i&gt;</ept> or <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>transition tables<ept id="4">&lt;/i&gt;</ept>. The REFERENCING clause allows you to provide a correlation name or alias for these transition variables by specifying OLD/NEW AS <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>correlationName <ept id="5">&lt;/i&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides you with a number of ways to refer to data that is currently being changed by the database event that caused the trigger to fire.</mrk><mrk mid="1" mtype="seg"> Changed data can be referred to in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> using <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>transition variables<ept id="3">&lt;/i&gt;</ept> or <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>transition tables<ept id="4">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> The REFERENCING clause allows you to provide a correlation name or alias for these transition variables by specifying OLD/NEW AS <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>correlationName <ept id="5">&lt;/i&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> provides you with a number of ways to refer to data that is currently being changed by the database event that caused the trigger to fire.</mrk><mrk mid="1" mtype="seg"> Changed data can be referred to in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> using <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>transition variables<ept id="3">&lt;/i&gt;</ept> or <bpt id="4" ctype="x-i">&lt;i&gt;</bpt>transition tables<ept id="4">&lt;/i&gt;</ept>.</mrk><mrk mid="2" mtype="seg"> The REFERENCING clause allows you to provide a correlation name or alias for these transition variables by specifying OLD/NEW AS <bpt id="5" ctype="x-i">&lt;i&gt;</bpt>correlationName <ept id="5">&lt;/i&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu44">
<source xml:lang="en">For example, if you add the following clause to the trigger definition:</source>
<seg-source><mrk mid="0" mtype="seg">For example, if you add the following clause to the trigger definition:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For example, if you add the following clause to the trigger definition:</mrk></target>
</trans-unit>
<trans-unit id="tu45">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD AS DELETEDROW<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD AS DELETEDROW<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD AS DELETEDROW<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu46">
<source xml:lang="en">you can then refer to this correlation name in the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>:</source>
<seg-source><mrk mid="0" mtype="seg">you can then refer to this correlation name in the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">you can then refer to this correlation name in the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>:</mrk></target>
</trans-unit>
<trans-unit id="tu47">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id = DELETEDROW.hotel_id<ept id="1">&lt;/b
&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id = DELETEDROW.hotel_id<ept id="1">&lt;/b
&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id = DELETEDROW.hotel_id<ept id="1">&lt;/b
&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu48">
<source xml:lang="en">The OLD and NEW transition variables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with a single row.</source>
<seg-source><mrk mid="0" mtype="seg">The OLD and NEW transition variables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with a single row.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The OLD and NEW transition variables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with a single row.</mrk></target>
</trans-unit>
<trans-unit id="tu49">
<source xml:lang="en">Only row triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition variables. INSERT row triggers cannot reference an OLD row. DELETE row triggers cannot reference a NEW row.</source>
<seg-source><mrk mid="0" mtype="seg">Only row triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition variables.</mrk><mrk mid="1" mtype="seg"> INSERT row triggers cannot reference an OLD row.</mrk><mrk mid="2" mtype="seg"> DELETE row triggers cannot reference a NEW row.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Only row triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition variables.</mrk><mrk mid="1" mtype="seg"> INSERT row triggers cannot reference an OLD row.</mrk><mrk mid="2" mtype="seg"> DELETE row triggers cannot reference a NEW row.</mrk></target>
</trans-unit>
<trans-unit id="tu50">
<source xml:lang="en">For statement triggers, transition <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tables<ept id="1">&lt;/i&gt;</ept> serve as a table identifier for the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> or the trigger qualification. The REFERENCING clause allows you to provide a correlation name or alias for these transition tables by specifying OLD_TABLE/NEW_TABLE AS correlationName</source>
<seg-source><mrk mid="0" mtype="seg">For statement triggers, transition <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tables<ept id="1">&lt;/i&gt;</ept> serve as a table identifier for the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> or the trigger qualification.</mrk><mrk mid="1" mtype="seg"> The REFERENCING clause allows you to provide a correlation name or alias for these transition tables by specifying OLD_TABLE/NEW_TABLE AS correlationName</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For statement triggers, transition <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>tables<ept id="1">&lt;/i&gt;</ept> serve as a table identifier for the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept> or the trigger qualification.</mrk><mrk mid="1" mtype="seg"> The REFERENCING clause allows you to provide a correlation name or alias for these transition tables by specifying OLD_TABLE/NEW_TABLE AS correlationName</mrk></target>
</trans-unit>
<trans-unit id="tu51">
<source xml:lang="en">For example:</source>
<seg-source><mrk mid="0" mtype="seg">For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For example:</mrk></target>
</trans-unit>
<trans-unit id="tu52">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD_TABLE AS DeletedHotels<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD_TABLE AS DeletedHotels<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>REFERENCING OLD_TABLE AS DeletedHotels<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu53">
<source xml:lang="en">allows you to use that new identifier (<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>DeletedHotels<ept id="1">&lt;/i&gt;</ept>) in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept>:</source>
<seg-source><mrk mid="0" mtype="seg">allows you to use that new identifier (<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>DeletedHotels<ept id="1">&lt;/i&gt;</ept>) in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept>:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">allows you to use that new identifier (<bpt id="1" ctype="x-i">&lt;i&gt;</bpt>DeletedHotels<ept id="1">&lt;/i&gt;</ept>) in the <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="2">&lt;/i&gt;</ept>:</mrk></target>
</trans-unit>
<trans-unit id="tu54">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id IN (SELECT hotel_id FROM DeletedHotels)<ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id IN (SELECT hotel_id FROM DeletedHotels)<ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt>DELETE FROM HotelAvailability WHERE hotel_id IN (SELECT hotel_id FROM DeletedHotels)<ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu55">
<source xml:lang="en">The old and new transition tables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with cardinality equivalent to the number of rows affected by the triggering event.</source>
<seg-source><mrk mid="0" mtype="seg">The old and new transition tables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with cardinality equivalent to the number of rows affected by the triggering event.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The old and new transition tables map to a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>java.sql.ResultSet<ept id="1">&lt;/i&gt;</ept> with cardinality equivalent to the number of rows affected by the triggering event.</mrk></target>
</trans-unit>
<trans-unit id="tu56">
<source xml:lang="en">Only statement triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition tables. INSERT statement triggers cannot reference an OLD table. DELETE statement triggers cannot reference a NEW table.</source>
<seg-source><mrk mid="0" mtype="seg">Only statement triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition tables.</mrk><mrk mid="1" mtype="seg"> INSERT statement triggers cannot reference an OLD table.</mrk><mrk mid="2" mtype="seg"> DELETE statement triggers cannot reference a NEW table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Only statement triggers (see <bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/sqlj54276"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept>) can use the transition tables.</mrk><mrk mid="1" mtype="seg"> INSERT statement triggers cannot reference an OLD table.</mrk><mrk mid="2" mtype="seg"> DELETE statement triggers cannot reference a NEW table.</mrk></target>
</trans-unit>
<trans-unit id="tu57">
<source xml:lang="en">The REFERENCING clause can designate only one new correlation or identifier and only one old correlation or identifier. Row triggers cannot designate an identifier for a transition table and statement triggers cannot designate a correlation for transition variables.</source>
<seg-source><mrk mid="0" mtype="seg">The REFERENCING clause can designate only one new correlation or identifier and only one old correlation or identifier.</mrk><mrk mid="1" mtype="seg"> Row triggers cannot designate an identifier for a transition table and statement triggers cannot designate a correlation for transition variables.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The REFERENCING clause can designate only one new correlation or identifier and only one old correlation or identifier.</mrk><mrk mid="1" mtype="seg"> Row triggers cannot designate an identifier for a transition table and statement triggers cannot designate a correlation for transition variables.</mrk></target>
</trans-unit>
<trans-unit id="tu58">
<source xml:lang="en">The transition tables or transition variables defined in the REFERENCING clause can be referenced from the WHEN clause.</source>
<seg-source><mrk mid="0" mtype="seg">The transition tables or transition variables defined in the REFERENCING clause can be referenced from the WHEN clause.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The transition tables or transition variables defined in the REFERENCING clause can be referenced from the WHEN clause.</mrk></target>
</trans-unit>
<trans-unit id="tu59">
<source xml:lang="en">Statement versus row triggers</source>
<seg-source><mrk mid="0" mtype="seg">Statement versus row triggers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Statement versus row triggers</mrk></target>
</trans-unit>
<trans-unit id="tu60">
<source xml:lang="en">You have the option to specify whether a trigger is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="1">&lt;/i&gt;</ept> or a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>row trigger<ept id="2">&lt;/i&gt;</ept>. If it is not specified in the CREATE TRIGGER statement via FOR EACH clause, then the trigger is a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="3">&lt;/i&gt;</ept> by default.</source>
<seg-source><mrk mid="0" mtype="seg">You have the option to specify whether a trigger is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="1">&lt;/i&gt;</ept> or a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>row trigger<ept id="2">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> If it is not specified in the CREATE TRIGGER statement via FOR EACH clause, then the trigger is a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="3">&lt;/i&gt;</ept> by default.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You have the option to specify whether a trigger is a <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="1">&lt;/i&gt;</ept> or a <bpt id="2" ctype="x-i">&lt;i&gt;</bpt>row trigger<ept id="2">&lt;/i&gt;</ept>.</mrk><mrk mid="1" mtype="seg"> If it is not specified in the CREATE TRIGGER statement via FOR EACH clause, then the trigger is a <bpt id="3" ctype="x-i">&lt;i&gt;</bpt>statement trigger<ept id="3">&lt;/i&gt;</ept> by default.</mrk></target>
</trans-unit>
<trans-unit id="tu61">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement triggers<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement triggers<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>statement triggers<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu62">
<source xml:lang="en">A statement trigger fires once per triggering event and regardless of whether any rows are modified by the insert, update, or delete event.</source>
<seg-source><mrk mid="0" mtype="seg">A statement trigger fires once per triggering event and regardless of whether any rows are modified by the insert, update, or delete event.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A statement trigger fires once per triggering event and regardless of whether any rows are modified by the insert, update, or delete event.</mrk></target>
</trans-unit>
<trans-unit id="tu63">
<source xml:lang="en"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>row triggers<ept id="1">&lt;/i&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>row triggers<ept id="1">&lt;/i&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-i">&lt;i&gt;</bpt>row triggers<ept id="1">&lt;/i&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu64">
<source xml:lang="en">A row trigger fires once for each row affected by the triggering event. If no rows are affected, the trigger does not fire.</source>
<seg-source><mrk mid="0" mtype="seg">A row trigger fires once for each row affected by the triggering event.</mrk><mrk mid="1" mtype="seg"> If no rows are affected, the trigger does not fire.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A row trigger fires once for each row affected by the triggering event.</mrk><mrk mid="1" mtype="seg"> If no rows are affected, the trigger does not fire.</mrk></target>
</trans-unit>
<trans-unit id="tu65">
<source xml:lang="en">An update that sets a column value to the value that it originally contained (for example, UPDATE T SET C = C) causes a row trigger to fire, even though the value of the column is the same as it was prior to the triggering event.</source>
<seg-source><mrk mid="0" mtype="seg">An update that sets a column value to the value that it originally contained (for example, UPDATE T SET C = C) causes a row trigger to fire, even though the value of the column is the same as it was prior to the triggering event.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An update that sets a column value to the value that it originally contained (for example, UPDATE T SET C = C) causes a row trigger to fire, even though the value of the column is the same as it was prior to the triggering event.</mrk></target>
</trans-unit>
<trans-unit id="tu66">
<source xml:lang="en">triggeredSQLStatement</source>
<seg-source><mrk mid="0" mtype="seg">triggeredSQLStatement</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">triggeredSQLStatement</mrk></target>
</trans-unit>
<trans-unit id="tu67">
<source xml:lang="en">The action defined by the trigger is called the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept> (in <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> above, see the last line). It has the following limitations:</source>
<seg-source><mrk mid="0" mtype="seg">The action defined by the trigger is called the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept> (in <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> above, see the last line).</mrk><mrk mid="1" mtype="seg"> It has the following limitations:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The action defined by the trigger is called the <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept> (in <bpt id="2" ctype="x-xref">&lt;xref href="rrefsqlj43125.dita#rrefsqlj43125/syn001"&gt;</bpt><ept id="2">&lt;/xref&gt;</ept> above, see the last line).</mrk><mrk mid="1" mtype="seg"> It has the following limitations:</mrk></target>
</trans-unit>
<trans-unit id="tu68">
<source xml:lang="en">It must not contain any dynamic parameters (?).</source>
<seg-source><mrk mid="0" mtype="seg">It must not contain any dynamic parameters (?).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not contain any dynamic parameters (?).</mrk></target>
</trans-unit>
<trans-unit id="tu69">
<source xml:lang="en">It must not create, alter, or drop the table upon which the trigger is defined.</source>
<seg-source><mrk mid="0" mtype="seg">It must not create, alter, or drop the table upon which the trigger is defined.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not create, alter, or drop the table upon which the trigger is defined.</mrk></target>
</trans-unit>
<trans-unit id="tu70">
<source xml:lang="en">It must not add an index to or remove an index from the table on which the trigger is defined.</source>
<seg-source><mrk mid="0" mtype="seg">It must not add an index to or remove an index from the table on which the trigger is defined.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not add an index to or remove an index from the table on which the trigger is defined.</mrk></target>
</trans-unit>
<trans-unit id="tu71">
<source xml:lang="en">It must not add a trigger to or drop a trigger from the table upon which the trigger is defined.</source>
<seg-source><mrk mid="0" mtype="seg">It must not add a trigger to or drop a trigger from the table upon which the trigger is defined.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not add a trigger to or drop a trigger from the table upon which the trigger is defined.</mrk></target>
</trans-unit>
<trans-unit id="tu72">
<source xml:lang="en">It must not commit or roll back the current transaction or change the isolation level.</source>
<seg-source><mrk mid="0" mtype="seg">It must not commit or roll back the current transaction or change the isolation level.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not commit or roll back the current transaction or change the isolation level.</mrk></target>
</trans-unit>
<trans-unit id="tu73">
<source xml:lang="en">It must not reference a table in the SESSION schema (such as a temporary table; see <ph id="1" ctype="x-xref">&lt;xref href="rrefdeclaretemptable.dita#rrefdeclaretemptable"/&gt;</ph>).</source>
<seg-source><mrk mid="0" mtype="seg">It must not reference a table in the SESSION schema (such as a temporary table; see <ph id="1" ctype="x-xref">&lt;xref href="rrefdeclaretemptable.dita#rrefdeclaretemptable"/&gt;</ph>).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It must not reference a table in the SESSION schema (such as a temporary table; see <ph id="1" ctype="x-xref">&lt;xref href="rrefdeclaretemptable.dita#rrefdeclaretemptable"/&gt;</ph>).</mrk></target>
</trans-unit>
<trans-unit id="tu74">
<source xml:lang="en">Before triggers cannot have INSERT, UPDATE or DELETE statements as their action.</source>
<seg-source><mrk mid="0" mtype="seg">Before triggers cannot have INSERT, UPDATE or DELETE statements as their action.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Before triggers cannot have INSERT, UPDATE or DELETE statements as their action.</mrk></target>
</trans-unit>
<trans-unit id="tu75">
<source xml:lang="en">Before triggers cannot call procedures that modify SQL data as their action.</source>
<seg-source><mrk mid="0" mtype="seg">Before triggers cannot call procedures that modify SQL data as their action.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Before triggers cannot call procedures that modify SQL data as their action.</mrk></target>
</trans-unit>
<trans-unit id="tu76">
<source xml:lang="en">The NEW variable of a Before trigger cannot reference a generated column.</source>
<seg-source><mrk mid="0" mtype="seg">The NEW variable of a Before trigger cannot reference a generated column.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The NEW variable of a Before trigger cannot reference a generated column.</mrk></target>
</trans-unit>
<trans-unit id="tu77">
<source xml:lang="en">For more information on <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s, see "Programming trigger actions" in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">For more information on <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s, see "Programming trigger actions" in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For more information on <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>triggeredSQLStatement<ept id="1">&lt;/i&gt;</ept>s, see "Programming trigger actions" in the <bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu78">
<source xml:lang="en">Order of execution</source>
<seg-source><mrk mid="0" mtype="seg">Order of execution</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Order of execution</mrk></target>
</trans-unit>
<trans-unit id="tu79">
<source xml:lang="en">When a database event occurs that fires a trigger, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> performs actions in this order:</source>
<seg-source><mrk mid="0" mtype="seg">When a database event occurs that fires a trigger, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> performs actions in this order:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a database event occurs that fires a trigger, <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> performs actions in this order:</mrk></target>
</trans-unit>
<trans-unit id="tu80">
<source xml:lang="en">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>No Cascade Before<ept id="1">&lt;/i&gt;</ept> triggers.</source>
<seg-source><mrk mid="0" mtype="seg">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>No Cascade Before<ept id="1">&lt;/i&gt;</ept> triggers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>No Cascade Before<ept id="1">&lt;/i&gt;</ept> triggers.</mrk></target>
</trans-unit>
<trans-unit id="tu81">
<source xml:lang="en">It performs constraint checking (primary key, unique key, foreign key, check).</source>
<seg-source><mrk mid="0" mtype="seg">It performs constraint checking (primary key, unique key, foreign key, check).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It performs constraint checking (primary key, unique key, foreign key, check).</mrk></target>
</trans-unit>
<trans-unit id="tu82">
<source xml:lang="en">It performs the insert, update, or delete.</source>
<seg-source><mrk mid="0" mtype="seg">It performs the insert, update, or delete.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It performs the insert, update, or delete.</mrk></target>
</trans-unit>
<trans-unit id="tu83">
<source xml:lang="en">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers.</source>
<seg-source><mrk mid="0" mtype="seg">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It fires <bpt id="1" ctype="x-i">&lt;i&gt;</bpt>After<ept id="1">&lt;/i&gt;</ept> triggers.</mrk></target>
</trans-unit>
<trans-unit id="tu84">
<source xml:lang="en">When multiple triggers are defined for the same database event for the same table for the same trigger time (before or after), triggers are fired in the order in which they were created.</source>
<seg-source><mrk mid="0" mtype="seg">When multiple triggers are defined for the same database event for the same table for the same trigger time (before or after), triggers are fired in the order in which they were created.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When multiple triggers are defined for the same database event for the same table for the same trigger time (before or after), triggers are fired in the order in which they were created.</mrk></target>
</trans-unit>
<trans-unit id="tu85">
<source xml:lang="en">Examples</source>
<seg-source><mrk mid="0" mtype="seg">Examples</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Examples</mrk></target>
</trans-unit>
<trans-unit id="tu86">
<source xml:lang="en"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- Statements and triggers: <ept id="2">&lt;/ph&gt;</ept> CREATE TRIGGER t1 NO CASCADE BEFORE UPDATE ON x FOR EACH ROW MODE DB2SQL values app.notifyEmail('Jerry', 'Table x is about to be updated'); CREATE TRIGGER FLIGHTSDELETE AFTER DELETE ON FLIGHTS REFERENCING OLD_TABLE AS DELETEDFLIGHTS FOR EACH STATEMENT DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID IN (SELECT FLIGHT_ID FROM DELETEDFLIGHTS); CREATE TRIGGER FLIGHTSDELETE3 AFTER DELETE ON FLIGHTS REFERENCING OLD AS OLD FOR EACH ROW DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID = OLD.FLIGHT_ID; <ept id="1">&lt;/b&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- Statements and triggers: <ept id="2">&lt;/ph&gt;</ept> CREATE TRIGGER t1 NO CASCADE BEFORE UPDATE ON x FOR EACH ROW MODE DB2SQL values app.notifyEmail('Jerry', 'Table x is about to be updated'); CREATE TRIGGER FLIGHTSDELETE AFTER DELETE ON FLIGHTS REFERENCING OLD_TABLE AS DELETEDFLIGHTS FOR EACH STATEMENT DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID IN (SELECT FLIGHT_ID FROM DELETEDFLIGHTS); CREATE TRIGGER FLIGHTSDELETE3 AFTER DELETE ON FLIGHTS REFERENCING OLD AS OLD FOR EACH ROW DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID = OLD.FLIGHT_ID; <ept id="1">&lt;/b&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-b">&lt;b&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph&gt;</bpt>-- Statements and triggers: <ept id="2">&lt;/ph&gt;</ept> CREATE TRIGGER t1 NO CASCADE BEFORE UPDATE ON x FOR EACH ROW MODE DB2SQL values app.notifyEmail('Jerry', 'Table x is about to be updated'); CREATE TRIGGER FLIGHTSDELETE AFTER DELETE ON FLIGHTS REFERENCING OLD_TABLE AS DELETEDFLIGHTS FOR EACH STATEMENT DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID IN (SELECT FLIGHT_ID FROM DELETEDFLIGHTS); CREATE TRIGGER FLIGHTSDELETE3 AFTER DELETE ON FLIGHTS REFERENCING OLD AS OLD FOR EACH ROW DELETE FROM FLIGHTAVAILABILITY WHERE FLIGHT_ID = OLD.FLIGHT_ID; <ept id="1">&lt;/b&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu87">
<source xml:lang="en">You can find more examples in the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept>.</source>
<seg-source><mrk mid="0" mtype="seg">You can find more examples in the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can find more examples in the <bpt id="1" ctype="x-cite">&lt;cite&gt;</bpt><bpt id="2" ctype="x-ph">&lt;ph conref="../conrefs.dita#pub/citdevelop"&gt;</bpt><ept id="2">&lt;/ph&gt;</ept><ept id="1">&lt;/cite&gt;</ept>.</mrk></target>
</trans-unit>
<trans-unit id="tu88">
<source xml:lang="en">Trigger recursion</source>
<seg-source><mrk mid="0" mtype="seg">Trigger recursion</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Trigger recursion</mrk></target>
</trans-unit>
<trans-unit id="tu89">
<source xml:lang="en">The maximum trigger recursion depth is 16.</source>
<seg-source><mrk mid="0" mtype="seg">The maximum trigger recursion depth is 16.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The maximum trigger recursion depth is 16.</mrk></target>
</trans-unit>
<trans-unit id="tu90">
<source xml:lang="en">Related information</source>
<seg-source><mrk mid="0" mtype="seg">Related information</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related information</mrk></target>
</trans-unit>
<trans-unit id="tu91">
<source xml:lang="en">Special system functions that return information about the current time or current user are evaluated when the trigger fires, not when it is created. Such functions include:</source>
<seg-source><mrk mid="0" mtype="seg">Special system functions that return information about the current time or current user are evaluated when the trigger fires, not when it is created.</mrk><mrk mid="1" mtype="seg"> Such functions include:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Special system functions that return information about the current time or current user are evaluated when the trigger fires, not when it is created.</mrk><mrk mid="1" mtype="seg"> Such functions include:</mrk></target>
</trans-unit>
<trans-unit id="tu92">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj34177.dita#rrefsqlj34177"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj34177.dita#rrefsqlj34177"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj34177.dita#rrefsqlj34177"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu93">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj33772.dita#rrefsqlj33772"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj33772.dita#rrefsqlj33772"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj33772.dita#rrefsqlj33772"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu94">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj15866.dita#rrefsqlj15866"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj15866.dita#rrefsqlj15866"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj15866.dita#rrefsqlj15866"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu95">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42324.dita#rrefsqlj42324"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42324.dita#rrefsqlj42324"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42324.dita#rrefsqlj42324"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu96">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj25228.dita#rrefsqlj25228"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj25228.dita#rrefsqlj25228"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj25228.dita#rrefsqlj25228"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="tu97">
<source xml:lang="en"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42476.dita#rrefsqlj42476"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42476.dita#rrefsqlj42476"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-xref">&lt;xref href="rrefsqlj42476.dita#rrefsqlj42476"&gt;</bpt><ept id="1">&lt;/xref&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
