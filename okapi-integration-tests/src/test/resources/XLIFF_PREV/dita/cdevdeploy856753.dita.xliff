<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="cdevdeploy856753.dita" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="utf-8" okp:configId="/home/jimh/Code/Okapi/okapi/okapi/filters/xmlstream/target/classes/net/sf/okapi/filters/xmlstream/dita.yml">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1">
<source xml:lang="en">Class loading overview</source>
<seg-source><mrk mid="0" mtype="seg">Class loading overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Class loading overview</mrk></target>
</trans-unit>
<trans-unit id="tu2">
<source xml:lang="en">You store application classes and resources by storing one or more jar files in the database. Then your application can access classes loaded by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from the jar file and does not need to be coded in a particular way. The only difference is the way in which you invoke the application.</source>
<seg-source><mrk mid="0" mtype="seg">You store application classes and resources by storing one or more jar files in the database.</mrk><mrk mid="1" mtype="seg"> Then your application can access classes loaded by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from the jar file and does not need to be coded in a particular way.</mrk><mrk mid="2" mtype="seg"> The only difference is the way in which you invoke the application.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You store application classes and resources by storing one or more jar files in the database.</mrk><mrk mid="1" mtype="seg"> Then your application can access classes loaded by <bpt id="1" ctype="x-ph">&lt;ph conref="../conrefs.dita#prod/productshortname"&gt;</bpt><ept id="1">&lt;/ph&gt;</ept> from the jar file and does not need to be coded in a particular way.</mrk><mrk mid="2" mtype="seg"> The only difference is the way in which you invoke the application.</mrk></target>
</trans-unit>
<trans-unit id="tu3">
<source xml:lang="en">Here are the basic steps.</source>
<seg-source><mrk mid="0" mtype="seg">Here are the basic steps.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Here are the basic steps.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
