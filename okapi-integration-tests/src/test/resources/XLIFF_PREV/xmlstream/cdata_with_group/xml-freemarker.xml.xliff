<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="xml-freemarker.xml" source-language="en" target-language="fr" datatype="xml" okp:inputEncoding="UTF-8" okp:configId="/home/jimh/Code/Okapi/okapi-integration-tests/common-integration-tests/target/test-classes/xmlstream/cdata_with_group/okf_xmlstream@cdata.fprm">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<group id="sd1_ssf1" resname="sub-filter:sd1">
<trans-unit id="sd1_sf1_tu1" resname="sd1_3">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong&gt;</bpt> this is a bolded text between html strong tags <ept id="1">&lt;/strong&gt;</ept> Here we want to pull out the freemarker into tags, but pass through the text and the brace value: &lt;#if contactInfo??&gt; or ${contactInfo}&lt;/#if&gt;. Here we ensure that we get the single else and handle the double quotes: &lt;#if smb.maxAlarmLevel == "notice"&gt;Important&lt;#else&gt;Urgent&lt;/#if&gt; information regarding ${sbsName} Another test with lots of regexee text: &lt;#if commentAuthorURL?has_content&gt; <bpt id="2" ctype="link">[#$sd1_sf1_dp1]</bpt>${commentAuthorName}<ept id="2">&lt;/a&gt;</ept> &lt;#else&gt;${commentAuthorName}&lt;/#if&gt; <bpt id="3" ctype="link">[#$sd1_sf1_dp2]</bpt>View all comments on this event<ept id="3">&lt;/a&gt;</ept> Ensure we pull don't break early on parentheses: ${totalTaskCount} upcoming &lt;#if (overdueTasks.size() &gt; 0)&gt; (${overdueTasks.size()} overdue)&lt;/#if&gt;</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong&gt;</bpt> this is a bolded text between html strong tags <ept id="1">&lt;/strong&gt;</ept> Here we want to pull out the freemarker into tags, but pass through the text and the brace value: &lt;#if contactInfo??&gt; or ${contactInfo}&lt;/#if&gt;.</mrk><mrk mid="1" mtype="seg"> Here we ensure that we get the single else and handle the double quotes: &lt;#if smb.maxAlarmLevel == "notice"&gt;Important&lt;#else&gt;Urgent&lt;/#if&gt; information regarding ${sbsName} Another test with lots of regexee text: &lt;#if commentAuthorURL?has_content&gt; <bpt id="2" ctype="link">[#$sd1_sf1_dp1]</bpt>${commentAuthorName}<ept id="2">&lt;/a&gt;</ept> &lt;#else&gt;${commentAuthorName}&lt;/#if&gt; <bpt id="3" ctype="link">[#$sd1_sf1_dp2]</bpt>View all comments on this event<ept id="3">&lt;/a&gt;</ept> Ensure we pull don't break early on parentheses: ${totalTaskCount} upcoming &lt;#if (overdueTasks.size() &gt; 0)&gt; (${overdueTasks.size()} overdue)&lt;/#if&gt;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong&gt;</bpt> this is a bolded text between html strong tags <ept id="1">&lt;/strong&gt;</ept> Here we want to pull out the freemarker into tags, but pass through the text and the brace value: &lt;#if contactInfo??&gt; or ${contactInfo}&lt;/#if&gt;.</mrk><mrk mid="1" mtype="seg"> Here we ensure that we get the single else and handle the double quotes: &lt;#if smb.maxAlarmLevel == "notice"&gt;Important&lt;#else&gt;Urgent&lt;/#if&gt; information regarding ${sbsName} Another test with lots of regexee text: &lt;#if commentAuthorURL?has_content&gt; <bpt id="2" ctype="link">[#$sd1_sf1_dp1]</bpt>${commentAuthorName}<ept id="2">&lt;/a&gt;</ept> &lt;#else&gt;${commentAuthorName}&lt;/#if&gt; <bpt id="3" ctype="link">[#$sd1_sf1_dp2]</bpt>View all comments on this event<ept id="3">&lt;/a&gt;</ept> Ensure we pull don't break early on parentheses: ${totalTaskCount} upcoming &lt;#if (overdueTasks.size() &gt; 0)&gt; (${overdueTasks.size()} overdue)&lt;/#if&gt;</mrk></target>
</trans-unit>
</group>
</body>
</file>
</xliff>
