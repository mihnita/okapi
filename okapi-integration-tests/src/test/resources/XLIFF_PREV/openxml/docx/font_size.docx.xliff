<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="word/document.xml" source-language="en" target-language="fr" datatype="x-undefined" okp:inputEncoding="UTF-8" okp:configId="/home/jimh/solidstate/code/okapi-integration-tests/target/test-classes/openxml/docx/okf_openxml@default.fprm">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="NFDBB2FA9-tu1" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>Computer science or computing science (sometimes abbreviated CS) is the study of the theoretical foundations of information and computation, and of practical techniques for their implementation and application in computer systems.<ept id="1">&lt;/run1&gt;</ept> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>It is frequently described as the systematic study of algorithmic processes that create, describe, and transform information.<ept id="2">&lt;/run2&gt;</ept> Computer science has many sub-fields; some, such as computer graphics, emphasize the computation of specific results, while others, such as computational complexity theory, study the properties of computational problems. <bpt id="3" ctype="x-empty">&lt;run3&gt;</bpt>Still others focus on the challenges in implementing computations.<ept id="3">&lt;/run3&gt;</ept> For example, programming language theory studies approaches to describe computations, while computer programming applies specific programming languages to solve specific computational problems, and human-computer interaction focuses on the challenges in making computers and computations useful, usable, and universally accessible to people.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>Computer science or computing science (sometimes abbreviated CS) is the study of the theoretical foundations of information and computation, and of practical techniques for their implementation and application in computer systems.<ept id="1">&lt;/run1&gt;</ept></mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>It is frequently described as the systematic study of algorithmic processes that create, describe, and transform information.<ept id="2">&lt;/run2&gt;</ept></mrk><mrk mid="2" mtype="seg"> Computer science has many sub-fields; some, such as computer graphics, emphasize the computation of specific results, while others, such as computational complexity theory, study the properties of computational problems.</mrk><mrk mid="3" mtype="seg"> <bpt id="3" ctype="x-empty">&lt;run3&gt;</bpt>Still others focus on the challenges in implementing computations.<ept id="3">&lt;/run3&gt;</ept></mrk><mrk mid="4" mtype="seg"> For example, programming language theory studies approaches to describe computations, while computer programming applies specific programming languages to solve specific computational problems, and human-computer interaction focuses on the challenges in making computers and computations useful, usable, and universally accessible to people.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>Computer science or computing science (sometimes abbreviated CS) is the study of the theoretical foundations of information and computation, and of practical techniques for their implementation and application in computer systems.<ept id="1">&lt;/run1&gt;</ept></mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>It is frequently described as the systematic study of algorithmic processes that create, describe, and transform information.<ept id="2">&lt;/run2&gt;</ept></mrk><mrk mid="2" mtype="seg"> Computer science has many sub-fields; some, such as computer graphics, emphasize the computation of specific results, while others, such as computational complexity theory, study the properties of computational problems.</mrk><mrk mid="3" mtype="seg"> <bpt id="3" ctype="x-empty">&lt;run3&gt;</bpt>Still others focus on the challenges in implementing computations.<ept id="3">&lt;/run3&gt;</ept></mrk><mrk mid="4" mtype="seg"> For example, programming language theory studies approaches to describe computations, while computer programming applies specific programming languages to solve specific computational problems, and human-computer interaction focuses on the challenges in making computers and computations useful, usable, and universally accessible to people.</mrk></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>The general public sometimes confuses computer science with careers that deal with computers (such as information technology), or think that it relates to their own experience of computers, which typically involves activities such as gaming, web-browsing, and word-processing.<ept id="1">&lt;/run1&gt;</ept> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>However, the focus of computer science is more on understanding the properties of the programs used to implement software such as games and web-browsers, and using that understanding to create new programs or improve existing ones.<ept id="2">&lt;/run2&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>The general public sometimes confuses computer science with careers that deal with computers (such as information technology), or think that it relates to their own experience of computers, which typically involves activities such as gaming, web-browsing, and word-processing.<ept id="1">&lt;/run1&gt;</ept></mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>However, the focus of computer science is more on understanding the properties of the programs used to implement software such as games and web-browsers, and using that understanding to create new programs or improve existing ones.<ept id="2">&lt;/run2&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-empty">&lt;run1&gt;</bpt>The general public sometimes confuses computer science with careers that deal with computers (such as information technology), or think that it relates to their own experience of computers, which typically involves activities such as gaming, web-browsing, and word-processing.<ept id="1">&lt;/run1&gt;</ept></mrk><mrk mid="1" mtype="seg"> <bpt id="2" ctype="x-empty">&lt;run2&gt;</bpt>However, the focus of computer science is more on understanding the properties of the programs used to implement software such as games and web-browsers, and using that understanding to create new programs or improve existing ones.<ept id="2">&lt;/run2&gt;</ept></mrk></target>
</trans-unit>
</body>
</file>
<file original="word/settings.xml" source-language="en" target-language="fr" datatype="x-undefined" okp:inputEncoding="UTF-8" okp:configId="/home/jimh/solidstate/code/okapi-integration-tests/target/test-classes/openxml/docx/okf_openxml@default.fprm">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
</body>
</file>
<file original="docProps/core.xml" source-language="en" target-language="fr" datatype="x-undefined" okp:inputEncoding="UTF-8" okp:configId="/home/jimh/solidstate/code/okapi-integration-tests/target/test-classes/openxml/docx/okf_openxml@default.fprm">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Matt Valley</source>
<seg-source><mrk mid="0" mtype="seg">Matt Valley</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Matt Valley</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
