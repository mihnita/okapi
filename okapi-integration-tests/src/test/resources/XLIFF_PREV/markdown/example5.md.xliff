<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="example5.md" source-language="en" target-language="fr" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Dillinger</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger</mrk></target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt><ph id="2" ctype="x-IMAGE">![</ph>N|Solid<ph id="3" ctype="x-IMAGE">](https://cldup.com/dTxpPi9lDf.thumb.png)</ph><ept id="1">](https://nodesource.com/products/nsolid)</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt><ph id="2" ctype="x-IMAGE">![</ph>N|Solid<ph id="3" ctype="x-IMAGE">](https://cldup.com/dTxpPi9lDf.thumb.png)</ph><ept id="1">](https://nodesource.com/products/nsolid)</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt><ph id="2" ctype="x-IMAGE">![</ph>N|Solid<ph id="3" ctype="x-IMAGE">](https://cldup.com/dTxpPi9lDf.thumb.png)</ph><ept id="1">](https://nodesource.com/products/nsolid)</ept></mrk></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</mrk></target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Type some Markdown on the left</source>
<seg-source><mrk mid="0" mtype="seg">Type some Markdown on the left</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Type some Markdown on the left</mrk></target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">See HTML in the right</source>
<seg-source><mrk mid="0" mtype="seg">See HTML in the right</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See HTML in the right</mrk></target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">Magic</source>
<seg-source><mrk mid="0" mtype="seg">Magic</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Magic</mrk></target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">New Features!</source>
<seg-source><mrk mid="0" mtype="seg">New Features!</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">New Features!</mrk></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Import a HTML file and watch it magically convert to Markdown</source>
<seg-source><mrk mid="0" mtype="seg">Import a HTML file and watch it magically convert to Markdown</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Import a HTML file and watch it magically convert to Markdown</mrk></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Drag and drop images (requires your Dropbox account be linked)</source>
<seg-source><mrk mid="0" mtype="seg">Drag and drop images (requires your Dropbox account be linked)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Drag and drop images (requires your Dropbox account be linked)</mrk></target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">You can also:</source>
<seg-source><mrk mid="0" mtype="seg">You can also:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can also:</mrk></target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">Import and save files from GitHub, Dropbox, Google Drive and One Drive</source>
<seg-source><mrk mid="0" mtype="seg">Import and save files from GitHub, Dropbox, Google Drive and One Drive</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Import and save files from GitHub, Dropbox, Google Drive and One Drive</mrk></target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">Drag and drop markdown and HTML files into Dillinger</source>
<seg-source><mrk mid="0" mtype="seg">Drag and drop markdown and HTML files into Dillinger</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Drag and drop markdown and HTML files into Dillinger</mrk></target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">Export documents as Markdown, HTML and PDF</source>
<seg-source><mrk mid="0" mtype="seg">Export documents as Markdown, HTML and PDF</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Export documents as Markdown, HTML and PDF</mrk></target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As <bpt id="1" ctype="link">[</bpt>John Gruber<ept id="1">]</ept> writes on the <bpt id="2" ctype="link">[</bpt>Markdown site<ept id="2">]</ept><bpt id="3" ctype="link">[</bpt><ept id="3">df1</ept><it id="4" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg">Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.</mrk><mrk mid="1" mtype="seg">  As <bpt id="1" ctype="link">[</bpt>John Gruber<ept id="1">]</ept> writes on the <bpt id="2" ctype="link">[</bpt>Markdown site<ept id="2">]</ept><bpt id="3" ctype="link">[</bpt><ept id="3">df1</ept><it id="4" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.</mrk><mrk mid="1" mtype="seg">  As <bpt id="1" ctype="link">[</bpt>John Gruber<ept id="1">]</ept> writes on the <bpt id="2" ctype="link">[</bpt>Markdown site<ept id="2">]</ept><bpt id="3" ctype="link">[</bpt><ept id="3">df1</ept><it id="4" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">The overriding design goal for Markdown's
formatting syntax is to make it as readable
as possible. The idea is that a
Markdown-formatted document should be
publishable as-is, as plain text, without
looking like it's been marked up with tags
or formatting instructions.</source>
<seg-source><mrk mid="0" mtype="seg">The overriding design goal for Markdown's</mrk>
<mrk mid="1" mtype="seg">formatting syntax is to make it as readable</mrk>
<mrk mid="2" mtype="seg">as possible.</mrk><mrk mid="3" mtype="seg"> The idea is that a</mrk>
<mrk mid="4" mtype="seg">Markdown-formatted document should be</mrk>
<mrk mid="5" mtype="seg">publishable as-is, as plain text, without</mrk>
<mrk mid="6" mtype="seg">looking like it's been marked up with tags</mrk>
<mrk mid="7" mtype="seg">or formatting instructions.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The overriding design goal for Markdown's</mrk>
<mrk mid="1" mtype="seg">formatting syntax is to make it as readable</mrk>
<mrk mid="2" mtype="seg">as possible.</mrk><mrk mid="3" mtype="seg"> The idea is that a</mrk>
<mrk mid="4" mtype="seg">Markdown-formatted document should be</mrk>
<mrk mid="5" mtype="seg">publishable as-is, as plain text, without</mrk>
<mrk mid="6" mtype="seg">looking like it's been marked up with tags</mrk>
<mrk mid="7" mtype="seg">or formatting instructions.</mrk></target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">This text you see here is <bpt id="1" ctype="italic">*</bpt>actually<ept id="1">*</ept> written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</source>
<seg-source><mrk mid="0" mtype="seg">This text you see here is <bpt id="1" ctype="italic">*</bpt>actually<ept id="1">*</ept> written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This text you see here is <bpt id="1" ctype="italic">*</bpt>actually<ept id="1">*</ept> written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</mrk></target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en">Tech</source>
<seg-source><mrk mid="0" mtype="seg">Tech</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Tech</mrk></target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en">Dillinger uses a number of open source projects to work properly:</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger uses a number of open source projects to work properly:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger uses a number of open source projects to work properly:</mrk></target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>AngularJS<ept id="1">]</ept> - HTML enhanced for web apps!</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>AngularJS<ept id="1">]</ept> - HTML enhanced for web apps!</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>AngularJS<ept id="1">]</ept> - HTML enhanced for web apps!</mrk></target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>Ace Editor<ept id="1">]</ept> - awesome web-based text editor</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Ace Editor<ept id="1">]</ept> - awesome web-based text editor</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Ace Editor<ept id="1">]</ept> - awesome web-based text editor</mrk></target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>markdown-it<ept id="1">]</ept> - Markdown parser done right. Fast and easy to extend.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>markdown-it<ept id="1">]</ept> - Markdown parser done right.</mrk><mrk mid="1" mtype="seg"> Fast and easy to extend.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>markdown-it<ept id="1">]</ept> - Markdown parser done right.</mrk><mrk mid="1" mtype="seg"> Fast and easy to extend.</mrk></target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>Twitter Bootstrap<ept id="1">]</ept> - great UI boilerplate for modern web apps</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Twitter Bootstrap<ept id="1">]</ept> - great UI boilerplate for modern web apps</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Twitter Bootstrap<ept id="1">]</ept> - great UI boilerplate for modern web apps</mrk></target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>node.js<ept id="1">]</ept> - evented I/O for the backend</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>node.js<ept id="1">]</ept> - evented I/O for the backend</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>node.js<ept id="1">]</ept> - evented I/O for the backend</mrk></target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>Express<ept id="1">]</ept> - fast node.js network app framework <bpt id="2" ctype="link">[</bpt>@tjholowaychuk<ept id="2">]</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Express<ept id="1">]</ept> - fast node.js network app framework <bpt id="2" ctype="link">[</bpt>@tjholowaychuk<ept id="2">]</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Express<ept id="1">]</ept> - fast node.js network app framework <bpt id="2" ctype="link">[</bpt>@tjholowaychuk<ept id="2">]</ept></mrk></target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>Gulp<ept id="1">]</ept> - the streaming build system</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Gulp<ept id="1">]</ept> - the streaming build system</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Gulp<ept id="1">]</ept> - the streaming build system</mrk></target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>Breakdance<ept id="1">](http://breakdance.io)</ept> - HTML to Markdown converter</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Breakdance<ept id="1">](http://breakdance.io)</ept> - HTML to Markdown converter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>Breakdance<ept id="1">](http://breakdance.io)</ept> - HTML to Markdown converter</mrk></target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>jQuery<ept id="1">]</ept> - duh</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>jQuery<ept id="1">]</ept> - duh</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>jQuery<ept id="1">]</ept> - duh</mrk></target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en">And of course Dillinger itself is open source with a <bpt id="1" ctype="link">[</bpt>public repository<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">dill</ept><it id="3" ctype="link" pos="close">]</it>
on GitHub.</source>
<seg-source><mrk mid="0" mtype="seg">And of course Dillinger itself is open source with a <bpt id="1" ctype="link">[</bpt>public repository<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">dill</ept><it id="3" ctype="link" pos="close">]</it></mrk>
<mrk mid="1" mtype="seg">on GitHub.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">And of course Dillinger itself is open source with a <bpt id="1" ctype="link">[</bpt>public repository<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">dill</ept><it id="3" ctype="link" pos="close">]</it></mrk>
<mrk mid="1" mtype="seg">on GitHub.</mrk></target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en">Installation</source>
<seg-source><mrk mid="0" mtype="seg">Installation</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Installation</mrk></target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en">Dillinger requires <bpt id="1" ctype="link">[</bpt>Node.js<ept id="1">](https://nodejs.org/)</ept> v4+ to run.</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger requires <bpt id="1" ctype="link">[</bpt>Node.js<ept id="1">](https://nodejs.org/)</ept> v4+ to run.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger requires <bpt id="1" ctype="link">[</bpt>Node.js<ept id="1">](https://nodejs.org/)</ept> v4+ to run.</mrk></target>
</trans-unit>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en">Install the dependencies and devDependencies and start the server.</source>
<seg-source><mrk mid="0" mtype="seg">Install the dependencies and devDependencies and start the server.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Install the dependencies and devDependencies and start the server.</mrk></target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">$ cd dillinger
$ npm install -d
$ node app
</source>
<seg-source><mrk mid="0" mtype="seg">$ cd dillinger</mrk>
<mrk mid="1" mtype="seg">$ npm install -d</mrk>
<mrk mid="2" mtype="seg">$ node app</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ cd dillinger</mrk>
<mrk mid="1" mtype="seg">$ npm install -d</mrk>
<mrk mid="2" mtype="seg">$ node app</mrk>
</target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en">For production environments...</source>
<seg-source><mrk mid="0" mtype="seg">For production environments...</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For production environments...</mrk></target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">$ npm install --production
$ NODE_ENV=production node app
</source>
<seg-source><mrk mid="0" mtype="seg">$ npm install --production</mrk>
<mrk mid="1" mtype="seg">$ NODE_ENV=production node app</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ npm install --production</mrk>
<mrk mid="1" mtype="seg">$ NODE_ENV=production node app</mrk>
</target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">Plugins</source>
<seg-source><mrk mid="0" mtype="seg">Plugins</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Plugins</mrk></target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en">Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger is currently extended with the following plugins.</mrk><mrk mid="1" mtype="seg"> Instructions on how to use them in your own application are linked below.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger is currently extended with the following plugins.</mrk><mrk mid="1" mtype="seg"> Instructions on how to use them in your own application are linked below.</mrk></target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en">Plugin</source>
<seg-source><mrk mid="0" mtype="seg">Plugin</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Plugin</mrk></target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en">README</source>
<seg-source><mrk mid="0" mtype="seg">README</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">README</mrk></target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en">Dropbox</source>
<seg-source><mrk mid="0" mtype="seg">Dropbox</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dropbox</mrk></target>
</trans-unit>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/dropbox/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlDb</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/dropbox/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlDb</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/dropbox/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlDb</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en">Github</source>
<seg-source><mrk mid="0" mtype="seg">Github</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Github</mrk></target>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/github/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGh</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/github/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGh</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/github/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGh</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en">Google Drive</source>
<seg-source><mrk mid="0" mtype="seg">Google Drive</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Google Drive</mrk></target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/googledrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGd</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/googledrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGd</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/googledrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGd</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">OneDrive</source>
<seg-source><mrk mid="0" mtype="seg">OneDrive</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">OneDrive</mrk></target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/onedrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlOd</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/onedrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlOd</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/onedrive/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlOd</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">Medium</source>
<seg-source><mrk mid="0" mtype="seg">Medium</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Medium</mrk></target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/medium/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlMe</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/medium/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlMe</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/medium/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlMe</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en">Google Analytics</source>
<seg-source><mrk mid="0" mtype="seg">Google Analytics</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Google Analytics</mrk></target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[</bpt>plugins/googleanalytics/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGa</ept><it id="3" ctype="link" pos="close">]</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/googleanalytics/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGa</ept><it id="3" ctype="link" pos="close">]</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[</bpt>plugins/googleanalytics/README.md<ept id="1">]</ept><bpt id="2" ctype="link">[</bpt><ept id="2">PlGa</ept><it id="3" ctype="link" pos="close">]</it></mrk></target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en">Development</source>
<seg-source><mrk mid="0" mtype="seg">Development</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Development</mrk></target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en">Want to contribute? Great!</source>
<seg-source><mrk mid="0" mtype="seg">Want to contribute? Great!</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Want to contribute? Great!</mrk></target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en">Dillinger uses Gulp + Webpack for fast developing.
Make a change in your file and instantanously see your updates!</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger uses Gulp + Webpack for fast developing.</mrk>
<mrk mid="1" mtype="seg">Make a change in your file and instantanously see your updates!</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger uses Gulp + Webpack for fast developing.</mrk>
<mrk mid="1" mtype="seg">Make a change in your file and instantanously see your updates!</mrk></target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en">Open your favorite Terminal and run these commands.</source>
<seg-source><mrk mid="0" mtype="seg">Open your favorite Terminal and run these commands.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Open your favorite Terminal and run these commands.</mrk></target>
</trans-unit>
<trans-unit id="tu55" xml:space="preserve">
<source xml:lang="en">First Tab:</source>
<seg-source><mrk mid="0" mtype="seg">First Tab:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">First Tab:</mrk></target>
</trans-unit>
<trans-unit id="tu56" xml:space="preserve">
<source xml:lang="en">$ node app
</source>
<seg-source><mrk mid="0" mtype="seg">$ node app</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ node app</mrk>
</target>
</trans-unit>
<trans-unit id="tu57" xml:space="preserve">
<source xml:lang="en">Second Tab:</source>
<seg-source><mrk mid="0" mtype="seg">Second Tab:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Second Tab:</mrk></target>
</trans-unit>
<trans-unit id="tu58" xml:space="preserve">
<source xml:lang="en">$ gulp watch
</source>
<seg-source><mrk mid="0" mtype="seg">$ gulp watch</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ gulp watch</mrk>
</target>
</trans-unit>
<trans-unit id="tu59" xml:space="preserve">
<source xml:lang="en">(optional) Third:</source>
<seg-source><mrk mid="0" mtype="seg">(optional) Third:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">(optional) Third:</mrk></target>
</trans-unit>
<trans-unit id="tu60" xml:space="preserve">
<source xml:lang="en">$ karma test
</source>
<seg-source><mrk mid="0" mtype="seg">$ karma test</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ karma test</mrk>
</target>
</trans-unit>
<trans-unit id="tu61" xml:space="preserve">
<source xml:lang="en">Building for source</source>
<seg-source><mrk mid="0" mtype="seg">Building for source</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Building for source</mrk></target>
</trans-unit>
<trans-unit id="tu62" xml:space="preserve">
<source xml:lang="en">For production release:</source>
<seg-source><mrk mid="0" mtype="seg">For production release:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For production release:</mrk></target>
</trans-unit>
<trans-unit id="tu63" xml:space="preserve">
<source xml:lang="en">$ gulp build --prod
</source>
<seg-source><mrk mid="0" mtype="seg">$ gulp build --prod</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ gulp build --prod</mrk>
</target>
</trans-unit>
<trans-unit id="tu64" xml:space="preserve">
<source xml:lang="en">Generating pre-built zip archives for distribution:</source>
<seg-source><mrk mid="0" mtype="seg">Generating pre-built zip archives for distribution:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Generating pre-built zip archives for distribution:</mrk></target>
</trans-unit>
<trans-unit id="tu65" xml:space="preserve">
<source xml:lang="en">$ gulp build dist --prod
</source>
<seg-source><mrk mid="0" mtype="seg">$ gulp build dist --prod</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$ gulp build dist --prod</mrk>
</target>
</trans-unit>
<trans-unit id="tu66" xml:space="preserve">
<source xml:lang="en">Docker</source>
<seg-source><mrk mid="0" mtype="seg">Docker</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Docker</mrk></target>
</trans-unit>
<trans-unit id="tu67" xml:space="preserve">
<source xml:lang="en">Dillinger is very easy to install and deploy in a Docker container.</source>
<seg-source><mrk mid="0" mtype="seg">Dillinger is very easy to install and deploy in a Docker container.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dillinger is very easy to install and deploy in a Docker container.</mrk></target>
</trans-unit>
<trans-unit id="tu68" xml:space="preserve">
<source xml:lang="en">By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.</source>
<seg-source><mrk mid="0" mtype="seg">By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary.</mrk><mrk mid="1" mtype="seg"> When ready, simply use the Dockerfile to build the image.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary.</mrk><mrk mid="1" mtype="seg"> When ready, simply use the Dockerfile to build the image.</mrk></target>
</trans-unit>
<trans-unit id="tu69" xml:space="preserve">
<source xml:lang="en">cd dillinger
docker build -t joemccann/dillinger:${package.json.version}
</source>
<seg-source><mrk mid="0" mtype="seg">cd dillinger</mrk>
<mrk mid="1" mtype="seg">docker build -t joemccann/dillinger:${package.json.version}</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">cd dillinger</mrk>
<mrk mid="1" mtype="seg">docker build -t joemccann/dillinger:${package.json.version}</mrk>
</target>
</trans-unit>
<trans-unit id="tu70" xml:space="preserve">
<source xml:lang="en">This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out <bpt id="1" ctype="x-CODE">`</bpt>${package.json.version}<ept id="1">`</ept> with the actual version of Dillinger.</source>
<seg-source><mrk mid="0" mtype="seg">This will create the dillinger image and pull in the necessary dependencies.</mrk><mrk mid="1" mtype="seg"> Be sure to swap out <bpt id="1" ctype="x-CODE">`</bpt>${package.json.version}<ept id="1">`</ept> with the actual version of Dillinger.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This will create the dillinger image and pull in the necessary dependencies.</mrk><mrk mid="1" mtype="seg"> Be sure to swap out <bpt id="1" ctype="x-CODE">`</bpt>${package.json.version}<ept id="1">`</ept> with the actual version of Dillinger.</mrk></target>
</trans-unit>
<trans-unit id="tu71" xml:space="preserve">
<source xml:lang="en">Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</source>
<seg-source><mrk mid="0" mtype="seg">Once done, run the Docker image and map the port to whatever you wish on your host.</mrk><mrk mid="1" mtype="seg"> In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Once done, run the Docker image and map the port to whatever you wish on your host.</mrk><mrk mid="1" mtype="seg"> In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</mrk></target>
</trans-unit>
<trans-unit id="tu72" xml:space="preserve">
<source xml:lang="en">docker run -d -p 8000:8080 --restart="always" &lt;youruser&gt;/dillinger:${package.json.version}
</source>
<seg-source><mrk mid="0" mtype="seg">docker run -d -p 8000:8080 --restart="always" &lt;youruser&gt;/dillinger:${package.json.version}</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">docker run -d -p 8000:8080 --restart="always" &lt;youruser&gt;/dillinger:${package.json.version}</mrk>
</target>
</trans-unit>
<trans-unit id="tu73" xml:space="preserve">
<source xml:lang="en">Verify the deployment by navigating to your server address in your preferred browser.</source>
<seg-source><mrk mid="0" mtype="seg">Verify the deployment by navigating to your server address in your preferred browser.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Verify the deployment by navigating to your server address in your preferred browser.</mrk></target>
</trans-unit>
<trans-unit id="tu74" xml:space="preserve">
<source xml:lang="en">127.0.0.1:8000
</source>
<seg-source><mrk mid="0" mtype="seg">127.0.0.1:8000</mrk>
</seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">127.0.0.1:8000</mrk>
</target>
</trans-unit>
<trans-unit id="tu75" xml:space="preserve">
<source xml:lang="en">Kubernetes + Google Cloud</source>
<seg-source><mrk mid="0" mtype="seg">Kubernetes + Google Cloud</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Kubernetes + Google Cloud</mrk></target>
</trans-unit>
<trans-unit id="tu76" xml:space="preserve">
<source xml:lang="en">See <bpt id="1" ctype="link">[</bpt>KUBERNETES.md<ept id="1">](https://github.com/joemccann/dillinger/blob/master/KUBERNETES.md)</ept></source>
<seg-source><mrk mid="0" mtype="seg">See <bpt id="1" ctype="link">[</bpt>KUBERNETES.md<ept id="1">](https://github.com/joemccann/dillinger/blob/master/KUBERNETES.md)</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See <bpt id="1" ctype="link">[</bpt>KUBERNETES.md<ept id="1">](https://github.com/joemccann/dillinger/blob/master/KUBERNETES.md)</ept></mrk></target>
</trans-unit>
<trans-unit id="tu77" xml:space="preserve">
<source xml:lang="en">Todos</source>
<seg-source><mrk mid="0" mtype="seg">Todos</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Todos</mrk></target>
</trans-unit>
<trans-unit id="tu78" xml:space="preserve">
<source xml:lang="en">Write MORE Tests</source>
<seg-source><mrk mid="0" mtype="seg">Write MORE Tests</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write MORE Tests</mrk></target>
</trans-unit>
<trans-unit id="tu79" xml:space="preserve">
<source xml:lang="en">Add Night Mode</source>
<seg-source><mrk mid="0" mtype="seg">Add Night Mode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Add Night Mode</mrk></target>
</trans-unit>
<trans-unit id="tu80" xml:space="preserve">
<source xml:lang="en">License</source>
<seg-source><mrk mid="0" mtype="seg">License</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">License</mrk></target>
</trans-unit>
<trans-unit id="tu81" xml:space="preserve">
<source xml:lang="en">MIT</source>
<seg-source><mrk mid="0" mtype="seg">MIT</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MIT</mrk></target>
</trans-unit>
<trans-unit id="tu82" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="bold">**</bpt>Free Software, Hell Yeah!<ept id="1">**</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="bold">**</bpt>Free Software, Hell Yeah!<ept id="1">**</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="bold">**</bpt>Free Software, Hell Yeah!<ept id="1">**</ept></mrk></target>
</trans-unit>
<trans-unit id="tu83" xml:space="preserve">
<source xml:lang="en">markdown-it</source>
<seg-source><mrk mid="0" mtype="seg">markdown-it</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">markdown-it</mrk></target>
</trans-unit>
<trans-unit id="tu84" xml:space="preserve">
<source xml:lang="en">Ace Editor</source>
<seg-source><mrk mid="0" mtype="seg">Ace Editor</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ace Editor</mrk></target>
</trans-unit>
<trans-unit id="tu85" xml:space="preserve">
<source xml:lang="en">node.js</source>
<seg-source><mrk mid="0" mtype="seg">node.js</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">node.js</mrk></target>
</trans-unit>
<trans-unit id="tu86" xml:space="preserve">
<source xml:lang="en">Twitter Bootstrap</source>
<seg-source><mrk mid="0" mtype="seg">Twitter Bootstrap</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Twitter Bootstrap</mrk></target>
</trans-unit>
<trans-unit id="tu87" xml:space="preserve">
<source xml:lang="en">jQuery</source>
<seg-source><mrk mid="0" mtype="seg">jQuery</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">jQuery</mrk></target>
</trans-unit>
<trans-unit id="tu88" xml:space="preserve">
<source xml:lang="en">@tjholowaychuk</source>
<seg-source><mrk mid="0" mtype="seg">@tjholowaychuk</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@tjholowaychuk</mrk></target>
</trans-unit>
<trans-unit id="tu89" xml:space="preserve">
<source xml:lang="en">AngularJS</source>
<seg-source><mrk mid="0" mtype="seg">AngularJS</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">AngularJS</mrk></target>
</trans-unit>
<trans-unit id="tu90" xml:space="preserve">
<source xml:lang="en">Gulp</source>
<seg-source><mrk mid="0" mtype="seg">Gulp</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Gulp</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
