<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="Markdown Documentation - Syntax.md.tkitMerged" source-language="en" target-language="fr" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Markdown: Syntax</source>
<seg-source><mrk mid="0" mtype="seg">Markdown: Syntax</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown: Syntax</mrk></target>
</trans-unit>
<group id="sd1_ssf1" resname="sub-filter:sd1">
<trans-unit id="sd1_sf1_tu2" resname="sd1_2" restype="x-title" xml:space="preserve">
<source xml:lang="en">Markdown Project Page</source>
<seg-source><mrk mid="0" mtype="seg">Markdown Project Page</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown Project Page</mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu1" resname="sd1_4" restype="x-li" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[#$sd1_sf1_dp2]</bpt>Main<ept id="1">&lt;/a&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp2]</bpt>Main<ept id="1">&lt;/a&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp2]</bpt>Main<ept id="1">&lt;/a&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu4" resname="sd1_7" restype="x-title" xml:space="preserve">
<source xml:lang="en">Markdown Basics</source>
<seg-source><mrk mid="0" mtype="seg">Markdown Basics</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown Basics</mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu3" resname="sd1_9" restype="x-li" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[#$sd1_sf1_dp5]</bpt>Basics<ept id="1">&lt;/a&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp5]</bpt>Basics<ept id="1">&lt;/a&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp5]</bpt>Basics<ept id="1">&lt;/a&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu6" resname="sd1_12" restype="x-title" xml:space="preserve">
<source xml:lang="en">Markdown Syntax Documentation</source>
<seg-source><mrk mid="0" mtype="seg">Markdown Syntax Documentation</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown Syntax Documentation</mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu5" resname="sd1_13" restype="x-li" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">&lt;a class="selected" [#$sd1_sf1_tu6]&gt;</bpt>Syntax<ept id="1">&lt;/a&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">&lt;a class="selected" [#$sd1_sf1_tu6]&gt;</bpt>Syntax<ept id="1">&lt;/a&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">&lt;a class="selected" [#$sd1_sf1_tu6]&gt;</bpt>Syntax<ept id="1">&lt;/a&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu8" resname="sd1_16" restype="x-title" xml:space="preserve">
<source xml:lang="en">Pricing and License Information</source>
<seg-source><mrk mid="0" mtype="seg">Pricing and License Information</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pricing and License Information</mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu7" resname="sd1_18" restype="x-li" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[#$sd1_sf1_dp10]</bpt>License<ept id="1">&lt;/a&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp10]</bpt>License<ept id="1">&lt;/a&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp10]</bpt>License<ept id="1">&lt;/a&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu10" resname="sd1_21" restype="x-title" xml:space="preserve">
<source xml:lang="en">Online Markdown Web Form</source>
<seg-source><mrk mid="0" mtype="seg">Online Markdown Web Form</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Online Markdown Web Form</mrk></target>
</trans-unit>
<trans-unit id="sd1_sf1_tu9" resname="sd1_23" restype="x-li" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="link">[#$sd1_sf1_dp13]</bpt>Dingus<ept id="1">&lt;/a&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp13]</bpt>Dingus<ept id="1">&lt;/a&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="link">[#$sd1_sf1_dp13]</bpt>Dingus<ept id="1">&lt;/a&gt;</ept></mrk></target>
</trans-unit>
</group>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Overview<ph id="2" ctype="x-LINK">](#overview)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Overview<ph id="2" ctype="x-LINK">](#overview)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Overview<ph id="2" ctype="x-LINK">](#overview)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Philosophy<ph id="2" ctype="x-LINK">](#philosophy)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Philosophy<ph id="2" ctype="x-LINK">](#philosophy)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Philosophy<ph id="2" ctype="x-LINK">](#philosophy)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Inline HTML<ph id="2" ctype="x-LINK">](#html)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Inline HTML<ph id="2" ctype="x-LINK">](#html)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Inline HTML<ph id="2" ctype="x-LINK">](#html)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Automatic Escaping for Special Characters<ph id="2" ctype="x-LINK">](#autoescape)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Automatic Escaping for Special Characters<ph id="2" ctype="x-LINK">](#autoescape)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Automatic Escaping for Special Characters<ph id="2" ctype="x-LINK">](#autoescape)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Block Elements<ph id="2" ctype="x-LINK">](#block)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Block Elements<ph id="2" ctype="x-LINK">](#block)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Block Elements<ph id="2" ctype="x-LINK">](#block)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Paragraphs and Line Breaks<ph id="2" ctype="x-LINK">](#p)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Paragraphs and Line Breaks<ph id="2" ctype="x-LINK">](#p)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Paragraphs and Line Breaks<ph id="2" ctype="x-LINK">](#p)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Headers<ph id="2" ctype="x-LINK">](#header)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Headers<ph id="2" ctype="x-LINK">](#header)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Headers<ph id="2" ctype="x-LINK">](#header)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Blockquotes<ph id="2" ctype="x-LINK">](#blockquote)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Blockquotes<ph id="2" ctype="x-LINK">](#blockquote)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Blockquotes<ph id="2" ctype="x-LINK">](#blockquote)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Lists<ph id="2" ctype="x-LINK">](#list)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Lists<ph id="2" ctype="x-LINK">](#list)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Lists<ph id="2" ctype="x-LINK">](#list)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Code Blocks<ph id="2" ctype="x-LINK">](#precode)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Code Blocks<ph id="2" ctype="x-LINK">](#precode)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Code Blocks<ph id="2" ctype="x-LINK">](#precode)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Horizontal Rules<ph id="2" ctype="x-LINK">](#hr)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Horizontal Rules<ph id="2" ctype="x-LINK">](#hr)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Horizontal Rules<ph id="2" ctype="x-LINK">](#hr)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Span Elements<ph id="2" ctype="x-LINK">](#span)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Span Elements<ph id="2" ctype="x-LINK">](#span)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Span Elements<ph id="2" ctype="x-LINK">](#span)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Links<ph id="2" ctype="x-LINK">](#link)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Links<ph id="2" ctype="x-LINK">](#link)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Links<ph id="2" ctype="x-LINK">](#link)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Emphasis<ph id="2" ctype="x-LINK">](#em)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Emphasis<ph id="2" ctype="x-LINK">](#em)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Emphasis<ph id="2" ctype="x-LINK">](#em)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Code<ph id="2" ctype="x-LINK">](#code)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Code<ph id="2" ctype="x-LINK">](#code)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Code<ph id="2" ctype="x-LINK">](#code)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Images<ph id="2" ctype="x-LINK">](#img)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Images<ph id="2" ctype="x-LINK">](#img)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Images<ph id="2" ctype="x-LINK">](#img)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Miscellaneous<ph id="2" ctype="x-LINK">](#misc)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Miscellaneous<ph id="2" ctype="x-LINK">](#misc)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Miscellaneous<ph id="2" ctype="x-LINK">](#misc)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Backslash Escapes<ph id="2" ctype="x-LINK">](#backslash)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Backslash Escapes<ph id="2" ctype="x-LINK">](#backslash)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Backslash Escapes<ph id="2" ctype="x-LINK">](#backslash)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-LINK">[</ph>Automatic Links<ph id="2" ctype="x-LINK">](#autolink)</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Automatic Links<ph id="2" ctype="x-LINK">](#autolink)</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-LINK">[</ph>Automatic Links<ph id="2" ctype="x-LINK">](#autolink)</ph></mrk></target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-STRONG_EMPHASIS">**</ph>Note:<ph id="2" ctype="x-STRONG_EMPHASIS">**</ph> This document is itself written using Markdown; you
can <ph id="3" ctype="x-LINK_REF">[</ph>see the source for it by adding '.text' to the URL<ph id="4" ctype="x-LINK_REF">]</ph><ph id="5" ctype="x-LINK_REF">[</ph><ph id="6" ctype="x-LINK_REF">src</ph><ph id="7" ctype="x-LINK_REF">]</ph>.</source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-STRONG_EMPHASIS">**</ph>Note:<ph id="2" ctype="x-STRONG_EMPHASIS">**</ph> This document is itself written using Markdown; you</mrk>
<mrk mid="1" mtype="seg">can <ph id="3" ctype="x-LINK_REF">[</ph>see the source for it by adding '.text' to the URL<ph id="4" ctype="x-LINK_REF">]</ph><ph id="5" ctype="x-LINK_REF">[</ph><ph id="6" ctype="x-LINK_REF">src</ph><ph id="7" ctype="x-LINK_REF">]</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-STRONG_EMPHASIS">**</ph>Note:<ph id="2" ctype="x-STRONG_EMPHASIS">**</ph> This document is itself written using Markdown; you</mrk>
<mrk mid="1" mtype="seg">can <ph id="3" ctype="x-LINK_REF">[</ph>see the source for it by adding '.text' to the URL<ph id="4" ctype="x-LINK_REF">]</ph><ph id="5" ctype="x-LINK_REF">[</ph><ph id="6" ctype="x-LINK_REF">src</ph><ph id="7" ctype="x-LINK_REF">]</ph>.</mrk></target>
</trans-unit>
<group id="sd1_ssf2" resname="sub-filter:sd1">
<trans-unit id="sd1_sf2_tu1" resname="overview-id" restype="x-h2" xml:space="preserve">
<source xml:lang="en">Overview</source>
<seg-source><mrk mid="0" mtype="seg">Overview</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Overview</mrk></target>
</trans-unit>
</group>
<group id="sd1_ssf3" resname="sub-filter:sd1">
<trans-unit id="sd1_sf3_tu1" resname="philosophy-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Philosophy</source>
<seg-source><mrk mid="0" mtype="seg">Philosophy</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Philosophy</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en">Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</mrk></target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en">Readability, however, is emphasized above all else. A Markdown-formatted
document should be publishable as-is, as plain text, without looking
like it's been marked up with tags or formatting instructions. While
Markdown's syntax has been influenced by several existing text-to-HTML
filters -- including <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph>, <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>, <ph id="9" ctype="x-LINK_REF">[</ph>Textile<ph id="10" ctype="x-LINK_REF">]</ph> <ph id="11" ctype="x-LINK_REF">[</ph>3<ph id="12" ctype="x-LINK_REF">]</ph>, <ph id="13" ctype="x-LINK_REF">[</ph>reStructuredText<ph id="14" ctype="x-LINK_REF">]</ph> <ph id="15" ctype="x-LINK_REF">[</ph>4<ph id="16" ctype="x-LINK_REF">]</ph>,
<ph id="17" ctype="x-LINK_REF">[</ph>Grutatext<ph id="18" ctype="x-LINK_REF">]</ph> <ph id="19" ctype="x-LINK_REF">[</ph>5<ph id="20" ctype="x-LINK_REF">]</ph>, and <ph id="21" ctype="x-LINK_REF">[</ph>EtText<ph id="22" ctype="x-LINK_REF">]</ph> <ph id="23" ctype="x-LINK_REF">[</ph>6<ph id="24" ctype="x-LINK_REF">]</ph> -- the single biggest source of
inspiration for Markdown's syntax is the format of plain text email.</source>
<seg-source><mrk mid="0" mtype="seg">Readability, however, is emphasized above all else.</mrk><mrk mid="1" mtype="seg"> A Markdown-formatted</mrk>
<mrk mid="2" mtype="seg">document should be publishable as-is, as plain text, without looking</mrk>
<mrk mid="3" mtype="seg">like it's been marked up with tags or formatting instructions.</mrk><mrk mid="4" mtype="seg"> While</mrk>
<mrk mid="5" mtype="seg">Markdown's syntax has been influenced by several existing text-to-HTML</mrk>
<mrk mid="6" mtype="seg">filters -- including <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph>, <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>, <ph id="9" ctype="x-LINK_REF">[</ph>Textile<ph id="10" ctype="x-LINK_REF">]</ph> <ph id="11" ctype="x-LINK_REF">[</ph>3<ph id="12" ctype="x-LINK_REF">]</ph>, <ph id="13" ctype="x-LINK_REF">[</ph>reStructuredText<ph id="14" ctype="x-LINK_REF">]</ph> <ph id="15" ctype="x-LINK_REF">[</ph>4<ph id="16" ctype="x-LINK_REF">]</ph>,</mrk>
<mrk mid="7" mtype="seg"><ph id="17" ctype="x-LINK_REF">[</ph>Grutatext<ph id="18" ctype="x-LINK_REF">]</ph> <ph id="19" ctype="x-LINK_REF">[</ph>5<ph id="20" ctype="x-LINK_REF">]</ph>, and <ph id="21" ctype="x-LINK_REF">[</ph>EtText<ph id="22" ctype="x-LINK_REF">]</ph> <ph id="23" ctype="x-LINK_REF">[</ph>6<ph id="24" ctype="x-LINK_REF">]</ph> -- the single biggest source of</mrk>
<mrk mid="8" mtype="seg">inspiration for Markdown's syntax is the format of plain text email.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Readability, however, is emphasized above all else.</mrk><mrk mid="1" mtype="seg"> A Markdown-formatted</mrk>
<mrk mid="2" mtype="seg">document should be publishable as-is, as plain text, without looking</mrk>
<mrk mid="3" mtype="seg">like it's been marked up with tags or formatting instructions.</mrk><mrk mid="4" mtype="seg"> While</mrk>
<mrk mid="5" mtype="seg">Markdown's syntax has been influenced by several existing text-to-HTML</mrk>
<mrk mid="6" mtype="seg">filters -- including <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph>, <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>, <ph id="9" ctype="x-LINK_REF">[</ph>Textile<ph id="10" ctype="x-LINK_REF">]</ph> <ph id="11" ctype="x-LINK_REF">[</ph>3<ph id="12" ctype="x-LINK_REF">]</ph>, <ph id="13" ctype="x-LINK_REF">[</ph>reStructuredText<ph id="14" ctype="x-LINK_REF">]</ph> <ph id="15" ctype="x-LINK_REF">[</ph>4<ph id="16" ctype="x-LINK_REF">]</ph>,</mrk>
<mrk mid="7" mtype="seg"><ph id="17" ctype="x-LINK_REF">[</ph>Grutatext<ph id="18" ctype="x-LINK_REF">]</ph> <ph id="19" ctype="x-LINK_REF">[</ph>5<ph id="20" ctype="x-LINK_REF">]</ph>, and <ph id="21" ctype="x-LINK_REF">[</ph>EtText<ph id="22" ctype="x-LINK_REF">]</ph> <ph id="23" ctype="x-LINK_REF">[</ph>6<ph id="24" ctype="x-LINK_REF">]</ph> -- the single biggest source of</mrk>
<mrk mid="8" mtype="seg">inspiration for Markdown's syntax is the format of plain text email.</mrk></target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en">1</source>
<seg-source><mrk mid="0" mtype="seg">1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1</mrk></target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en">2</source>
<seg-source><mrk mid="0" mtype="seg">2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2</mrk></target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en">3</source>
<seg-source><mrk mid="0" mtype="seg">3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">3</mrk></target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en">4</source>
<seg-source><mrk mid="0" mtype="seg">4</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">4</mrk></target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en">5</source>
<seg-source><mrk mid="0" mtype="seg">5</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">5</mrk></target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en">6</source>
<seg-source><mrk mid="0" mtype="seg">6</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">6</mrk></target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en">To this end, Markdown's syntax is comprised entirely of punctuation
characters, which punctuation characters have been carefully chosen so
as to look like what they mean. E.g., asterisks around a word actually
look like \*emphasis\*. Markdown lists look like, well, lists. Even
blockquotes look like quoted passages of text, assuming you've ever
used email.</source>
<seg-source><mrk mid="0" mtype="seg">To this end, Markdown's syntax is comprised entirely of punctuation</mrk>
<mrk mid="1" mtype="seg">characters, which punctuation characters have been carefully chosen so</mrk>
<mrk mid="2" mtype="seg">as to look like what they mean.</mrk><mrk mid="3" mtype="seg"> E.g., asterisks around a word actually</mrk>
<mrk mid="4" mtype="seg">look like \*emphasis\*.</mrk><mrk mid="5" mtype="seg"> Markdown lists look like, well, lists.</mrk><mrk mid="6" mtype="seg"> Even</mrk>
<mrk mid="7" mtype="seg">blockquotes look like quoted passages of text, assuming you've ever</mrk>
<mrk mid="8" mtype="seg">used email.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To this end, Markdown's syntax is comprised entirely of punctuation</mrk>
<mrk mid="1" mtype="seg">characters, which punctuation characters have been carefully chosen so</mrk>
<mrk mid="2" mtype="seg">as to look like what they mean.</mrk><mrk mid="3" mtype="seg"> E.g., asterisks around a word actually</mrk>
<mrk mid="4" mtype="seg">look like \*emphasis\*.</mrk><mrk mid="5" mtype="seg"> Markdown lists look like, well, lists.</mrk><mrk mid="6" mtype="seg"> Even</mrk>
<mrk mid="7" mtype="seg">blockquotes look like quoted passages of text, assuming you've ever</mrk>
<mrk mid="8" mtype="seg">used email.</mrk></target>
</trans-unit>
<group id="sd1_ssf4" resname="sub-filter:sd1">
<trans-unit id="sd1_sf4_tu1" resname="html-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Inline HTML</source>
<seg-source><mrk mid="0" mtype="seg">Inline HTML</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Inline HTML</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en">Markdown's syntax is intended for one purpose: to be used as a
format for <ph id="1" ctype="x-EMPHASIS">*</ph>writing<ph id="2" ctype="x-EMPHASIS">*</ph> for the web.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown's syntax is intended for one purpose: to be used as a</mrk>
<mrk mid="1" mtype="seg">format for <ph id="1" ctype="x-EMPHASIS">*</ph>writing<ph id="2" ctype="x-EMPHASIS">*</ph> for the web.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown's syntax is intended for one purpose: to be used as a</mrk>
<mrk mid="1" mtype="seg">format for <ph id="1" ctype="x-EMPHASIS">*</ph>writing<ph id="2" ctype="x-EMPHASIS">*</ph> for the web.</mrk></target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">Markdown is not a replacement for HTML, or even close to it. Its
syntax is very small, corresponding only to a very small subset of
HTML tags. The idea is <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> to create a syntax that makes it easier
to insert HTML tags. In my opinion, HTML tags are already easy to
insert. The idea for Markdown is to make it easy to read, write, and
edit prose. HTML is a <ph id="3" ctype="x-EMPHASIS">*</ph>publishing<ph id="4" ctype="x-EMPHASIS">*</ph> format; Markdown is a <ph id="5" ctype="x-EMPHASIS">*</ph>writing<ph id="6" ctype="x-EMPHASIS">*</ph>
format. Thus, Markdown's formatting syntax only addresses issues that
can be conveyed in plain text.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown is not a replacement for HTML, or even close to it.</mrk><mrk mid="1" mtype="seg"> Its</mrk>
<mrk mid="2" mtype="seg">syntax is very small, corresponding only to a very small subset of</mrk>
<mrk mid="3" mtype="seg">HTML tags.</mrk><mrk mid="4" mtype="seg"> The idea is <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> to create a syntax that makes it easier</mrk>
<mrk mid="5" mtype="seg">to insert HTML tags.</mrk><mrk mid="6" mtype="seg"> In my opinion, HTML tags are already easy to</mrk>
<mrk mid="7" mtype="seg">insert.</mrk><mrk mid="8" mtype="seg"> The idea for Markdown is to make it easy to read, write, and</mrk>
<mrk mid="9" mtype="seg">edit prose.</mrk><mrk mid="10" mtype="seg"> HTML is a <ph id="3" ctype="x-EMPHASIS">*</ph>publishing<ph id="4" ctype="x-EMPHASIS">*</ph> format; Markdown is a <ph id="5" ctype="x-EMPHASIS">*</ph>writing<ph id="6" ctype="x-EMPHASIS">*</ph></mrk>
<mrk mid="11" mtype="seg">format.</mrk><mrk mid="12" mtype="seg"> Thus, Markdown's formatting syntax only addresses issues that</mrk>
<mrk mid="13" mtype="seg">can be conveyed in plain text.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown is not a replacement for HTML, or even close to it.</mrk><mrk mid="1" mtype="seg"> Its</mrk>
<mrk mid="2" mtype="seg">syntax is very small, corresponding only to a very small subset of</mrk>
<mrk mid="3" mtype="seg">HTML tags.</mrk><mrk mid="4" mtype="seg"> The idea is <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> to create a syntax that makes it easier</mrk>
<mrk mid="5" mtype="seg">to insert HTML tags.</mrk><mrk mid="6" mtype="seg"> In my opinion, HTML tags are already easy to</mrk>
<mrk mid="7" mtype="seg">insert.</mrk><mrk mid="8" mtype="seg"> The idea for Markdown is to make it easy to read, write, and</mrk>
<mrk mid="9" mtype="seg">edit prose.</mrk><mrk mid="10" mtype="seg"> HTML is a <ph id="3" ctype="x-EMPHASIS">*</ph>publishing<ph id="4" ctype="x-EMPHASIS">*</ph> format; Markdown is a <ph id="5" ctype="x-EMPHASIS">*</ph>writing<ph id="6" ctype="x-EMPHASIS">*</ph></mrk>
<mrk mid="11" mtype="seg">format.</mrk><mrk mid="12" mtype="seg"> Thus, Markdown's formatting syntax only addresses issues that</mrk>
<mrk mid="13" mtype="seg">can be conveyed in plain text.</mrk></target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en">For any markup that is not covered by Markdown's syntax, you simply
use HTML itself. There's no need to preface it or delimit it to
indicate that you're switching from Markdown to HTML; you just use
the tags.</source>
<seg-source><mrk mid="0" mtype="seg">For any markup that is not covered by Markdown's syntax, you simply</mrk>
<mrk mid="1" mtype="seg">use HTML itself.</mrk><mrk mid="2" mtype="seg"> There's no need to preface it or delimit it to</mrk>
<mrk mid="3" mtype="seg">indicate that you're switching from Markdown to HTML; you just use</mrk>
<mrk mid="4" mtype="seg">the tags.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For any markup that is not covered by Markdown's syntax, you simply</mrk>
<mrk mid="1" mtype="seg">use HTML itself.</mrk><mrk mid="2" mtype="seg"> There's no need to preface it or delimit it to</mrk>
<mrk mid="3" mtype="seg">indicate that you're switching from Markdown to HTML; you just use</mrk>
<mrk mid="4" mtype="seg">the tags.</mrk></target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">The only restrictions are that block-level HTML elements -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;div&gt;<ph id="2" ctype="x-CODE">`</ph>,
<ph id="3" ctype="x-CODE">`</ph>&lt;table&gt;<ph id="4" ctype="x-CODE">`</ph>, <ph id="5" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="6" ctype="x-CODE">`</ph>, <ph id="7" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="8" ctype="x-CODE">`</ph>, etc. -- must be separated from surrounding
content by blank lines, and the start and end tags of the block should
not be indented with tabs or spaces. Markdown is smart enough not
to add extra (unwanted) <ph id="9" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="10" ctype="x-CODE">`</ph> tags around HTML block-level tags.</source>
<seg-source><mrk mid="0" mtype="seg">The only restrictions are that block-level HTML elements -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;div&gt;<ph id="2" ctype="x-CODE">`</ph>,</mrk>
<mrk mid="1" mtype="seg"><ph id="3" ctype="x-CODE">`</ph>&lt;table&gt;<ph id="4" ctype="x-CODE">`</ph>, <ph id="5" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="6" ctype="x-CODE">`</ph>, <ph id="7" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="8" ctype="x-CODE">`</ph>, etc.</mrk><mrk mid="2" mtype="seg"> -- must be separated from surrounding</mrk>
<mrk mid="3" mtype="seg">content by blank lines, and the start and end tags of the block should</mrk>
<mrk mid="4" mtype="seg">not be indented with tabs or spaces.</mrk><mrk mid="5" mtype="seg"> Markdown is smart enough not</mrk>
<mrk mid="6" mtype="seg">to add extra (unwanted) <ph id="9" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="10" ctype="x-CODE">`</ph> tags around HTML block-level tags.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The only restrictions are that block-level HTML elements -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;div&gt;<ph id="2" ctype="x-CODE">`</ph>,</mrk>
<mrk mid="1" mtype="seg"><ph id="3" ctype="x-CODE">`</ph>&lt;table&gt;<ph id="4" ctype="x-CODE">`</ph>, <ph id="5" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="6" ctype="x-CODE">`</ph>, <ph id="7" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="8" ctype="x-CODE">`</ph>, etc.</mrk><mrk mid="2" mtype="seg"> -- must be separated from surrounding</mrk>
<mrk mid="3" mtype="seg">content by blank lines, and the start and end tags of the block should</mrk>
<mrk mid="4" mtype="seg">not be indented with tabs or spaces.</mrk><mrk mid="5" mtype="seg"> Markdown is smart enough not</mrk>
<mrk mid="6" mtype="seg">to add extra (unwanted) <ph id="9" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="10" ctype="x-CODE">`</ph> tags around HTML block-level tags.</mrk></target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">For example, to add an HTML table to a Markdown article:</source>
<seg-source><mrk mid="0" mtype="seg">For example, to add an HTML table to a Markdown article:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For example, to add an HTML table to a Markdown article:</mrk></target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a regular paragraph.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;table&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;tr&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;td&gt;Foo&lt;/td&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/tr&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/table&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is another regular paragraph.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a regular paragraph.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;table&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;tr&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;td&gt;Foo&lt;/td&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/tr&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/table&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is another regular paragraph.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a regular paragraph.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;table&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;tr&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;td&gt;Foo&lt;/td&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/tr&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/table&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is another regular paragraph.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en">Note that Markdown formatting syntax is not processed within block-level
HTML tags. E.g., you can't use Markdown-style <ph id="1" ctype="x-CODE">`</ph>*emphasis*<ph id="2" ctype="x-CODE">`</ph> inside an
HTML block.</source>
<seg-source><mrk mid="0" mtype="seg">Note that Markdown formatting syntax is not processed within block-level</mrk>
<mrk mid="1" mtype="seg">HTML tags.</mrk><mrk mid="2" mtype="seg"> E.g., you can't use Markdown-style <ph id="1" ctype="x-CODE">`</ph>*emphasis*<ph id="2" ctype="x-CODE">`</ph> inside an</mrk>
<mrk mid="3" mtype="seg">HTML block.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note that Markdown formatting syntax is not processed within block-level</mrk>
<mrk mid="1" mtype="seg">HTML tags.</mrk><mrk mid="2" mtype="seg"> E.g., you can't use Markdown-style <ph id="1" ctype="x-CODE">`</ph>*emphasis*<ph id="2" ctype="x-CODE">`</ph> inside an</mrk>
<mrk mid="3" mtype="seg">HTML block.</mrk></target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en">Span-level HTML tags -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;span&gt;<ph id="2" ctype="x-CODE">`</ph>, <ph id="3" ctype="x-CODE">`</ph>&lt;cite&gt;<ph id="4" ctype="x-CODE">`</ph>, or <ph id="5" ctype="x-CODE">`</ph>&lt;del&gt;<ph id="6" ctype="x-CODE">`</ph> -- can be
used anywhere in a Markdown paragraph, list item, or header. If you
want, you can even use HTML tags instead of Markdown formatting; e.g. if
you'd prefer to use HTML <ph id="7" ctype="x-CODE">`</ph>&lt;a&gt;<ph id="8" ctype="x-CODE">`</ph> or <ph id="9" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="10" ctype="x-CODE">`</ph> tags instead of Markdown's
link or image syntax, go right ahead.</source>
<seg-source><mrk mid="0" mtype="seg">Span-level HTML tags -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;span&gt;<ph id="2" ctype="x-CODE">`</ph>, <ph id="3" ctype="x-CODE">`</ph>&lt;cite&gt;<ph id="4" ctype="x-CODE">`</ph>, or <ph id="5" ctype="x-CODE">`</ph>&lt;del&gt;<ph id="6" ctype="x-CODE">`</ph> -- can be</mrk>
<mrk mid="1" mtype="seg">used anywhere in a Markdown paragraph, list item, or header.</mrk><mrk mid="2" mtype="seg"> If you</mrk>
<mrk mid="3" mtype="seg">want, you can even use HTML tags instead of Markdown formatting; e.g. if</mrk>
<mrk mid="4" mtype="seg">you'd prefer to use HTML <ph id="7" ctype="x-CODE">`</ph>&lt;a&gt;<ph id="8" ctype="x-CODE">`</ph> or <ph id="9" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="10" ctype="x-CODE">`</ph> tags instead of Markdown's</mrk>
<mrk mid="5" mtype="seg">link or image syntax, go right ahead.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Span-level HTML tags -- e.g. <ph id="1" ctype="x-CODE">`</ph>&lt;span&gt;<ph id="2" ctype="x-CODE">`</ph>, <ph id="3" ctype="x-CODE">`</ph>&lt;cite&gt;<ph id="4" ctype="x-CODE">`</ph>, or <ph id="5" ctype="x-CODE">`</ph>&lt;del&gt;<ph id="6" ctype="x-CODE">`</ph> -- can be</mrk>
<mrk mid="1" mtype="seg">used anywhere in a Markdown paragraph, list item, or header.</mrk><mrk mid="2" mtype="seg"> If you</mrk>
<mrk mid="3" mtype="seg">want, you can even use HTML tags instead of Markdown formatting; e.g. if</mrk>
<mrk mid="4" mtype="seg">you'd prefer to use HTML <ph id="7" ctype="x-CODE">`</ph>&lt;a&gt;<ph id="8" ctype="x-CODE">`</ph> or <ph id="9" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="10" ctype="x-CODE">`</ph> tags instead of Markdown's</mrk>
<mrk mid="5" mtype="seg">link or image syntax, go right ahead.</mrk></target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en">Unlike block-level HTML tags, Markdown syntax <ph id="1" ctype="x-EMPHASIS">*</ph>is<ph id="2" ctype="x-EMPHASIS">*</ph> processed within
span-level tags.</source>
<seg-source><mrk mid="0" mtype="seg">Unlike block-level HTML tags, Markdown syntax <ph id="1" ctype="x-EMPHASIS">*</ph>is<ph id="2" ctype="x-EMPHASIS">*</ph> processed within</mrk>
<mrk mid="1" mtype="seg">span-level tags.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unlike block-level HTML tags, Markdown syntax <ph id="1" ctype="x-EMPHASIS">*</ph>is<ph id="2" ctype="x-EMPHASIS">*</ph> processed within</mrk>
<mrk mid="1" mtype="seg">span-level tags.</mrk></target>
</trans-unit>
<group id="sd1_ssf5" resname="sub-filter:sd1">
<trans-unit id="sd1_sf5_tu1" resname="autoescape-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Automatic Escaping for Special Characters</source>
<seg-source><mrk mid="0" mtype="seg">Automatic Escaping for Special Characters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Automatic Escaping for Special Characters</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en">In HTML, there are two characters that demand special treatment: <ph id="1" ctype="x-CODE">`</ph>&lt;<ph id="2" ctype="x-CODE">`</ph>
and <ph id="3" ctype="x-CODE">`</ph>&amp;<ph id="4" ctype="x-CODE">`</ph>. Left angle brackets are used to start tags; ampersands are
used to denote HTML entities. If you want to use them as literal
characters, you must escape them as entities, e.g. <ph id="5" ctype="x-CODE">`</ph>&amp;lt;<ph id="6" ctype="x-CODE">`</ph>, and
<ph id="7" ctype="x-CODE">`</ph>&amp;amp;<ph id="8" ctype="x-CODE">`</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">In HTML, there are two characters that demand special treatment: <ph id="1" ctype="x-CODE">`</ph>&lt;<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">and <ph id="3" ctype="x-CODE">`</ph>&amp;<ph id="4" ctype="x-CODE">`</ph>.</mrk><mrk mid="2" mtype="seg"> Left angle brackets are used to start tags; ampersands are</mrk>
<mrk mid="3" mtype="seg">used to denote HTML entities.</mrk><mrk mid="4" mtype="seg"> If you want to use them as literal</mrk>
<mrk mid="5" mtype="seg">characters, you must escape them as entities, e.g. <ph id="5" ctype="x-CODE">`</ph>&amp;lt;<ph id="6" ctype="x-CODE">`</ph>, and</mrk>
<mrk mid="6" mtype="seg"><ph id="7" ctype="x-CODE">`</ph>&amp;amp;<ph id="8" ctype="x-CODE">`</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In HTML, there are two characters that demand special treatment: <ph id="1" ctype="x-CODE">`</ph>&lt;<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">and <ph id="3" ctype="x-CODE">`</ph>&amp;<ph id="4" ctype="x-CODE">`</ph>.</mrk><mrk mid="2" mtype="seg"> Left angle brackets are used to start tags; ampersands are</mrk>
<mrk mid="3" mtype="seg">used to denote HTML entities.</mrk><mrk mid="4" mtype="seg"> If you want to use them as literal</mrk>
<mrk mid="5" mtype="seg">characters, you must escape them as entities, e.g. <ph id="5" ctype="x-CODE">`</ph>&amp;lt;<ph id="6" ctype="x-CODE">`</ph>, and</mrk>
<mrk mid="6" mtype="seg"><ph id="7" ctype="x-CODE">`</ph>&amp;amp;<ph id="8" ctype="x-CODE">`</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en">Ampersands in particular are bedeviling for web writers. If you want to
write about 'AT&amp;T', you need to write '<ph id="1" ctype="x-CODE">`</ph>AT&amp;amp;T<ph id="2" ctype="x-CODE">`</ph>'. You even need to
escape ampersands within URLs. Thus, if you want to link to:</source>
<seg-source><mrk mid="0" mtype="seg">Ampersands in particular are bedeviling for web writers.</mrk><mrk mid="1" mtype="seg"> If you want to</mrk>
<mrk mid="2" mtype="seg">write about 'AT&amp;T', you need to write '<ph id="1" ctype="x-CODE">`</ph>AT&amp;amp;T<ph id="2" ctype="x-CODE">`</ph>'.</mrk><mrk mid="3" mtype="seg"> You even need to</mrk>
<mrk mid="4" mtype="seg">escape ampersands within URLs.</mrk><mrk mid="5" mtype="seg"> Thus, if you want to link to:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ampersands in particular are bedeviling for web writers.</mrk><mrk mid="1" mtype="seg"> If you want to</mrk>
<mrk mid="2" mtype="seg">write about 'AT&amp;T', you need to write '<ph id="1" ctype="x-CODE">`</ph>AT&amp;amp;T<ph id="2" ctype="x-CODE">`</ph>'.</mrk><mrk mid="3" mtype="seg"> You even need to</mrk>
<mrk mid="4" mtype="seg">escape ampersands within URLs.</mrk><mrk mid="5" mtype="seg"> Thus, if you want to link to:</mrk></target>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en">you need to encode the URL as:</source>
<seg-source><mrk mid="0" mtype="seg">you need to encode the URL as:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">you need to encode the URL as:</mrk></target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>http://images.google.com/images?num=30&amp;amp;q=larry+bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">in your anchor tag <ph id="1" ctype="x-CODE">`</ph>href<ph id="2" ctype="x-CODE">`</ph> attribute. Needless to say, this is easy to
forget, and is probably the single most common source of HTML validation
errors in otherwise well-marked-up web sites.</source>
<seg-source><mrk mid="0" mtype="seg">in your anchor tag <ph id="1" ctype="x-CODE">`</ph>href<ph id="2" ctype="x-CODE">`</ph> attribute.</mrk><mrk mid="1" mtype="seg"> Needless to say, this is easy to</mrk>
<mrk mid="2" mtype="seg">forget, and is probably the single most common source of HTML validation</mrk>
<mrk mid="3" mtype="seg">errors in otherwise well-marked-up web sites.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">in your anchor tag <ph id="1" ctype="x-CODE">`</ph>href<ph id="2" ctype="x-CODE">`</ph> attribute.</mrk><mrk mid="1" mtype="seg"> Needless to say, this is easy to</mrk>
<mrk mid="2" mtype="seg">forget, and is probably the single most common source of HTML validation</mrk>
<mrk mid="3" mtype="seg">errors in otherwise well-marked-up web sites.</mrk></target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en">Markdown allows you to use these characters naturally, taking care of
all the necessary escaping for you. If you use an ampersand as part of
an HTML entity, it remains unchanged; otherwise it will be translated
into <ph id="1" ctype="x-CODE">`</ph>&amp;amp;<ph id="2" ctype="x-CODE">`</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown allows you to use these characters naturally, taking care of</mrk>
<mrk mid="1" mtype="seg">all the necessary escaping for you.</mrk><mrk mid="2" mtype="seg"> If you use an ampersand as part of</mrk>
<mrk mid="3" mtype="seg">an HTML entity, it remains unchanged; otherwise it will be translated</mrk>
<mrk mid="4" mtype="seg">into <ph id="1" ctype="x-CODE">`</ph>&amp;amp;<ph id="2" ctype="x-CODE">`</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown allows you to use these characters naturally, taking care of</mrk>
<mrk mid="1" mtype="seg">all the necessary escaping for you.</mrk><mrk mid="2" mtype="seg"> If you use an ampersand as part of</mrk>
<mrk mid="3" mtype="seg">an HTML entity, it remains unchanged; otherwise it will be translated</mrk>
<mrk mid="4" mtype="seg">into <ph id="1" ctype="x-CODE">`</ph>&amp;amp;<ph id="2" ctype="x-CODE">`</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">So, if you want to include a copyright symbol in your article, you can write:</source>
<seg-source><mrk mid="0" mtype="seg">So, if you want to include a copyright symbol in your article, you can write:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">So, if you want to include a copyright symbol in your article, you can write:</mrk></target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en">and Markdown will leave it alone. But if you write:</source>
<seg-source><mrk mid="0" mtype="seg">and Markdown will leave it alone.</mrk><mrk mid="1" mtype="seg"> But if you write:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">and Markdown will leave it alone.</mrk><mrk mid="1" mtype="seg"> But if you write:</mrk></target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en">Markdown will translate it to:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown will translate it to:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown will translate it to:</mrk></target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>AT&amp;amp;T<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en">Similarly, because Markdown supports <ph id="1" ctype="x-LINK">[</ph>inline HTML<ph id="2" ctype="x-LINK">](#html)</ph>, if you use
angle brackets as delimiters for HTML tags, Markdown will treat them as
such. But if you write:</source>
<seg-source><mrk mid="0" mtype="seg">Similarly, because Markdown supports <ph id="1" ctype="x-LINK">[</ph>inline HTML<ph id="2" ctype="x-LINK">](#html)</ph>, if you use</mrk>
<mrk mid="1" mtype="seg">angle brackets as delimiters for HTML tags, Markdown will treat them as</mrk>
<mrk mid="2" mtype="seg">such.</mrk><mrk mid="3" mtype="seg"> But if you write:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Similarly, because Markdown supports <ph id="1" ctype="x-LINK">[</ph>inline HTML<ph id="2" ctype="x-LINK">](#html)</ph>, if you use</mrk>
<mrk mid="1" mtype="seg">angle brackets as delimiters for HTML tags, Markdown will treat them as</mrk>
<mrk mid="2" mtype="seg">such.</mrk><mrk mid="3" mtype="seg"> But if you write:</mrk></target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu55" xml:space="preserve">
<source xml:lang="en">Markdown will translate it to:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown will translate it to:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown will translate it to:</mrk></target>
</trans-unit>
<trans-unit id="tu56" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &amp;lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &amp;lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>4 &amp;lt; 5<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu57" xml:space="preserve">
<source xml:lang="en">However, inside Markdown code spans and blocks, angle brackets and
ampersands are <ph id="1" ctype="x-EMPHASIS">*</ph>always<ph id="2" ctype="x-EMPHASIS">*</ph> encoded automatically. This makes it easy to use
Markdown to write about HTML code. (As opposed to raw HTML, which is a
terrible format for writing about HTML syntax, because every single <ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph>
and <ph id="5" ctype="x-CODE">`</ph>&amp;<ph id="6" ctype="x-CODE">`</ph> in your example code needs to be escaped.)</source>
<seg-source><mrk mid="0" mtype="seg">However, inside Markdown code spans and blocks, angle brackets and</mrk>
<mrk mid="1" mtype="seg">ampersands are <ph id="1" ctype="x-EMPHASIS">*</ph>always<ph id="2" ctype="x-EMPHASIS">*</ph> encoded automatically.</mrk><mrk mid="2" mtype="seg"> This makes it easy to use</mrk>
<mrk mid="3" mtype="seg">Markdown to write about HTML code.</mrk><mrk mid="4" mtype="seg"> (As opposed to raw HTML, which is a</mrk>
<mrk mid="5" mtype="seg">terrible format for writing about HTML syntax, because every single <ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph></mrk>
<mrk mid="6" mtype="seg">and <ph id="5" ctype="x-CODE">`</ph>&amp;<ph id="6" ctype="x-CODE">`</ph> in your example code needs to be escaped.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">However, inside Markdown code spans and blocks, angle brackets and</mrk>
<mrk mid="1" mtype="seg">ampersands are <ph id="1" ctype="x-EMPHASIS">*</ph>always<ph id="2" ctype="x-EMPHASIS">*</ph> encoded automatically.</mrk><mrk mid="2" mtype="seg"> This makes it easy to use</mrk>
<mrk mid="3" mtype="seg">Markdown to write about HTML code.</mrk><mrk mid="4" mtype="seg"> (As opposed to raw HTML, which is a</mrk>
<mrk mid="5" mtype="seg">terrible format for writing about HTML syntax, because every single <ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph></mrk>
<mrk mid="6" mtype="seg">and <ph id="5" ctype="x-CODE">`</ph>&amp;<ph id="6" ctype="x-CODE">`</ph> in your example code needs to be escaped.)</mrk></target>
</trans-unit>
<group id="sd1_ssf6" resname="sub-filter:sd1">
<trans-unit id="sd1_sf6_tu1" resname="block-id" restype="x-h2" xml:space="preserve">
<source xml:lang="en">Block Elements</source>
<seg-source><mrk mid="0" mtype="seg">Block Elements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Block Elements</mrk></target>
</trans-unit>
</group>
<group id="sd1_ssf7" resname="sub-filter:sd1">
<trans-unit id="sd1_sf7_tu1" resname="p-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Paragraphs and Line Breaks</source>
<seg-source><mrk mid="0" mtype="seg">Paragraphs and Line Breaks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Paragraphs and Line Breaks</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu58" xml:space="preserve">
<source xml:lang="en">A paragraph is simply one or more consecutive lines of text, separated
by one or more blank lines. (A blank line is any line that looks like a
blank line -- a line containing nothing but spaces or tabs is considered
blank.) Normal paragraphs should not be intended with spaces or tabs.</source>
<seg-source><mrk mid="0" mtype="seg">A paragraph is simply one or more consecutive lines of text, separated</mrk>
<mrk mid="1" mtype="seg">by one or more blank lines.</mrk><mrk mid="2" mtype="seg"> (A blank line is any line that looks like a</mrk>
<mrk mid="3" mtype="seg">blank line -- a line containing nothing but spaces or tabs is considered</mrk>
<mrk mid="4" mtype="seg">blank.) Normal paragraphs should not be intended with spaces or tabs.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A paragraph is simply one or more consecutive lines of text, separated</mrk>
<mrk mid="1" mtype="seg">by one or more blank lines.</mrk><mrk mid="2" mtype="seg"> (A blank line is any line that looks like a</mrk>
<mrk mid="3" mtype="seg">blank line -- a line containing nothing but spaces or tabs is considered</mrk>
<mrk mid="4" mtype="seg">blank.) Normal paragraphs should not be intended with spaces or tabs.</mrk></target>
</trans-unit>
<trans-unit id="tu59" xml:space="preserve">
<source xml:lang="en">The implication of the "one or more consecutive lines of text" rule is
that Markdown supports "hard-wrapped" text paragraphs. This differs
significantly from most other text-to-HTML formatters (including Movable
Type's "Convert Line Breaks" option) which translate every line break
character in a paragraph into a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph> tag.</source>
<seg-source><mrk mid="0" mtype="seg">The implication of the "one or more consecutive lines of text" rule is</mrk>
<mrk mid="1" mtype="seg">that Markdown supports "hard-wrapped" text paragraphs.</mrk><mrk mid="2" mtype="seg"> This differs</mrk>
<mrk mid="3" mtype="seg">significantly from most other text-to-HTML formatters (including Movable</mrk>
<mrk mid="4" mtype="seg">Type's "Convert Line Breaks" option) which translate every line break</mrk>
<mrk mid="5" mtype="seg">character in a paragraph into a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph> tag.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The implication of the "one or more consecutive lines of text" rule is</mrk>
<mrk mid="1" mtype="seg">that Markdown supports "hard-wrapped" text paragraphs.</mrk><mrk mid="2" mtype="seg"> This differs</mrk>
<mrk mid="3" mtype="seg">significantly from most other text-to-HTML formatters (including Movable</mrk>
<mrk mid="4" mtype="seg">Type's "Convert Line Breaks" option) which translate every line break</mrk>
<mrk mid="5" mtype="seg">character in a paragraph into a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph> tag.</mrk></target>
</trans-unit>
<trans-unit id="tu60" xml:space="preserve">
<source xml:lang="en">When you <ph id="1" ctype="x-EMPHASIS">*</ph>do<ph id="2" ctype="x-EMPHASIS">*</ph> want to insert a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph> break tag using Markdown, you
end a line with two or more spaces, then type return.</source>
<seg-source><mrk mid="0" mtype="seg">When you <ph id="1" ctype="x-EMPHASIS">*</ph>do<ph id="2" ctype="x-EMPHASIS">*</ph> want to insert a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph> break tag using Markdown, you</mrk>
<mrk mid="1" mtype="seg">end a line with two or more spaces, then type return.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When you <ph id="1" ctype="x-EMPHASIS">*</ph>do<ph id="2" ctype="x-EMPHASIS">*</ph> want to insert a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph> break tag using Markdown, you</mrk>
<mrk mid="1" mtype="seg">end a line with two or more spaces, then type return.</mrk></target>
</trans-unit>
<trans-unit id="tu61" xml:space="preserve">
<source xml:lang="en">Yes, this takes a tad more effort to create a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph>, but a simplistic
"every line break is a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph>" rule wouldn't work for Markdown.
Markdown's email-style <ph id="5" ctype="x-LINK_REF">[</ph>blockquoting<ph id="6" ctype="x-LINK_REF">]</ph><ph id="7" ctype="x-LINK_REF">[</ph><ph id="8" ctype="x-LINK_REF">bq</ph><ph id="9" ctype="x-LINK_REF">]</ph> and multi-paragraph <ph id="10" ctype="x-LINK_REF">[</ph>list items<ph id="11" ctype="x-LINK_REF">]</ph><ph id="12" ctype="x-LINK_REF">[</ph><ph id="13" ctype="x-LINK_REF">l</ph><ph id="14" ctype="x-LINK_REF">]</ph>
work best -- and look better -- when you format them with hard breaks.</source>
<seg-source><mrk mid="0" mtype="seg">Yes, this takes a tad more effort to create a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph>, but a simplistic</mrk>
<mrk mid="1" mtype="seg">"every line break is a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph>" rule wouldn't work for Markdown.</mrk>
<mrk mid="2" mtype="seg">Markdown's email-style <ph id="5" ctype="x-LINK_REF">[</ph>blockquoting<ph id="6" ctype="x-LINK_REF">]</ph><ph id="7" ctype="x-LINK_REF">[</ph><ph id="8" ctype="x-LINK_REF">bq</ph><ph id="9" ctype="x-LINK_REF">]</ph> and multi-paragraph <ph id="10" ctype="x-LINK_REF">[</ph>list items<ph id="11" ctype="x-LINK_REF">]</ph><ph id="12" ctype="x-LINK_REF">[</ph><ph id="13" ctype="x-LINK_REF">l</ph><ph id="14" ctype="x-LINK_REF">]</ph></mrk>
<mrk mid="3" mtype="seg">work best -- and look better -- when you format them with hard breaks.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Yes, this takes a tad more effort to create a <ph id="1" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="2" ctype="x-CODE">`</ph>, but a simplistic</mrk>
<mrk mid="1" mtype="seg">"every line break is a <ph id="3" ctype="x-CODE">`</ph>&lt;br /&gt;<ph id="4" ctype="x-CODE">`</ph>" rule wouldn't work for Markdown.</mrk>
<mrk mid="2" mtype="seg">Markdown's email-style <ph id="5" ctype="x-LINK_REF">[</ph>blockquoting<ph id="6" ctype="x-LINK_REF">]</ph><ph id="7" ctype="x-LINK_REF">[</ph><ph id="8" ctype="x-LINK_REF">bq</ph><ph id="9" ctype="x-LINK_REF">]</ph> and multi-paragraph <ph id="10" ctype="x-LINK_REF">[</ph>list items<ph id="11" ctype="x-LINK_REF">]</ph><ph id="12" ctype="x-LINK_REF">[</ph><ph id="13" ctype="x-LINK_REF">l</ph><ph id="14" ctype="x-LINK_REF">]</ph></mrk>
<mrk mid="3" mtype="seg">work best -- and look better -- when you format them with hard breaks.</mrk></target>
</trans-unit>
<group id="sd1_ssf8" resname="sub-filter:sd1">
<trans-unit id="sd1_sf8_tu1" resname="header-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Headers</source>
<seg-source><mrk mid="0" mtype="seg">Headers</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Headers</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu62" xml:space="preserve">
<source xml:lang="en">Markdown supports two styles of headers, <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph> and <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown supports two styles of headers, <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph> and <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown supports two styles of headers, <ph id="1" ctype="x-LINK_REF">[</ph>Setext<ph id="2" ctype="x-LINK_REF">]</ph> <ph id="3" ctype="x-LINK_REF">[</ph>1<ph id="4" ctype="x-LINK_REF">]</ph> and <ph id="5" ctype="x-LINK_REF">[</ph>atx<ph id="6" ctype="x-LINK_REF">]</ph> <ph id="7" ctype="x-LINK_REF">[</ph>2<ph id="8" ctype="x-LINK_REF">]</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu63" xml:space="preserve">
<source xml:lang="en">Setext-style headers are "underlined" using equal signs (for first-level
headers) and dashes (for second-level headers). For example:</source>
<seg-source><mrk mid="0" mtype="seg">Setext-style headers are "underlined" using equal signs (for first-level</mrk>
<mrk mid="1" mtype="seg">headers) and dashes (for second-level headers).</mrk><mrk mid="2" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Setext-style headers are "underlined" using equal signs (for first-level</mrk>
<mrk mid="1" mtype="seg">headers) and dashes (for second-level headers).</mrk><mrk mid="2" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu64" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>=============<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H2<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>-------------<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>=============<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H2<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>-------------<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>=============<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is an H2<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>-------------<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu65" xml:space="preserve">
<source xml:lang="en">Any number of underlining <ph id="1" ctype="x-CODE">`</ph>=<ph id="2" ctype="x-CODE">`</ph>'s or <ph id="3" ctype="x-CODE">`</ph>-<ph id="4" ctype="x-CODE">`</ph>'s will work.</source>
<seg-source><mrk mid="0" mtype="seg">Any number of underlining <ph id="1" ctype="x-CODE">`</ph>=<ph id="2" ctype="x-CODE">`</ph>'s or <ph id="3" ctype="x-CODE">`</ph>-<ph id="4" ctype="x-CODE">`</ph>'s will work.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Any number of underlining <ph id="1" ctype="x-CODE">`</ph>=<ph id="2" ctype="x-CODE">`</ph>'s or <ph id="3" ctype="x-CODE">`</ph>-<ph id="4" ctype="x-CODE">`</ph>'s will work.</mrk></target>
</trans-unit>
<trans-unit id="tu66" xml:space="preserve">
<source xml:lang="en">Atx-style headers use 1-6 hash characters at the start of the line,
corresponding to header levels 1-6. For example:</source>
<seg-source><mrk mid="0" mtype="seg">Atx-style headers use 1-6 hash characters at the start of the line,</mrk>
<mrk mid="1" mtype="seg">corresponding to header levels 1-6.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Atx-style headers use 1-6 hash characters at the start of the line,</mrk>
<mrk mid="1" mtype="seg">corresponding to header levels 1-6.</mrk><mrk mid="2" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu67" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>###### This is an H6<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>###### This is an H6<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>###### This is an H6<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu68" xml:space="preserve">
<source xml:lang="en">Optionally, you may "close" atx-style headers. This is purely
cosmetic -- you can use this if you think it looks better. The
closing hashes don't even need to match the number of hashes
used to open the header. (The number of opening hashes
determines the header level.) :</source>
<seg-source><mrk mid="0" mtype="seg">Optionally, you may "close" atx-style headers.</mrk><mrk mid="1" mtype="seg"> This is purely</mrk>
<mrk mid="2" mtype="seg">cosmetic -- you can use this if you think it looks better.</mrk><mrk mid="3" mtype="seg"> The</mrk>
<mrk mid="4" mtype="seg">closing hashes don't even need to match the number of hashes</mrk>
<mrk mid="5" mtype="seg">used to open the header.</mrk><mrk mid="6" mtype="seg"> (The number of opening hashes</mrk>
<mrk mid="7" mtype="seg">determines the header level.) :</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Optionally, you may "close" atx-style headers.</mrk><mrk mid="1" mtype="seg"> This is purely</mrk>
<mrk mid="2" mtype="seg">cosmetic -- you can use this if you think it looks better.</mrk><mrk mid="3" mtype="seg"> The</mrk>
<mrk mid="4" mtype="seg">closing hashes don't even need to match the number of hashes</mrk>
<mrk mid="5" mtype="seg">used to open the header.</mrk><mrk mid="6" mtype="seg"> (The number of opening hashes</mrk>
<mrk mid="7" mtype="seg">determines the header level.) :</mrk></target>
</trans-unit>
<trans-unit id="tu69" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1 #<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2 ##<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>### This is an H3 ######<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1 #<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2 ##<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>### This is an H3 ######<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph># This is an H1 #<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>## This is an H2 ##<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>### This is an H3 ######<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<group id="sd1_ssf9" resname="sub-filter:sd1">
<trans-unit id="sd1_sf9_tu1" resname="blockquote-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Blockquotes</source>
<seg-source><mrk mid="0" mtype="seg">Blockquotes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Blockquotes</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu70" xml:space="preserve">
<source xml:lang="en">Markdown uses email-style <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> characters for blockquoting. If you're
familiar with quoting passages of text in an email message, then you
know how to create a blockquote in Markdown. It looks best if you hard
wrap the text and put a <ph id="3" ctype="x-CODE">`</ph>&gt;<ph id="4" ctype="x-CODE">`</ph> before every line:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown uses email-style <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> characters for blockquoting.</mrk><mrk mid="1" mtype="seg"> If you're</mrk>
<mrk mid="2" mtype="seg">familiar with quoting passages of text in an email message, then you</mrk>
<mrk mid="3" mtype="seg">know how to create a blockquote in Markdown.</mrk><mrk mid="4" mtype="seg"> It looks best if you hard</mrk>
<mrk mid="5" mtype="seg">wrap the text and put a <ph id="3" ctype="x-CODE">`</ph>&gt;<ph id="4" ctype="x-CODE">`</ph> before every line:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown uses email-style <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> characters for blockquoting.</mrk><mrk mid="1" mtype="seg"> If you're</mrk>
<mrk mid="2" mtype="seg">familiar with quoting passages of text in an email message, then you</mrk>
<mrk mid="3" mtype="seg">know how to create a blockquote in Markdown.</mrk><mrk mid="4" mtype="seg"> It looks best if you hard</mrk>
<mrk mid="5" mtype="seg">wrap the text and put a <ph id="3" ctype="x-CODE">`</ph>&gt;<ph id="4" ctype="x-CODE">`</ph> before every line:</mrk></target>
</trans-unit>
<trans-unit id="tu71" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs.</mrk><mrk mid="1" mtype="seg"> Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; consectetuer adipiscing elit.</mrk><mrk mid="2" mtype="seg"> Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl.</mrk><mrk mid="3" mtype="seg"> Aliquam semper ipsum sit amet velit.</mrk><mrk mid="4" mtype="seg"> Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs.</mrk><mrk mid="1" mtype="seg"> Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; consectetuer adipiscing elit.</mrk><mrk mid="2" mtype="seg"> Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl.</mrk><mrk mid="3" mtype="seg"> Aliquam semper ipsum sit amet velit.</mrk><mrk mid="4" mtype="seg"> Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu72" xml:space="preserve">
<source xml:lang="en">Markdown allows you to be lazy and only put the <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> before the first
line of a hard-wrapped paragraph:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown allows you to be lazy and only put the <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> before the first</mrk>
<mrk mid="1" mtype="seg">line of a hard-wrapped paragraph:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown allows you to be lazy and only put the <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph> before the first</mrk>
<mrk mid="1" mtype="seg">line of a hard-wrapped paragraph:</mrk></target>
</trans-unit>
<trans-unit id="tu73" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs.</mrk><mrk mid="1" mtype="seg"> Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>consectetuer adipiscing elit.</mrk><mrk mid="2" mtype="seg"> Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl.</mrk><mrk mid="3" mtype="seg"> Aliquam semper ipsum sit amet velit.</mrk><mrk mid="4" mtype="seg"> Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote with two paragraphs.</mrk><mrk mid="1" mtype="seg"> Lorem ipsum dolor sit amet,<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>consectetuer adipiscing elit.</mrk><mrk mid="2" mtype="seg"> Aliquam hendrerit mi posuere lectus.<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Donec sit amet nisl.</mrk><mrk mid="3" mtype="seg"> Aliquam semper ipsum sit amet velit.</mrk><mrk mid="4" mtype="seg"> Suspendisse<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>id sem consectetuer libero luctus adipiscing.<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu74" xml:space="preserve">
<source xml:lang="en">Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by
adding additional levels of <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph>:</source>
<seg-source><mrk mid="0" mtype="seg">Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by</mrk>
<mrk mid="1" mtype="seg">adding additional levels of <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph>:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by</mrk>
<mrk mid="1" mtype="seg">adding additional levels of <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph>:</mrk></target>
</trans-unit>
<trans-unit id="tu75" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is the first level of quoting.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; &gt; This is nested blockquote.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Back to the first level.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is the first level of quoting.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; &gt; This is nested blockquote.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Back to the first level.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is the first level of quoting.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; &gt; This is nested blockquote.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Back to the first level.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu76" xml:space="preserve">
<source xml:lang="en">Blockquotes can contain other Markdown elements, including headers, lists,
and code blocks:</source>
<seg-source><mrk mid="0" mtype="seg">Blockquotes can contain other Markdown elements, including headers, lists,</mrk>
<mrk mid="1" mtype="seg">and code blocks:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Blockquotes can contain other Markdown elements, including headers, lists,</mrk>
<mrk mid="1" mtype="seg">and code blocks:</mrk></target>
</trans-unit>
<trans-unit id="tu77" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; ## This is a header.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 1.   This is the first list item.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 2.   This is the second list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Here's some example code:<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;     return shell_exec("echo $input | $markdown_script");<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; ## This is a header.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 1.</mrk><mrk mid="1" mtype="seg">   This is the first list item.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 2.</mrk><mrk mid="2" mtype="seg">   This is the second list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Here's some example code:<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;     return shell_exec("echo $input | $markdown_script");<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; ## This is a header.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 1.</mrk><mrk mid="1" mtype="seg">   This is the first list item.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; 2.</mrk><mrk mid="2" mtype="seg">   This is the second list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; Here's some example code:<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt;     return shell_exec("echo $input | $markdown_script");<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu78" xml:space="preserve">
<source xml:lang="en">Any decent text editor should make email-style quoting easy. For
example, with BBEdit, you can make a selection and choose Increase
Quote Level from the Text menu.</source>
<seg-source><mrk mid="0" mtype="seg">Any decent text editor should make email-style quoting easy.</mrk><mrk mid="1" mtype="seg"> For</mrk>
<mrk mid="2" mtype="seg">example, with BBEdit, you can make a selection and choose Increase</mrk>
<mrk mid="3" mtype="seg">Quote Level from the Text menu.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Any decent text editor should make email-style quoting easy.</mrk><mrk mid="1" mtype="seg"> For</mrk>
<mrk mid="2" mtype="seg">example, with BBEdit, you can make a selection and choose Increase</mrk>
<mrk mid="3" mtype="seg">Quote Level from the Text menu.</mrk></target>
</trans-unit>
<group id="sd1_ssf10" resname="sub-filter:sd1">
<trans-unit id="sd1_sf10_tu1" resname="list-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Lists</source>
<seg-source><mrk mid="0" mtype="seg">Lists</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Lists</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu79" xml:space="preserve">
<source xml:lang="en">Markdown supports ordered (numbered) and unordered (bulleted) lists.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown supports ordered (numbered) and unordered (bulleted) lists.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown supports ordered (numbered) and unordered (bulleted) lists.</mrk></target>
</trans-unit>
<trans-unit id="tu80" xml:space="preserve">
<source xml:lang="en">Unordered lists use asterisks, pluses, and hyphens -- interchangably
-- as list markers:</source>
<seg-source><mrk mid="0" mtype="seg">Unordered lists use asterisks, pluses, and hyphens -- interchangably</mrk>
<mrk mid="1" mtype="seg">-- as list markers:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unordered lists use asterisks, pluses, and hyphens -- interchangably</mrk>
<mrk mid="1" mtype="seg">-- as list markers:</mrk></target>
</trans-unit>
<trans-unit id="tu81" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu82" xml:space="preserve">
<source xml:lang="en">is equivalent to:</source>
<seg-source><mrk mid="0" mtype="seg">is equivalent to:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">is equivalent to:</mrk></target>
</trans-unit>
<trans-unit id="tu83" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>+   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu84" xml:space="preserve">
<source xml:lang="en">and:</source>
<seg-source><mrk mid="0" mtype="seg">and:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">and:</mrk></target>
</trans-unit>
<trans-unit id="tu85" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Red<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Green<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>-   Blue<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu86" xml:space="preserve">
<source xml:lang="en">Ordered lists use numbers followed by periods:</source>
<seg-source><mrk mid="0" mtype="seg">Ordered lists use numbers followed by periods:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ordered lists use numbers followed by periods:</mrk></target>
</trans-unit>
<trans-unit id="tu87" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>3.  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.</mrk><mrk mid="2" mtype="seg">  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>3.</mrk><mrk mid="3" mtype="seg">  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.</mrk><mrk mid="2" mtype="seg">  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>3.</mrk><mrk mid="3" mtype="seg">  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu88" xml:space="preserve">
<source xml:lang="en">It's important to note that the actual numbers you use to mark the
list have no effect on the HTML output Markdown produces. The HTML
Markdown produces from the above list is:</source>
<seg-source><mrk mid="0" mtype="seg">It's important to note that the actual numbers you use to mark the</mrk>
<mrk mid="1" mtype="seg">list have no effect on the HTML output Markdown produces.</mrk><mrk mid="2" mtype="seg"> The HTML</mrk>
<mrk mid="3" mtype="seg">Markdown produces from the above list is:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It's important to note that the actual numbers you use to mark the</mrk>
<mrk mid="1" mtype="seg">list have no effect on the HTML output Markdown produces.</mrk><mrk mid="2" mtype="seg"> The HTML</mrk>
<mrk mid="3" mtype="seg">Markdown produces from the above list is:</mrk></target>
</trans-unit>
<trans-unit id="tu89" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ol&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;McHale&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Parish&lt;/li&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ol&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ol&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;McHale&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Parish&lt;/li&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ol&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ol&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;McHale&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Parish&lt;/li&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ol&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu90" xml:space="preserve">
<source xml:lang="en">If you instead wrote the list in Markdown like this:</source>
<seg-source><mrk mid="0" mtype="seg">If you instead wrote the list in Markdown like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you instead wrote the list in Markdown like this:</mrk></target>
</trans-unit>
<trans-unit id="tu91" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="2" mtype="seg">  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="3" mtype="seg">  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="2" mtype="seg">  McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="3" mtype="seg">  Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu92" xml:space="preserve">
<source xml:lang="en">or even:</source>
<seg-source><mrk mid="0" mtype="seg">or even:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">or even:</mrk></target>
</trans-unit>
<trans-unit id="tu93" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>3. Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1. McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>8. Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>3.</mrk><mrk mid="1" mtype="seg"> Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="2" mtype="seg"> McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>8.</mrk><mrk mid="3" mtype="seg"> Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>3.</mrk><mrk mid="1" mtype="seg"> Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="2" mtype="seg"> McHale<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>8.</mrk><mrk mid="3" mtype="seg"> Parish<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu94" xml:space="preserve">
<source xml:lang="en">you'd get the exact same HTML output. The point is, if you want to,
you can use ordinal numbers in your ordered Markdown lists, so that
the numbers in your source match the numbers in your published HTML.
But if you want to be lazy, you don't have to.</source>
<seg-source><mrk mid="0" mtype="seg">you'd get the exact same HTML output.</mrk><mrk mid="1" mtype="seg"> The point is, if you want to,</mrk>
<mrk mid="2" mtype="seg">you can use ordinal numbers in your ordered Markdown lists, so that</mrk>
<mrk mid="3" mtype="seg">the numbers in your source match the numbers in your published HTML.</mrk>
<mrk mid="4" mtype="seg">But if you want to be lazy, you don't have to.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">you'd get the exact same HTML output.</mrk><mrk mid="1" mtype="seg"> The point is, if you want to,</mrk>
<mrk mid="2" mtype="seg">you can use ordinal numbers in your ordered Markdown lists, so that</mrk>
<mrk mid="3" mtype="seg">the numbers in your source match the numbers in your published HTML.</mrk>
<mrk mid="4" mtype="seg">But if you want to be lazy, you don't have to.</mrk></target>
</trans-unit>
<trans-unit id="tu95" xml:space="preserve">
<source xml:lang="en">If you do use lazy list numbering, however, you should still start the
list with the number 1. At some point in the future, Markdown may support
starting ordered lists at an arbitrary number.</source>
<seg-source><mrk mid="0" mtype="seg">If you do use lazy list numbering, however, you should still start the</mrk>
<mrk mid="1" mtype="seg">list with the number 1.</mrk><mrk mid="2" mtype="seg"> At some point in the future, Markdown may support</mrk>
<mrk mid="3" mtype="seg">starting ordered lists at an arbitrary number.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you do use lazy list numbering, however, you should still start the</mrk>
<mrk mid="1" mtype="seg">list with the number 1.</mrk><mrk mid="2" mtype="seg"> At some point in the future, Markdown may support</mrk>
<mrk mid="3" mtype="seg">starting ordered lists at an arbitrary number.</mrk></target>
</trans-unit>
<trans-unit id="tu96" xml:space="preserve">
<source xml:lang="en">List markers typically start at the left margin, but may be indented by
up to three spaces. List markers must be followed by one or more spaces
or a tab.</source>
<seg-source><mrk mid="0" mtype="seg">List markers typically start at the left margin, but may be indented by</mrk>
<mrk mid="1" mtype="seg">up to three spaces.</mrk><mrk mid="2" mtype="seg"> List markers must be followed by one or more spaces</mrk>
<mrk mid="3" mtype="seg">or a tab.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">List markers typically start at the left margin, but may be indented by</mrk>
<mrk mid="1" mtype="seg">up to three spaces.</mrk><mrk mid="2" mtype="seg"> List markers must be followed by one or more spaces</mrk>
<mrk mid="3" mtype="seg">or a tab.</mrk></target>
</trans-unit>
<trans-unit id="tu97" xml:space="preserve">
<source xml:lang="en">To make lists look nice, you can wrap items with hanging indents:</source>
<seg-source><mrk mid="0" mtype="seg">To make lists look nice, you can wrap items with hanging indents:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To make lists look nice, you can wrap items with hanging indents:</mrk></target>
</trans-unit>
<trans-unit id="tu98" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus.</mrk><mrk mid="1" mtype="seg"> Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl.</mrk><mrk mid="2" mtype="seg"> Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus.</mrk><mrk mid="1" mtype="seg"> Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl.</mrk><mrk mid="2" mtype="seg"> Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu99" xml:space="preserve">
<source xml:lang="en">But if you want to be lazy, you don't have to:</source>
<seg-source><mrk mid="0" mtype="seg">But if you want to be lazy, you don't have to:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">But if you want to be lazy, you don't have to:</mrk></target>
</trans-unit>
<trans-unit id="tu100" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus.</mrk><mrk mid="1" mtype="seg"> Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl.</mrk><mrk mid="2" mtype="seg"> Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>Aliquam hendrerit mi posuere lectus.</mrk><mrk mid="1" mtype="seg"> Vestibulum enim wisi,<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>viverra nec, fringilla in, laoreet vitae, risus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Donec sit amet nisl.</mrk><mrk mid="2" mtype="seg"> Aliquam semper ipsum sit amet velit.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu101" xml:space="preserve">
<source xml:lang="en">If list items are separated by blank lines, Markdown will wrap the
items in <ph id="1" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="2" ctype="x-CODE">`</ph> tags in the HTML output. For example, this input:</source>
<seg-source><mrk mid="0" mtype="seg">If list items are separated by blank lines, Markdown will wrap the</mrk>
<mrk mid="1" mtype="seg">items in <ph id="1" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="2" ctype="x-CODE">`</ph> tags in the HTML output.</mrk><mrk mid="2" mtype="seg"> For example, this input:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If list items are separated by blank lines, Markdown will wrap the</mrk>
<mrk mid="1" mtype="seg">items in <ph id="1" ctype="x-CODE">`</ph>&lt;p&gt;<ph id="2" ctype="x-CODE">`</ph> tags in the HTML output.</mrk><mrk mid="2" mtype="seg"> For example, this input:</mrk></target>
</trans-unit>
<trans-unit id="tu102" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu103" xml:space="preserve">
<source xml:lang="en">will turn into:</source>
<seg-source><mrk mid="0" mtype="seg">will turn into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will turn into:</mrk></target>
</trans-unit>
<trans-unit id="tu104" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Magic&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Magic&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Bird&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;Magic&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu105" xml:space="preserve">
<source xml:lang="en">But this:</source>
<seg-source><mrk mid="0" mtype="seg">But this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">But this:</mrk></target>
</trans-unit>
<trans-unit id="tu106" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Bird<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Magic<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu107" xml:space="preserve">
<source xml:lang="en">will turn into:</source>
<seg-source><mrk mid="0" mtype="seg">will turn into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will turn into:</mrk></target>
</trans-unit>
<trans-unit id="tu108" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;ul&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/ul&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu109" xml:space="preserve">
<source xml:lang="en">List items may consist of multiple paragraphs. Each subsequent
paragraph in a list item must be intended by either 4 spaces
or one tab:</source>
<seg-source><mrk mid="0" mtype="seg">List items may consist of multiple paragraphs.</mrk><mrk mid="1" mtype="seg"> Each subsequent</mrk>
<mrk mid="2" mtype="seg">paragraph in a list item must be intended by either 4 spaces</mrk>
<mrk mid="3" mtype="seg">or one tab:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">List items may consist of multiple paragraphs.</mrk><mrk mid="1" mtype="seg"> Each subsequent</mrk>
<mrk mid="2" mtype="seg">paragraph in a list item must be intended by either 4 spaces</mrk>
<mrk mid="3" mtype="seg">or one tab:</mrk></target>
</trans-unit>
<trans-unit id="tu110" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.  This is a list item with two paragraphs. Lorem ipsum dolor<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit. Aliquam hendrerit<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>mi posuere lectus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet velit.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.  Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  This is a list item with two paragraphs.</mrk><mrk mid="2" mtype="seg"> Lorem ipsum dolor<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit.</mrk><mrk mid="3" mtype="seg"> Aliquam hendrerit<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>mi posuere lectus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>vitae, risus.</mrk><mrk mid="4" mtype="seg"> Donec sit amet nisl.</mrk><mrk mid="5" mtype="seg"> Aliquam semper ipsum<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet velit.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.</mrk><mrk mid="6" mtype="seg">  Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1.</mrk><mrk mid="1" mtype="seg">  This is a list item with two paragraphs.</mrk><mrk mid="2" mtype="seg"> Lorem ipsum dolor<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit.</mrk><mrk mid="3" mtype="seg"> Aliquam hendrerit<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>mi posuere lectus.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>vitae, risus.</mrk><mrk mid="4" mtype="seg"> Donec sit amet nisl.</mrk><mrk mid="5" mtype="seg"> Aliquam semper ipsum<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet velit.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>2.</mrk><mrk mid="6" mtype="seg">  Suspendisse id sem consectetuer libero luctus adipiscing.<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu111" xml:space="preserve">
<source xml:lang="en">It looks nice if you indent every line of the subsequent
paragraphs, but here again, Markdown will allow you to be
lazy:</source>
<seg-source><mrk mid="0" mtype="seg">It looks nice if you indent every line of the subsequent</mrk>
<mrk mid="1" mtype="seg">paragraphs, but here again, Markdown will allow you to be</mrk>
<mrk mid="2" mtype="seg">lazy:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It looks nice if you indent every line of the subsequent</mrk>
<mrk mid="1" mtype="seg">paragraphs, but here again, Markdown will allow you to be</mrk>
<mrk mid="2" mtype="seg">lazy:</mrk></target>
</trans-unit>
<trans-unit id="tu112" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   This is a list item with two paragraphs.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is the second paragraph in the list item. You're<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>only required to indent the first line. Lorem ipsum dolor<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Another item in the same list.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   This is a list item with two paragraphs.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is the second paragraph in the list item.</mrk><mrk mid="1" mtype="seg"> You're<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>only required to indent the first line.</mrk><mrk mid="2" mtype="seg"> Lorem ipsum dolor<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Another item in the same list.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   This is a list item with two paragraphs.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is the second paragraph in the list item.</mrk><mrk mid="1" mtype="seg"> You're<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>only required to indent the first line.</mrk><mrk mid="2" mtype="seg"> Lorem ipsum dolor<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>sit amet, consectetuer adipiscing elit.<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   Another item in the same list.<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu113" xml:space="preserve">
<source xml:lang="en">To put a blockquote within a list item, the blockquote's <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph>
delimiters need to be indented:</source>
<seg-source><mrk mid="0" mtype="seg">To put a blockquote within a list item, the blockquote's <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">delimiters need to be indented:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To put a blockquote within a list item, the blockquote's <ph id="1" ctype="x-CODE">`</ph>&gt;<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">delimiters need to be indented:</mrk></target>
</trans-unit>
<trans-unit id="tu114" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a blockquote:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; inside a list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a blockquote:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; inside a list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a blockquote:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; This is a blockquote<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&gt; inside a list item.<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu115" xml:space="preserve">
<source xml:lang="en">To put a code block within a list item, the code block needs
to be indented <ph id="1" ctype="x-EMPHASIS">*</ph>twice<ph id="2" ctype="x-EMPHASIS">*</ph> -- 8 spaces or two tabs:</source>
<seg-source><mrk mid="0" mtype="seg">To put a code block within a list item, the code block needs</mrk>
<mrk mid="1" mtype="seg">to be indented <ph id="1" ctype="x-EMPHASIS">*</ph>twice<ph id="2" ctype="x-EMPHASIS">*</ph> -- 8 spaces or two tabs:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To put a code block within a list item, the code block needs</mrk>
<mrk mid="1" mtype="seg">to be indented <ph id="1" ctype="x-EMPHASIS">*</ph>twice<ph id="2" ctype="x-EMPHASIS">*</ph> -- 8 spaces or two tabs:</mrk></target>
</trans-unit>
<trans-unit id="tu116" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a code block:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;code goes here&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a code block:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;code goes here&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   A list item with a code block:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;code goes here&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu117" xml:space="preserve">
<source xml:lang="en">It's worth noting that it's possible to trigger an ordered list by
accident, by writing something like this:</source>
<seg-source><mrk mid="0" mtype="seg">It's worth noting that it's possible to trigger an ordered list by</mrk>
<mrk mid="1" mtype="seg">accident, by writing something like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It's worth noting that it's possible to trigger an ordered list by</mrk>
<mrk mid="1" mtype="seg">accident, by writing something like this:</mrk></target>
</trans-unit>
<trans-unit id="tu118" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986. What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986.</mrk><mrk mid="1" mtype="seg"> What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986.</mrk><mrk mid="1" mtype="seg"> What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu119" xml:space="preserve">
<source xml:lang="en">In other words, a <ph id="1" ctype="x-EMPHASIS">*</ph>number-period-space<ph id="2" ctype="x-EMPHASIS">*</ph> sequence at the beginning of a
line. To avoid this, you can backslash-escape the period:</source>
<seg-source><mrk mid="0" mtype="seg">In other words, a <ph id="1" ctype="x-EMPHASIS">*</ph>number-period-space<ph id="2" ctype="x-EMPHASIS">*</ph> sequence at the beginning of a</mrk>
<mrk mid="1" mtype="seg">line.</mrk><mrk mid="2" mtype="seg"> To avoid this, you can backslash-escape the period:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In other words, a <ph id="1" ctype="x-EMPHASIS">*</ph>number-period-space<ph id="2" ctype="x-EMPHASIS">*</ph> sequence at the beginning of a</mrk>
<mrk mid="1" mtype="seg">line.</mrk><mrk mid="2" mtype="seg"> To avoid this, you can backslash-escape the period:</mrk></target>
</trans-unit>
<trans-unit id="tu120" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986\. What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986\.</mrk><mrk mid="1" mtype="seg"> What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>1986\.</mrk><mrk mid="1" mtype="seg"> What a great season.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<group id="sd1_ssf11" resname="sub-filter:sd1">
<trans-unit id="sd1_sf11_tu1" resname="precode-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Code Blocks</source>
<seg-source><mrk mid="0" mtype="seg">Code Blocks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Code Blocks</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu121" xml:space="preserve">
<source xml:lang="en">Pre-formatted code blocks are used for writing about programming or
markup source code. Rather than forming normal paragraphs, the lines
of a code block are interpreted literally. Markdown wraps a code block
in both <ph id="1" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="2" ctype="x-CODE">`</ph> and <ph id="3" ctype="x-CODE">`</ph>&lt;code&gt;<ph id="4" ctype="x-CODE">`</ph> tags.</source>
<seg-source><mrk mid="0" mtype="seg">Pre-formatted code blocks are used for writing about programming or</mrk>
<mrk mid="1" mtype="seg">markup source code.</mrk><mrk mid="2" mtype="seg"> Rather than forming normal paragraphs, the lines</mrk>
<mrk mid="3" mtype="seg">of a code block are interpreted literally.</mrk><mrk mid="4" mtype="seg"> Markdown wraps a code block</mrk>
<mrk mid="5" mtype="seg">in both <ph id="1" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="2" ctype="x-CODE">`</ph> and <ph id="3" ctype="x-CODE">`</ph>&lt;code&gt;<ph id="4" ctype="x-CODE">`</ph> tags.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pre-formatted code blocks are used for writing about programming or</mrk>
<mrk mid="1" mtype="seg">markup source code.</mrk><mrk mid="2" mtype="seg"> Rather than forming normal paragraphs, the lines</mrk>
<mrk mid="3" mtype="seg">of a code block are interpreted literally.</mrk><mrk mid="4" mtype="seg"> Markdown wraps a code block</mrk>
<mrk mid="5" mtype="seg">in both <ph id="1" ctype="x-CODE">`</ph>&lt;pre&gt;<ph id="2" ctype="x-CODE">`</ph> and <ph id="3" ctype="x-CODE">`</ph>&lt;code&gt;<ph id="4" ctype="x-CODE">`</ph> tags.</mrk></target>
</trans-unit>
<trans-unit id="tu122" xml:space="preserve">
<source xml:lang="en">To produce a code block in Markdown, simply indent every line of the
block by at least 4 spaces or 1 tab. For example, given this input:</source>
<seg-source><mrk mid="0" mtype="seg">To produce a code block in Markdown, simply indent every line of the</mrk>
<mrk mid="1" mtype="seg">block by at least 4 spaces or 1 tab.</mrk><mrk mid="2" mtype="seg"> For example, given this input:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To produce a code block in Markdown, simply indent every line of the</mrk>
<mrk mid="1" mtype="seg">block by at least 4 spaces or 1 tab.</mrk><mrk mid="2" mtype="seg"> For example, given this input:</mrk></target>
</trans-unit>
<trans-unit id="tu123" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a normal paragraph:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a normal paragraph:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a normal paragraph:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu124" xml:space="preserve">
<source xml:lang="en">Markdown will generate:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown will generate:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown will generate:</mrk></target>
</trans-unit>
<trans-unit id="tu125" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;This is a code block.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu126" xml:space="preserve">
<source xml:lang="en">One level of indentation -- 4 spaces or 1 tab -- is removed from each
line of the code block. For example, this:</source>
<seg-source><mrk mid="0" mtype="seg">One level of indentation -- 4 spaces or 1 tab -- is removed from each</mrk>
<mrk mid="1" mtype="seg">line of the code block.</mrk><mrk mid="2" mtype="seg"> For example, this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">One level of indentation -- 4 spaces or 1 tab -- is removed from each</mrk>
<mrk mid="1" mtype="seg">line of the code block.</mrk><mrk mid="2" mtype="seg"> For example, this:</mrk></target>
</trans-unit>
<trans-unit id="tu127" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Here is an example of AppleScript:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Here is an example of AppleScript:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Here is an example of AppleScript:<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu128" xml:space="preserve">
<source xml:lang="en">will turn into:</source>
<seg-source><mrk mid="0" mtype="seg">will turn into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will turn into:</mrk></target>
</trans-unit>
<trans-unit id="tu129" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;tell application "Foo"<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>beep<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>end tell<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu130" xml:space="preserve">
<source xml:lang="en">A code block continues until it reaches a line that is not indented
(or the end of the article).</source>
<seg-source><mrk mid="0" mtype="seg">A code block continues until it reaches a line that is not indented</mrk>
<mrk mid="1" mtype="seg">(or the end of the article).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A code block continues until it reaches a line that is not indented</mrk>
<mrk mid="1" mtype="seg">(or the end of the article).</mrk></target>
</trans-unit>
<trans-unit id="tu131" xml:space="preserve">
<source xml:lang="en">Within a code block, ampersands (<ph id="1" ctype="x-CODE">`</ph>&amp;<ph id="2" ctype="x-CODE">`</ph>) and angle brackets (<ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph> and <ph id="5" ctype="x-CODE">`</ph>&gt;<ph id="6" ctype="x-CODE">`</ph>)
are automatically converted into HTML entities. This makes it very
easy to include example HTML source code using Markdown -- just paste
it and indent it, and Markdown will handle the hassle of encoding the
ampersands and angle brackets. For example, this:</source>
<seg-source><mrk mid="0" mtype="seg">Within a code block, ampersands (<ph id="1" ctype="x-CODE">`</ph>&amp;<ph id="2" ctype="x-CODE">`</ph>) and angle brackets (<ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph> and <ph id="5" ctype="x-CODE">`</ph>&gt;<ph id="6" ctype="x-CODE">`</ph>)</mrk>
<mrk mid="1" mtype="seg">are automatically converted into HTML entities.</mrk><mrk mid="2" mtype="seg"> This makes it very</mrk>
<mrk mid="3" mtype="seg">easy to include example HTML source code using Markdown -- just paste</mrk>
<mrk mid="4" mtype="seg">it and indent it, and Markdown will handle the hassle of encoding the</mrk>
<mrk mid="5" mtype="seg">ampersands and angle brackets.</mrk><mrk mid="6" mtype="seg"> For example, this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Within a code block, ampersands (<ph id="1" ctype="x-CODE">`</ph>&amp;<ph id="2" ctype="x-CODE">`</ph>) and angle brackets (<ph id="3" ctype="x-CODE">`</ph>&lt;<ph id="4" ctype="x-CODE">`</ph> and <ph id="5" ctype="x-CODE">`</ph>&gt;<ph id="6" ctype="x-CODE">`</ph>)</mrk>
<mrk mid="1" mtype="seg">are automatically converted into HTML entities.</mrk><mrk mid="2" mtype="seg"> This makes it very</mrk>
<mrk mid="3" mtype="seg">easy to include example HTML source code using Markdown -- just paste</mrk>
<mrk mid="4" mtype="seg">it and indent it, and Markdown will handle the hassle of encoding the</mrk>
<mrk mid="5" mtype="seg">ampersands and angle brackets.</mrk><mrk mid="6" mtype="seg"> For example, this:</mrk></target>
</trans-unit>
<trans-unit id="tu132" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;div class="footer"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/div&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;div class="footer"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/div&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;div class="footer"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/div&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu133" xml:space="preserve">
<source xml:lang="en">will turn into:</source>
<seg-source><mrk mid="0" mtype="seg">will turn into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will turn into:</mrk></target>
</trans-unit>
<trans-unit id="tu134" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;&amp;lt;div class="footer"&amp;gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;lt;/div&amp;gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;&amp;lt;div class="footer"&amp;gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;lt;/div&amp;gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;pre&gt;&lt;code&gt;&amp;lt;div class="footer"&amp;gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;amp;copy; 2004 Foo Corporation<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;lt;/div&amp;gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;/code&gt;&lt;/pre&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu135" xml:space="preserve">
<source xml:lang="en">Regular Markdown syntax is not processed within code blocks. E.g.,
asterisks are just literal asterisks within a code block. This means
it's also easy to use Markdown to write about Markdown's own syntax.</source>
<seg-source><mrk mid="0" mtype="seg">Regular Markdown syntax is not processed within code blocks.</mrk><mrk mid="1" mtype="seg"> E.g.,</mrk>
<mrk mid="2" mtype="seg">asterisks are just literal asterisks within a code block.</mrk><mrk mid="3" mtype="seg"> This means</mrk>
<mrk mid="4" mtype="seg">it's also easy to use Markdown to write about Markdown's own syntax.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Regular Markdown syntax is not processed within code blocks.</mrk><mrk mid="1" mtype="seg"> E.g.,</mrk>
<mrk mid="2" mtype="seg">asterisks are just literal asterisks within a code block.</mrk><mrk mid="3" mtype="seg"> This means</mrk>
<mrk mid="4" mtype="seg">it's also easy to use Markdown to write about Markdown's own syntax.</mrk></target>
</trans-unit>
<group id="sd1_ssf12" resname="sub-filter:sd1">
<trans-unit id="sd1_sf12_tu1" resname="hr-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Horizontal Rules</source>
<seg-source><mrk mid="0" mtype="seg">Horizontal Rules</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Horizontal Rules</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu136" xml:space="preserve">
<source xml:lang="en">You can produce a horizontal rule tag (<ph id="1" ctype="x-CODE">`</ph>&lt;hr /&gt;<ph id="2" ctype="x-CODE">`</ph>) by placing three or
more hyphens, asterisks, or underscores on a line by themselves. If you
wish, you may use spaces between the hyphens or asterisks. Each of the
following lines will produce a horizontal rule:</source>
<seg-source><mrk mid="0" mtype="seg">You can produce a horizontal rule tag (<ph id="1" ctype="x-CODE">`</ph>&lt;hr /&gt;<ph id="2" ctype="x-CODE">`</ph>) by placing three or</mrk>
<mrk mid="1" mtype="seg">more hyphens, asterisks, or underscores on a line by themselves.</mrk><mrk mid="2" mtype="seg"> If you</mrk>
<mrk mid="3" mtype="seg">wish, you may use spaces between the hyphens or asterisks.</mrk><mrk mid="4" mtype="seg"> Each of the</mrk>
<mrk mid="5" mtype="seg">following lines will produce a horizontal rule:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can produce a horizontal rule tag (<ph id="1" ctype="x-CODE">`</ph>&lt;hr /&gt;<ph id="2" ctype="x-CODE">`</ph>) by placing three or</mrk>
<mrk mid="1" mtype="seg">more hyphens, asterisks, or underscores on a line by themselves.</mrk><mrk mid="2" mtype="seg"> If you</mrk>
<mrk mid="3" mtype="seg">wish, you may use spaces between the hyphens or asterisks.</mrk><mrk mid="4" mtype="seg"> Each of the</mrk>
<mrk mid="5" mtype="seg">following lines will produce a horizontal rule:</mrk></target>
</trans-unit>
<trans-unit id="tu137" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>* * *<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>***<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>*****<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>- - -<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>---------------------------------------<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>_ _ _<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>* * *<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>***<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>*****<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>- - -<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>---------------------------------------<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>_ _ _<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>* * *<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>***<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>*****<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>- - -<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>---------------------------------------<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>_ _ _<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<group id="sd1_ssf13" resname="sub-filter:sd1">
<trans-unit id="sd1_sf13_tu1" resname="span-id" restype="x-h2" xml:space="preserve">
<source xml:lang="en">Span Elements</source>
<seg-source><mrk mid="0" mtype="seg">Span Elements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Span Elements</mrk></target>
</trans-unit>
</group>
<group id="sd1_ssf14" resname="sub-filter:sd1">
<trans-unit id="sd1_sf14_tu1" resname="link-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Links</source>
<seg-source><mrk mid="0" mtype="seg">Links</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Links</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu138" xml:space="preserve">
<source xml:lang="en">Markdown supports two style of links: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown supports two style of links: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown supports two style of links: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu139" xml:space="preserve">
<source xml:lang="en">In both styles, the link text is delimited by <ph id="1" ctype="x-LINK_REF">[</ph>square brackets<ph id="2" ctype="x-LINK_REF">]</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">In both styles, the link text is delimited by <ph id="1" ctype="x-LINK_REF">[</ph>square brackets<ph id="2" ctype="x-LINK_REF">]</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In both styles, the link text is delimited by <ph id="1" ctype="x-LINK_REF">[</ph>square brackets<ph id="2" ctype="x-LINK_REF">]</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu140" xml:space="preserve">
<source xml:lang="en">To create an inline link, use a set of regular parentheses immediately
after the link text's closing square bracket. Inside the parentheses,
put the URL where you want the link to point, along with an <ph id="1" ctype="x-EMPHASIS">*</ph>optional<ph id="2" ctype="x-EMPHASIS">*</ph>
title for the link, surrounded in quotes. For example:</source>
<seg-source><mrk mid="0" mtype="seg">To create an inline link, use a set of regular parentheses immediately</mrk>
<mrk mid="1" mtype="seg">after the link text's closing square bracket.</mrk><mrk mid="2" mtype="seg"> Inside the parentheses,</mrk>
<mrk mid="3" mtype="seg">put the URL where you want the link to point, along with an <ph id="1" ctype="x-EMPHASIS">*</ph>optional<ph id="2" ctype="x-EMPHASIS">*</ph></mrk>
<mrk mid="4" mtype="seg">title for the link, surrounded in quotes.</mrk><mrk mid="5" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To create an inline link, use a set of regular parentheses immediately</mrk>
<mrk mid="1" mtype="seg">after the link text's closing square bracket.</mrk><mrk mid="2" mtype="seg"> Inside the parentheses,</mrk>
<mrk mid="3" mtype="seg">put the URL where you want the link to point, along with an <ph id="1" ctype="x-EMPHASIS">*</ph>optional<ph id="2" ctype="x-EMPHASIS">*</ph></mrk>
<mrk mid="4" mtype="seg">title for the link, surrounded in quotes.</mrk><mrk mid="5" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu141" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example](http://example.com/ "Title") inline link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[This link](http://example.net/) has no title attribute.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example](http://example.com/ "Title") inline link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[This link](http://example.net/) has no title attribute.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example](http://example.com/ "Title") inline link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[This link](http://example.net/) has no title attribute.<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu142" xml:space="preserve">
<source xml:lang="en">Will produce:</source>
<seg-source><mrk mid="0" mtype="seg">Will produce:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Will produce:</mrk></target>
</trans-unit>
<trans-unit id="tu143" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>an example&lt;/a&gt; inline link.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;a href="http://example.net/"&gt;This link&lt;/a&gt; has no<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>title attribute.&lt;/p&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>an example&lt;/a&gt; inline link.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;a href="http://example.net/"&gt;This link&lt;/a&gt; has no<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>title attribute.&lt;/p&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>an example&lt;/a&gt; inline link.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;a href="http://example.net/"&gt;This link&lt;/a&gt; has no<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>title attribute.&lt;/p&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu144" xml:space="preserve">
<source xml:lang="en">If you're referring to a local resource on the same server, you can
use relative paths:</source>
<seg-source><mrk mid="0" mtype="seg">If you're referring to a local resource on the same server, you can</mrk>
<mrk mid="1" mtype="seg">use relative paths:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If you're referring to a local resource on the same server, you can</mrk>
<mrk mid="1" mtype="seg">use relative paths:</mrk></target>
</trans-unit>
<trans-unit id="tu145" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>See my [About](/about/) page for details.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>See my [About](/about/) page for details.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>See my [About](/about/) page for details.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu146" xml:space="preserve">
<source xml:lang="en">Reference-style links use a second set of square brackets, inside
which you place a label of your choosing to identify the link:</source>
<seg-source><mrk mid="0" mtype="seg">Reference-style links use a second set of square brackets, inside</mrk>
<mrk mid="1" mtype="seg">which you place a label of your choosing to identify the link:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reference-style links use a second set of square brackets, inside</mrk>
<mrk mid="1" mtype="seg">which you place a label of your choosing to identify the link:</mrk></target>
</trans-unit>
<trans-unit id="tu147" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example][id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example][id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example][id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu148" xml:space="preserve">
<source xml:lang="en">You can optionally use a space to separate the sets of brackets:</source>
<seg-source><mrk mid="0" mtype="seg">You can optionally use a space to separate the sets of brackets:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can optionally use a space to separate the sets of brackets:</mrk></target>
</trans-unit>
<trans-unit id="tu149" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example] [id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example] [id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>This is [an example] [id] reference-style link.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu150" xml:space="preserve">
<source xml:lang="en">Then, anywhere in the document, you define your link label like this,
on a line by itself:</source>
<seg-source><mrk mid="0" mtype="seg">Then, anywhere in the document, you define your link label like this,</mrk>
<mrk mid="1" mtype="seg">on a line by itself:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Then, anywhere in the document, you define your link label like this,</mrk>
<mrk mid="1" mtype="seg">on a line by itself:</mrk></target>
</trans-unit>
<trans-unit id="tu151" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu152" xml:space="preserve">
<source xml:lang="en">That is:</source>
<seg-source><mrk mid="0" mtype="seg">That is:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">That is:</mrk></target>
</trans-unit>
<trans-unit id="tu153" xml:space="preserve">
<source xml:lang="en">Square brackets containing the link identifier (optionally
indented from the left margin using up to three spaces);</source>
<seg-source><mrk mid="0" mtype="seg">Square brackets containing the link identifier (optionally</mrk>
<mrk mid="1" mtype="seg">indented from the left margin using up to three spaces);</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Square brackets containing the link identifier (optionally</mrk>
<mrk mid="1" mtype="seg">indented from the left margin using up to three spaces);</mrk></target>
</trans-unit>
<trans-unit id="tu154" xml:space="preserve">
<source xml:lang="en">followed by a colon;</source>
<seg-source><mrk mid="0" mtype="seg">followed by a colon;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">followed by a colon;</mrk></target>
</trans-unit>
<trans-unit id="tu155" xml:space="preserve">
<source xml:lang="en">followed by one or more spaces (or tabs);</source>
<seg-source><mrk mid="0" mtype="seg">followed by one or more spaces (or tabs);</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">followed by one or more spaces (or tabs);</mrk></target>
</trans-unit>
<trans-unit id="tu156" xml:space="preserve">
<source xml:lang="en">followed by the URL for the link;</source>
<seg-source><mrk mid="0" mtype="seg">followed by the URL for the link;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">followed by the URL for the link;</mrk></target>
</trans-unit>
<trans-unit id="tu157" xml:space="preserve">
<source xml:lang="en">optionally followed by a title attribute for the link, enclosed
in double or single quotes.</source>
<seg-source><mrk mid="0" mtype="seg">optionally followed by a title attribute for the link, enclosed</mrk>
<mrk mid="1" mtype="seg">in double or single quotes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">optionally followed by a title attribute for the link, enclosed</mrk>
<mrk mid="1" mtype="seg">in double or single quotes.</mrk></target>
</trans-unit>
<trans-unit id="tu158" xml:space="preserve">
<source xml:lang="en">The link URL may, optionally, be surrounded by angle brackets:</source>
<seg-source><mrk mid="0" mtype="seg">The link URL may, optionally, be surrounded by angle brackets:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The link URL may, optionally, be surrounded by angle brackets:</mrk></target>
</trans-unit>
<trans-unit id="tu159" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: &lt;http://example.com/&gt;  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: &lt;http://example.com/&gt;  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: &lt;http://example.com/&gt;  "Optional Title Here"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu160" xml:space="preserve">
<source xml:lang="en">You can put the title attribute on the next line and use extra spaces
or tabs for padding, which tends to look better with longer URLs:</source>
<seg-source><mrk mid="0" mtype="seg">You can put the title attribute on the next line and use extra spaces</mrk>
<mrk mid="1" mtype="seg">or tabs for padding, which tends to look better with longer URLs:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can put the title attribute on the next line and use extra spaces</mrk>
<mrk mid="1" mtype="seg">or tabs for padding, which tends to look better with longer URLs:</mrk></target>
</trans-unit>
<trans-unit id="tu161" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/longish/path/to/resource/here<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>"Optional Title Here"<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/longish/path/to/resource/here<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>"Optional Title Here"<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: http://example.com/longish/path/to/resource/here<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>"Optional Title Here"<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu162" xml:space="preserve">
<source xml:lang="en">Link definitions are only used for creating links during Markdown
processing, and are stripped from your document in the HTML output.</source>
<seg-source><mrk mid="0" mtype="seg">Link definitions are only used for creating links during Markdown</mrk>
<mrk mid="1" mtype="seg">processing, and are stripped from your document in the HTML output.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Link definitions are only used for creating links during Markdown</mrk>
<mrk mid="1" mtype="seg">processing, and are stripped from your document in the HTML output.</mrk></target>
</trans-unit>
<trans-unit id="tu163" xml:space="preserve">
<source xml:lang="en">Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> case sensitive. E.g. these two links:</source>
<seg-source><mrk mid="0" mtype="seg">Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> case sensitive.</mrk><mrk mid="1" mtype="seg"> E.g.</mrk><mrk mid="2" mtype="seg"> these two links:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are <ph id="1" ctype="x-EMPHASIS">*</ph>not<ph id="2" ctype="x-EMPHASIS">*</ph> case sensitive.</mrk><mrk mid="1" mtype="seg"> E.g.</mrk><mrk mid="2" mtype="seg"> these two links:</mrk></target>
</trans-unit>
<trans-unit id="tu164" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][a]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][A]<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][a]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][A]<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][a]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[link text][A]<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu165" xml:space="preserve">
<source xml:lang="en">are equivalent.</source>
<seg-source><mrk mid="0" mtype="seg">are equivalent.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">are equivalent.</mrk></target>
</trans-unit>
<trans-unit id="tu166" xml:space="preserve">
<source xml:lang="en">The <ph id="1" ctype="x-EMPHASIS">*</ph>implicit link name<ph id="2" ctype="x-EMPHASIS">*</ph> shortcut allows you to omit the name of the
link, in which case the link text itself is used as the name.
Just use an empty set of square brackets -- e.g., to link the word
"Google" to the google.com web site, you could simply write:</source>
<seg-source><mrk mid="0" mtype="seg">The <ph id="1" ctype="x-EMPHASIS">*</ph>implicit link name<ph id="2" ctype="x-EMPHASIS">*</ph> shortcut allows you to omit the name of the</mrk>
<mrk mid="1" mtype="seg">link, in which case the link text itself is used as the name.</mrk>
<mrk mid="2" mtype="seg">Just use an empty set of square brackets -- e.g., to link the word</mrk>
<mrk mid="3" mtype="seg">"Google" to the google.com web site, you could simply write:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The <ph id="1" ctype="x-EMPHASIS">*</ph>implicit link name<ph id="2" ctype="x-EMPHASIS">*</ph> shortcut allows you to omit the name of the</mrk>
<mrk mid="1" mtype="seg">link, in which case the link text itself is used as the name.</mrk>
<mrk mid="2" mtype="seg">Just use an empty set of square brackets -- e.g., to link the word</mrk>
<mrk mid="3" mtype="seg">"Google" to the google.com web site, you could simply write:</mrk></target>
</trans-unit>
<trans-unit id="tu167" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google][]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google][]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google][]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu168" xml:space="preserve">
<source xml:lang="en">And then define the link:</source>
<seg-source><mrk mid="0" mtype="seg">And then define the link:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">And then define the link:</mrk></target>
</trans-unit>
<trans-unit id="tu169" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google]: http://google.com/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google]: http://google.com/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Google]: http://google.com/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu170" xml:space="preserve">
<source xml:lang="en">Because link names may contain spaces, this shortcut even works for
multiple words in the link text:</source>
<seg-source><mrk mid="0" mtype="seg">Because link names may contain spaces, this shortcut even works for</mrk>
<mrk mid="1" mtype="seg">multiple words in the link text:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Because link names may contain spaces, this shortcut even works for</mrk>
<mrk mid="1" mtype="seg">multiple words in the link text:</mrk></target>
</trans-unit>
<trans-unit id="tu171" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Visit [Daring Fireball][] for more information.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Visit [Daring Fireball][] for more information.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Visit [Daring Fireball][] for more information.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu172" xml:space="preserve">
<source xml:lang="en">And then define the link:</source>
<seg-source><mrk mid="0" mtype="seg">And then define the link:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">And then define the link:</mrk></target>
</trans-unit>
<trans-unit id="tu173" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Daring Fireball]: http://daringfireball.net/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Daring Fireball]: http://daringfireball.net/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Daring Fireball]: http://daringfireball.net/<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu174" xml:space="preserve">
<source xml:lang="en">Link definitions can be placed anywhere in your Markdown document. I
tend to put them immediately after each paragraph in which they're
used, but if you want, you can put them all at the end of your
document, sort of like footnotes.</source>
<seg-source><mrk mid="0" mtype="seg">Link definitions can be placed anywhere in your Markdown document.</mrk><mrk mid="1" mtype="seg"> I</mrk>
<mrk mid="2" mtype="seg">tend to put them immediately after each paragraph in which they're</mrk>
<mrk mid="3" mtype="seg">used, but if you want, you can put them all at the end of your</mrk>
<mrk mid="4" mtype="seg">document, sort of like footnotes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Link definitions can be placed anywhere in your Markdown document.</mrk><mrk mid="1" mtype="seg"> I</mrk>
<mrk mid="2" mtype="seg">tend to put them immediately after each paragraph in which they're</mrk>
<mrk mid="3" mtype="seg">used, but if you want, you can put them all at the end of your</mrk>
<mrk mid="4" mtype="seg">document, sort of like footnotes.</mrk></target>
</trans-unit>
<trans-unit id="tu175" xml:space="preserve">
<source xml:lang="en">Here's an example of reference links in action:</source>
<seg-source><mrk mid="0" mtype="seg">Here's an example of reference links in action:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Here's an example of reference links in action:</mrk></target>
</trans-unit>
<trans-unit id="tu176" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google] [1] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo] [2] or [MSN] [3].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[1]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[2]: http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[3]: http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google] [1] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo] [2] or [MSN] [3].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[1]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[2]: http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[3]: http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google] [1] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo] [2] or [MSN] [3].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[1]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[2]: http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[3]: http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu177" xml:space="preserve">
<source xml:lang="en">Using the implicit link name shortcut, you could instead write:</source>
<seg-source><mrk mid="0" mtype="seg">Using the implicit link name shortcut, you could instead write:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using the implicit link name shortcut, you could instead write:</mrk></target>
</trans-unit>
<trans-unit id="tu178" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google][] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo][] or [MSN][].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[google]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[yahoo]:  http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[msn]:    http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google][] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo][] or [MSN][].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[google]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[yahoo]:  http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[msn]:    http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google][] than from<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>[Yahoo][] or [MSN][].<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>[google]: http://google.com/        "Google"<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>[yahoo]:  http://search.yahoo.com/  "Yahoo Search"<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[msn]:    http://search.msn.com/    "MSN Search"<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu179" xml:space="preserve">
<source xml:lang="en">Both of the above examples will produce the following HTML output:</source>
<seg-source><mrk mid="0" mtype="seg">Both of the above examples will produce the following HTML output:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Both of the above examples will produce the following HTML output:</mrk></target>
</trans-unit>
<trans-unit id="tu180" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;I get 10 times more traffic from &lt;a href="http://google.com/"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>title="Google"&gt;Google&lt;/a&gt; than from<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://search.yahoo.com/" title="Yahoo Search"&gt;Yahoo&lt;/a&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>or &lt;a href="http://search.msn.com/" title="MSN Search"&gt;MSN&lt;/a&gt;.&lt;/p&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;I get 10 times more traffic from &lt;a href="http://google.com/"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>title="Google"&gt;Google&lt;/a&gt; than from<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://search.yahoo.com/" title="Yahoo Search"&gt;Yahoo&lt;/a&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>or &lt;a href="http://search.msn.com/" title="MSN Search"&gt;MSN&lt;/a&gt;.&lt;/p&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;I get 10 times more traffic from &lt;a href="http://google.com/"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>title="Google"&gt;Google&lt;/a&gt; than from<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://search.yahoo.com/" title="Yahoo Search"&gt;Yahoo&lt;/a&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>or &lt;a href="http://search.msn.com/" title="MSN Search"&gt;MSN&lt;/a&gt;.&lt;/p&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu181" xml:space="preserve">
<source xml:lang="en">For comparison, here is the same paragraph written using
Markdown's inline link style:</source>
<seg-source><mrk mid="0" mtype="seg">For comparison, here is the same paragraph written using</mrk>
<mrk mid="1" mtype="seg">Markdown's inline link style:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For comparison, here is the same paragraph written using</mrk>
<mrk mid="1" mtype="seg">Markdown's inline link style:</mrk></target>
</trans-unit>
<trans-unit id="tu182" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google](http://google.com/ "Google")<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[MSN](http://search.msn.com/ "MSN Search").<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google](http://google.com/ "Google")<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[MSN](http://search.msn.com/ "MSN Search").<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>I get 10 times more traffic from [Google](http://google.com/ "Google")<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>[MSN](http://search.msn.com/ "MSN Search").<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu183" xml:space="preserve">
<source xml:lang="en">The point of reference-style links is not that they're easier to
write. The point is that with reference-style links, your document
source is vastly more readable. Compare the above examples: using
reference-style links, the paragraph itself is only 81 characters
long; with inline-style links, it's 176 characters; and as raw HTML,
it's 234 characters. In the raw HTML, there's more markup than there
is text.</source>
<seg-source><mrk mid="0" mtype="seg">The point of reference-style links is not that they're easier to</mrk>
<mrk mid="1" mtype="seg">write.</mrk><mrk mid="2" mtype="seg"> The point is that with reference-style links, your document</mrk>
<mrk mid="3" mtype="seg">source is vastly more readable.</mrk><mrk mid="4" mtype="seg"> Compare the above examples: using</mrk>
<mrk mid="5" mtype="seg">reference-style links, the paragraph itself is only 81 characters</mrk>
<mrk mid="6" mtype="seg">long; with inline-style links, it's 176 characters; and as raw HTML,</mrk>
<mrk mid="7" mtype="seg">it's 234 characters.</mrk><mrk mid="8" mtype="seg"> In the raw HTML, there's more markup than there</mrk>
<mrk mid="9" mtype="seg">is text.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The point of reference-style links is not that they're easier to</mrk>
<mrk mid="1" mtype="seg">write.</mrk><mrk mid="2" mtype="seg"> The point is that with reference-style links, your document</mrk>
<mrk mid="3" mtype="seg">source is vastly more readable.</mrk><mrk mid="4" mtype="seg"> Compare the above examples: using</mrk>
<mrk mid="5" mtype="seg">reference-style links, the paragraph itself is only 81 characters</mrk>
<mrk mid="6" mtype="seg">long; with inline-style links, it's 176 characters; and as raw HTML,</mrk>
<mrk mid="7" mtype="seg">it's 234 characters.</mrk><mrk mid="8" mtype="seg"> In the raw HTML, there's more markup than there</mrk>
<mrk mid="9" mtype="seg">is text.</mrk></target>
</trans-unit>
<trans-unit id="tu184" xml:space="preserve">
<source xml:lang="en">With Markdown's reference-style links, a source document much more
closely resembles the final output, as rendered in a browser. By
allowing you to move the markup-related metadata out of the paragraph,
you can add links without interrupting the narrative flow of your
prose.</source>
<seg-source><mrk mid="0" mtype="seg">With Markdown's reference-style links, a source document much more</mrk>
<mrk mid="1" mtype="seg">closely resembles the final output, as rendered in a browser.</mrk><mrk mid="2" mtype="seg"> By</mrk>
<mrk mid="3" mtype="seg">allowing you to move the markup-related metadata out of the paragraph,</mrk>
<mrk mid="4" mtype="seg">you can add links without interrupting the narrative flow of your</mrk>
<mrk mid="5" mtype="seg">prose.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">With Markdown's reference-style links, a source document much more</mrk>
<mrk mid="1" mtype="seg">closely resembles the final output, as rendered in a browser.</mrk><mrk mid="2" mtype="seg"> By</mrk>
<mrk mid="3" mtype="seg">allowing you to move the markup-related metadata out of the paragraph,</mrk>
<mrk mid="4" mtype="seg">you can add links without interrupting the narrative flow of your</mrk>
<mrk mid="5" mtype="seg">prose.</mrk></target>
</trans-unit>
<group id="sd1_ssf15" resname="sub-filter:sd1">
<trans-unit id="sd1_sf15_tu1" resname="em-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Emphasis</source>
<seg-source><mrk mid="0" mtype="seg">Emphasis</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Emphasis</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu185" xml:space="preserve">
<source xml:lang="en">Markdown treats asterisks (<ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph>) and underscores (<ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph>) as indicators of
emphasis. Text wrapped with one <ph id="5" ctype="x-CODE">`</ph>*<ph id="6" ctype="x-CODE">`</ph> or <ph id="7" ctype="x-CODE">`</ph>_<ph id="8" ctype="x-CODE">`</ph> will be wrapped with an
HTML <ph id="9" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="10" ctype="x-CODE">`</ph> tag; double <ph id="11" ctype="x-CODE">`</ph>*<ph id="12" ctype="x-CODE">`</ph>'s or <ph id="13" ctype="x-CODE">`</ph>_<ph id="14" ctype="x-CODE">`</ph>'s will be wrapped with an HTML
<ph id="15" ctype="x-CODE">`</ph>&lt;strong&gt;<ph id="16" ctype="x-CODE">`</ph> tag. E.g., this input:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown treats asterisks (<ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph>) and underscores (<ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph>) as indicators of</mrk>
<mrk mid="1" mtype="seg">emphasis.</mrk><mrk mid="2" mtype="seg"> Text wrapped with one <ph id="5" ctype="x-CODE">`</ph>*<ph id="6" ctype="x-CODE">`</ph> or <ph id="7" ctype="x-CODE">`</ph>_<ph id="8" ctype="x-CODE">`</ph> will be wrapped with an</mrk>
<mrk mid="3" mtype="seg">HTML <ph id="9" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="10" ctype="x-CODE">`</ph> tag; double <ph id="11" ctype="x-CODE">`</ph>*<ph id="12" ctype="x-CODE">`</ph>'s or <ph id="13" ctype="x-CODE">`</ph>_<ph id="14" ctype="x-CODE">`</ph>'s will be wrapped with an HTML</mrk>
<mrk mid="4" mtype="seg"><ph id="15" ctype="x-CODE">`</ph>&lt;strong&gt;<ph id="16" ctype="x-CODE">`</ph> tag.</mrk><mrk mid="5" mtype="seg"> E.g., this input:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown treats asterisks (<ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph>) and underscores (<ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph>) as indicators of</mrk>
<mrk mid="1" mtype="seg">emphasis.</mrk><mrk mid="2" mtype="seg"> Text wrapped with one <ph id="5" ctype="x-CODE">`</ph>*<ph id="6" ctype="x-CODE">`</ph> or <ph id="7" ctype="x-CODE">`</ph>_<ph id="8" ctype="x-CODE">`</ph> will be wrapped with an</mrk>
<mrk mid="3" mtype="seg">HTML <ph id="9" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="10" ctype="x-CODE">`</ph> tag; double <ph id="11" ctype="x-CODE">`</ph>*<ph id="12" ctype="x-CODE">`</ph>'s or <ph id="13" ctype="x-CODE">`</ph>_<ph id="14" ctype="x-CODE">`</ph>'s will be wrapped with an HTML</mrk>
<mrk mid="4" mtype="seg"><ph id="15" ctype="x-CODE">`</ph>&lt;strong&gt;<ph id="16" ctype="x-CODE">`</ph> tag.</mrk><mrk mid="5" mtype="seg"> E.g., this input:</mrk></target>
</trans-unit>
<trans-unit id="tu186" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*single asterisks*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>_single underscores_<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>**double asterisks**<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>__double underscores__<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*single asterisks*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>_single underscores_<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>**double asterisks**<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>__double underscores__<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>*single asterisks*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>_single underscores_<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>**double asterisks**<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>__double underscores__<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu187" xml:space="preserve">
<source xml:lang="en">will produce:</source>
<seg-source><mrk mid="0" mtype="seg">will produce:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will produce:</mrk></target>
</trans-unit>
<trans-unit id="tu188" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single asterisks&lt;/em&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single underscores&lt;/em&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double asterisks&lt;/strong&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double underscores&lt;/strong&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single asterisks&lt;/em&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single underscores&lt;/em&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double asterisks&lt;/strong&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double underscores&lt;/strong&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single asterisks&lt;/em&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;em&gt;single underscores&lt;/em&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double asterisks&lt;/strong&gt;<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;strong&gt;double underscores&lt;/strong&gt;<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu189" xml:space="preserve">
<source xml:lang="en">You can use whichever style you prefer; the lone restriction is that
the same character must be used to open and close an emphasis span.</source>
<seg-source><mrk mid="0" mtype="seg">You can use whichever style you prefer; the lone restriction is that</mrk>
<mrk mid="1" mtype="seg">the same character must be used to open and close an emphasis span.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can use whichever style you prefer; the lone restriction is that</mrk>
<mrk mid="1" mtype="seg">the same character must be used to open and close an emphasis span.</mrk></target>
</trans-unit>
<trans-unit id="tu190" xml:space="preserve">
<source xml:lang="en">Emphasis can be used in the middle of a word:</source>
<seg-source><mrk mid="0" mtype="seg">Emphasis can be used in the middle of a word:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Emphasis can be used in the middle of a word:</mrk></target>
</trans-unit>
<trans-unit id="tu191" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>un*fucking*believable<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>un*fucking*believable<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>un*fucking*believable<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu192" xml:space="preserve">
<source xml:lang="en">But if you surround an <ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph> or <ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph> with spaces, it'll be treated as a
literal asterisk or underscore.</source>
<seg-source><mrk mid="0" mtype="seg">But if you surround an <ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph> or <ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph> with spaces, it'll be treated as a</mrk>
<mrk mid="1" mtype="seg">literal asterisk or underscore.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">But if you surround an <ph id="1" ctype="x-CODE">`</ph>*<ph id="2" ctype="x-CODE">`</ph> or <ph id="3" ctype="x-CODE">`</ph>_<ph id="4" ctype="x-CODE">`</ph> with spaces, it'll be treated as a</mrk>
<mrk mid="1" mtype="seg">literal asterisk or underscore.</mrk></target>
</trans-unit>
<trans-unit id="tu193" xml:space="preserve">
<source xml:lang="en">To produce a literal asterisk or underscore at a position where it
would otherwise be used as an emphasis delimiter, you can backslash
escape it:</source>
<seg-source><mrk mid="0" mtype="seg">To produce a literal asterisk or underscore at a position where it</mrk>
<mrk mid="1" mtype="seg">would otherwise be used as an emphasis delimiter, you can backslash</mrk>
<mrk mid="2" mtype="seg">escape it:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To produce a literal asterisk or underscore at a position where it</mrk>
<mrk mid="1" mtype="seg">would otherwise be used as an emphasis delimiter, you can backslash</mrk>
<mrk mid="2" mtype="seg">escape it:</mrk></target>
</trans-unit>
<trans-unit id="tu194" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*this text is surrounded by literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*this text is surrounded by literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*this text is surrounded by literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<group id="sd1_ssf16" resname="sub-filter:sd1">
<trans-unit id="sd1_sf16_tu1" resname="code-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Code</source>
<seg-source><mrk mid="0" mtype="seg">Code</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Code</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu195" xml:space="preserve">
<source xml:lang="en">To indicate a span of code, wrap it with backtick quotes (<ph id="1" ctype="x-CODE">``</ph> ` <ph id="2" ctype="x-CODE">``</ph>).
Unlike a pre-formatted code block, a code span indicates code within a
normal paragraph. For example:</source>
<seg-source><mrk mid="0" mtype="seg">To indicate a span of code, wrap it with backtick quotes (<ph id="1" ctype="x-CODE">``</ph> ` <ph id="2" ctype="x-CODE">``</ph>).</mrk>
<mrk mid="1" mtype="seg">Unlike a pre-formatted code block, a code span indicates code within a</mrk>
<mrk mid="2" mtype="seg">normal paragraph.</mrk><mrk mid="3" mtype="seg"> For example:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To indicate a span of code, wrap it with backtick quotes (<ph id="1" ctype="x-CODE">``</ph> ` <ph id="2" ctype="x-CODE">``</ph>).</mrk>
<mrk mid="1" mtype="seg">Unlike a pre-formatted code block, a code span indicates code within a</mrk>
<mrk mid="2" mtype="seg">normal paragraph.</mrk><mrk mid="3" mtype="seg"> For example:</mrk></target>
</trans-unit>
<trans-unit id="tu196" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Use the `printf()` function.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Use the `printf()` function.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Use the `printf()` function.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu197" xml:space="preserve">
<source xml:lang="en">will produce:</source>
<seg-source><mrk mid="0" mtype="seg">will produce:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will produce:</mrk></target>
</trans-unit>
<trans-unit id="tu198" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu199" xml:space="preserve">
<source xml:lang="en">To include a literal backtick character within a code span, you can use
multiple backticks as the opening and closing delimiters:</source>
<seg-source><mrk mid="0" mtype="seg">To include a literal backtick character within a code span, you can use</mrk>
<mrk mid="1" mtype="seg">multiple backticks as the opening and closing delimiters:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To include a literal backtick character within a code span, you can use</mrk>
<mrk mid="1" mtype="seg">multiple backticks as the opening and closing delimiters:</mrk></target>
</trans-unit>
<trans-unit id="tu200" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>``There is a literal backtick (`) here.``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>``There is a literal backtick (`) here.``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>``There is a literal backtick (`) here.``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu201" xml:space="preserve">
<source xml:lang="en">which will produce this:</source>
<seg-source><mrk mid="0" mtype="seg">which will produce this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">which will produce this:</mrk></target>
</trans-unit>
<trans-unit id="tu202" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu203" xml:space="preserve">
<source xml:lang="en">The backtick delimiters surrounding a code span may include spaces --
one after the opening, one before the closing. This allows you to place
literal backtick characters at the beginning or end of a code span:</source>
<seg-source><mrk mid="0" mtype="seg">The backtick delimiters surrounding a code span may include spaces --</mrk>
<mrk mid="1" mtype="seg">one after the opening, one before the closing.</mrk><mrk mid="2" mtype="seg"> This allows you to place</mrk>
<mrk mid="3" mtype="seg">literal backtick characters at the beginning or end of a code span:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The backtick delimiters surrounding a code span may include spaces --</mrk>
<mrk mid="1" mtype="seg">one after the opening, one before the closing.</mrk><mrk mid="2" mtype="seg"> This allows you to place</mrk>
<mrk mid="3" mtype="seg">literal backtick characters at the beginning or end of a code span:</mrk></target>
</trans-unit>
<trans-unit id="tu204" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>A single backtick in a code span: `` ` ``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>A backtick-delimited string in a code span: `` `foo` ``<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>A single backtick in a code span: `` ` ``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>A backtick-delimited string in a code span: `` `foo` ``<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>A single backtick in a code span: `` ` ``<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>A backtick-delimited string in a code span: `` `foo` ``<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu205" xml:space="preserve">
<source xml:lang="en">will produce:</source>
<seg-source><mrk mid="0" mtype="seg">will produce:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">will produce:</mrk></target>
</trans-unit>
<trans-unit id="tu206" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu207" xml:space="preserve">
<source xml:lang="en">With a code span, ampersands and angle brackets are encoded as HTML
entities automatically, which makes it easy to include example HTML
tags. Markdown will turn this:</source>
<seg-source><mrk mid="0" mtype="seg">With a code span, ampersands and angle brackets are encoded as HTML</mrk>
<mrk mid="1" mtype="seg">entities automatically, which makes it easy to include example HTML</mrk>
<mrk mid="2" mtype="seg">tags.</mrk><mrk mid="3" mtype="seg"> Markdown will turn this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">With a code span, ampersands and angle brackets are encoded as HTML</mrk>
<mrk mid="1" mtype="seg">entities automatically, which makes it easy to include example HTML</mrk>
<mrk mid="2" mtype="seg">tags.</mrk><mrk mid="3" mtype="seg"> Markdown will turn this:</mrk></target>
</trans-unit>
<trans-unit id="tu208" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Please don't use any `&lt;blink&gt;` tags.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Please don't use any `&lt;blink&gt;` tags.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>Please don't use any `&lt;blink&gt;` tags.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu209" xml:space="preserve">
<source xml:lang="en">into:</source>
<seg-source><mrk mid="0" mtype="seg">into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">into:</mrk></target>
</trans-unit>
<trans-unit id="tu210" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Please don't use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Please don't use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;Please don't use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu211" xml:space="preserve">
<source xml:lang="en">You can write this:</source>
<seg-source><mrk mid="0" mtype="seg">You can write this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You can write this:</mrk></target>
</trans-unit>
<trans-unit id="tu212" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu213" xml:space="preserve">
<source xml:lang="en">to produce:</source>
<seg-source><mrk mid="0" mtype="seg">to produce:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">to produce:</mrk></target>
</trans-unit>
<trans-unit id="tu214" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<group id="sd1_ssf17" resname="sub-filter:sd1">
<trans-unit id="sd1_sf17_tu1" resname="img-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Images</source>
<seg-source><mrk mid="0" mtype="seg">Images</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Images</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu215" xml:space="preserve">
<source xml:lang="en">Admittedly, it's fairly difficult to devise a "natural" syntax for
placing images into a plain text document format.</source>
<seg-source><mrk mid="0" mtype="seg">Admittedly, it's fairly difficult to devise a "natural" syntax for</mrk>
<mrk mid="1" mtype="seg">placing images into a plain text document format.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Admittedly, it's fairly difficult to devise a "natural" syntax for</mrk>
<mrk mid="1" mtype="seg">placing images into a plain text document format.</mrk></target>
</trans-unit>
<trans-unit id="tu216" xml:space="preserve">
<source xml:lang="en">Markdown uses an image syntax that is intended to resemble the syntax
for links, allowing for two styles: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</source>
<seg-source><mrk mid="0" mtype="seg">Markdown uses an image syntax that is intended to resemble the syntax</mrk>
<mrk mid="1" mtype="seg">for links, allowing for two styles: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown uses an image syntax that is intended to resemble the syntax</mrk>
<mrk mid="1" mtype="seg">for links, allowing for two styles: <ph id="1" ctype="x-EMPHASIS">*</ph>inline<ph id="2" ctype="x-EMPHASIS">*</ph> and <ph id="3" ctype="x-EMPHASIS">*</ph>reference<ph id="4" ctype="x-EMPHASIS">*</ph>.</mrk></target>
</trans-unit>
<trans-unit id="tu217" xml:space="preserve">
<source xml:lang="en">Inline image syntax looks like this:</source>
<seg-source><mrk mid="0" mtype="seg">Inline image syntax looks like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Inline image syntax looks like this:</mrk></target>
</trans-unit>
<trans-unit id="tu218" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg)<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg "Optional title")<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg)<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg "Optional title")<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg)<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph><ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text](/path/to/img.jpg "Optional title")<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu219" xml:space="preserve">
<source xml:lang="en">That is:</source>
<seg-source><mrk mid="0" mtype="seg">That is:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">That is:</mrk></target>
</trans-unit>
<trans-unit id="tu220" xml:space="preserve">
<source xml:lang="en">An exclamation mark: <ph id="1" ctype="x-CODE">`</ph>!<ph id="2" ctype="x-CODE">`</ph>;</source>
<seg-source><mrk mid="0" mtype="seg">An exclamation mark: <ph id="1" ctype="x-CODE">`</ph>!<ph id="2" ctype="x-CODE">`</ph>;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An exclamation mark: <ph id="1" ctype="x-CODE">`</ph>!<ph id="2" ctype="x-CODE">`</ph>;</mrk></target>
</trans-unit>
<trans-unit id="tu221" xml:space="preserve">
<source xml:lang="en">followed by a set of square brackets, containing the <ph id="1" ctype="x-CODE">`</ph>alt<ph id="2" ctype="x-CODE">`</ph>
attribute text for the image;</source>
<seg-source><mrk mid="0" mtype="seg">followed by a set of square brackets, containing the <ph id="1" ctype="x-CODE">`</ph>alt<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">attribute text for the image;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">followed by a set of square brackets, containing the <ph id="1" ctype="x-CODE">`</ph>alt<ph id="2" ctype="x-CODE">`</ph></mrk>
<mrk mid="1" mtype="seg">attribute text for the image;</mrk></target>
</trans-unit>
<trans-unit id="tu222" xml:space="preserve">
<source xml:lang="en">followed by a set of parentheses, containing the URL or path to
the image, and an optional <ph id="1" ctype="x-CODE">`</ph>title<ph id="2" ctype="x-CODE">`</ph> attribute enclosed in double
or single quotes.</source>
<seg-source><mrk mid="0" mtype="seg">followed by a set of parentheses, containing the URL or path to</mrk>
<mrk mid="1" mtype="seg">the image, and an optional <ph id="1" ctype="x-CODE">`</ph>title<ph id="2" ctype="x-CODE">`</ph> attribute enclosed in double</mrk>
<mrk mid="2" mtype="seg">or single quotes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">followed by a set of parentheses, containing the URL or path to</mrk>
<mrk mid="1" mtype="seg">the image, and an optional <ph id="1" ctype="x-CODE">`</ph>title<ph id="2" ctype="x-CODE">`</ph> attribute enclosed in double</mrk>
<mrk mid="2" mtype="seg">or single quotes.</mrk></target>
</trans-unit>
<trans-unit id="tu223" xml:space="preserve">
<source xml:lang="en">Reference-style image syntax looks like this:</source>
<seg-source><mrk mid="0" mtype="seg">Reference-style image syntax looks like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reference-style image syntax looks like this:</mrk></target>
</trans-unit>
<trans-unit id="tu224" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text][id]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text][id]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>![Alt text][id]<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu225" xml:space="preserve">
<source xml:lang="en">Where "id" is the name of a defined image reference. Image references
are defined using syntax identical to link references:</source>
<seg-source><mrk mid="0" mtype="seg">Where "id" is the name of a defined image reference.</mrk><mrk mid="1" mtype="seg"> Image references</mrk>
<mrk mid="2" mtype="seg">are defined using syntax identical to link references:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Where "id" is the name of a defined image reference.</mrk><mrk mid="1" mtype="seg"> Image references</mrk>
<mrk mid="2" mtype="seg">are defined using syntax identical to link references:</mrk></target>
</trans-unit>
<trans-unit id="tu226" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: url/to/image  "Optional title attribute"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: url/to/image  "Optional title attribute"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>[id]: url/to/image  "Optional title attribute"<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu227" xml:space="preserve">
<source xml:lang="en">As of this writing, Markdown has no syntax for specifying the
dimensions of an image; if this is important to you, you can simply
use regular HTML <ph id="1" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="2" ctype="x-CODE">`</ph> tags.</source>
<seg-source><mrk mid="0" mtype="seg">As of this writing, Markdown has no syntax for specifying the</mrk>
<mrk mid="1" mtype="seg">dimensions of an image; if this is important to you, you can simply</mrk>
<mrk mid="2" mtype="seg">use regular HTML <ph id="1" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="2" ctype="x-CODE">`</ph> tags.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">As of this writing, Markdown has no syntax for specifying the</mrk>
<mrk mid="1" mtype="seg">dimensions of an image; if this is important to you, you can simply</mrk>
<mrk mid="2" mtype="seg">use regular HTML <ph id="1" ctype="x-CODE">`</ph>&lt;img&gt;<ph id="2" ctype="x-CODE">`</ph> tags.</mrk></target>
</trans-unit>
<group id="sd1_ssf18" resname="sub-filter:sd1">
<trans-unit id="sd1_sf18_tu1" resname="misc-id" restype="x-h2" xml:space="preserve">
<source xml:lang="en">Miscellaneous</source>
<seg-source><mrk mid="0" mtype="seg">Miscellaneous</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Miscellaneous</mrk></target>
</trans-unit>
</group>
<group id="sd1_ssf19" resname="sub-filter:sd1">
<trans-unit id="sd1_sf19_tu1" resname="autolink-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Automatic Links</source>
<seg-source><mrk mid="0" mtype="seg">Automatic Links</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Automatic Links</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu228" xml:space="preserve">
<source xml:lang="en">Markdown supports a shortcut style for creating "automatic" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown supports a shortcut style for creating "automatic" links for URLs and email addresses: simply surround the URL or email address with angle brackets.</mrk><mrk mid="1" mtype="seg"> What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown supports a shortcut style for creating "automatic" links for URLs and email addresses: simply surround the URL or email address with angle brackets.</mrk><mrk mid="1" mtype="seg"> What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</mrk></target>
</trans-unit>
<trans-unit id="tu229" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;http://example.com/&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;http://example.com/&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;http://example.com/&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu230" xml:space="preserve">
<source xml:lang="en">Markdown will turn this into:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown will turn this into:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown will turn this into:</mrk></target>
</trans-unit>
<trans-unit id="tu231" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://example.com/"&gt;http://example.com/&lt;/a&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://example.com/"&gt;http://example.com/&lt;/a&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="http://example.com/"&gt;http://example.com/&lt;/a&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu232" xml:space="preserve">
<source xml:lang="en">Automatic links for email addresses work similarly, except that
Markdown will also perform a bit of randomized decimal and hex
entity-encoding to help obscure your address from address-harvesting
spambots. For example, Markdown will turn this:</source>
<seg-source><mrk mid="0" mtype="seg">Automatic links for email addresses work similarly, except that</mrk>
<mrk mid="1" mtype="seg">Markdown will also perform a bit of randomized decimal and hex</mrk>
<mrk mid="2" mtype="seg">entity-encoding to help obscure your address from address-harvesting</mrk>
<mrk mid="3" mtype="seg">spambots.</mrk><mrk mid="4" mtype="seg"> For example, Markdown will turn this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Automatic links for email addresses work similarly, except that</mrk>
<mrk mid="1" mtype="seg">Markdown will also perform a bit of randomized decimal and hex</mrk>
<mrk mid="2" mtype="seg">entity-encoding to help obscure your address from address-harvesting</mrk>
<mrk mid="3" mtype="seg">spambots.</mrk><mrk mid="4" mtype="seg"> For example, Markdown will turn this:</mrk></target>
</trans-unit>
<trans-unit id="tu233" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;address@example.com&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;address@example.com&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;address@example.com&gt;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu234" xml:space="preserve">
<source xml:lang="en">into something like this:</source>
<seg-source><mrk mid="0" mtype="seg">into something like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">into something like this:</mrk></target>
</trans-unit>
<trans-unit id="tu235" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu236" xml:space="preserve">
<source xml:lang="en">which will render in a browser as a clickable link to "address@example.com".</source>
<seg-source><mrk mid="0" mtype="seg">which will render in a browser as a clickable link to "address@example.com".</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">which will render in a browser as a clickable link to "address@example.com".</mrk></target>
</trans-unit>
<trans-unit id="tu237" xml:space="preserve">
<source xml:lang="en">(This sort of entity-encoding trick will indeed fool many, if not
most, address-harvesting bots, but it definitely won't fool all of
them. It's better than nothing, but an address published in this way
will probably eventually start receiving spam.)</source>
<seg-source><mrk mid="0" mtype="seg">(This sort of entity-encoding trick will indeed fool many, if not</mrk>
<mrk mid="1" mtype="seg">most, address-harvesting bots, but it definitely won't fool all of</mrk>
<mrk mid="2" mtype="seg">them.</mrk><mrk mid="3" mtype="seg"> It's better than nothing, but an address published in this way</mrk>
<mrk mid="4" mtype="seg">will probably eventually start receiving spam.)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">(This sort of entity-encoding trick will indeed fool many, if not</mrk>
<mrk mid="1" mtype="seg">most, address-harvesting bots, but it definitely won't fool all of</mrk>
<mrk mid="2" mtype="seg">them.</mrk><mrk mid="3" mtype="seg"> It's better than nothing, but an address published in this way</mrk>
<mrk mid="4" mtype="seg">will probably eventually start receiving spam.)</mrk></target>
</trans-unit>
<group id="sd1_ssf20" resname="sub-filter:sd1">
<trans-unit id="sd1_sf20_tu1" resname="backslash-id" restype="x-h3" xml:space="preserve">
<source xml:lang="en">Backslash Escapes</source>
<seg-source><mrk mid="0" mtype="seg">Backslash Escapes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Backslash Escapes</mrk></target>
</trans-unit>
</group>
<trans-unit id="tu238" xml:space="preserve">
<source xml:lang="en">Markdown allows you to use backslash escapes to generate literal
characters which would otherwise have special meaning in Markdown's
formatting syntax. For example, if you wanted to surround a word with
literal asterisks (instead of an HTML <ph id="1" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="2" ctype="x-CODE">`</ph> tag), you can backslashes
before the asterisks, like this:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown allows you to use backslash escapes to generate literal</mrk>
<mrk mid="1" mtype="seg">characters which would otherwise have special meaning in Markdown's</mrk>
<mrk mid="2" mtype="seg">formatting syntax.</mrk><mrk mid="3" mtype="seg"> For example, if you wanted to surround a word with</mrk>
<mrk mid="4" mtype="seg">literal asterisks (instead of an HTML <ph id="1" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="2" ctype="x-CODE">`</ph> tag), you can backslashes</mrk>
<mrk mid="5" mtype="seg">before the asterisks, like this:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown allows you to use backslash escapes to generate literal</mrk>
<mrk mid="1" mtype="seg">characters which would otherwise have special meaning in Markdown's</mrk>
<mrk mid="2" mtype="seg">formatting syntax.</mrk><mrk mid="3" mtype="seg"> For example, if you wanted to surround a word with</mrk>
<mrk mid="4" mtype="seg">literal asterisks (instead of an HTML <ph id="1" ctype="x-CODE">`</ph>&lt;em&gt;<ph id="2" ctype="x-CODE">`</ph> tag), you can backslashes</mrk>
<mrk mid="5" mtype="seg">before the asterisks, like this:</mrk></target>
</trans-unit>
<trans-unit id="tu239" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\*literal asterisks\*<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
<trans-unit id="tu240" xml:space="preserve">
<source xml:lang="en">Markdown provides backslash escapes for the following characters:</source>
<seg-source><mrk mid="0" mtype="seg">Markdown provides backslash escapes for the following characters:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Markdown provides backslash escapes for the following characters:</mrk></target>
</trans-unit>
<trans-unit id="tu241" xml:space="preserve">
<source xml:lang="en"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\   backslash<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>`   backtick<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   asterisk<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>_   underscore<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>{}  curly braces<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[]  square brackets<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>()  parentheses<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>#   hash mark<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>+	plus sign<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph>-	minus sign (hyphen)<ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>.   dot<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="23" ctype="x-INDENTED_CODE_BLOCK">    </ph>!   exclamation mark<ph id="24" ctype="x-SOFT_LINE_BREAK">
</ph></source>
<seg-source><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\   backslash<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>`   backtick<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   asterisk<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>_   underscore<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>{}  curly braces<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[]  square brackets<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>()  parentheses<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>#   hash mark<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>+	plus sign<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph>-	minus sign (hyphen)<ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>.</mrk><mrk mid="1" mtype="seg">   dot<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="23" ctype="x-INDENTED_CODE_BLOCK">    </ph>!   exclamation mark<ph id="24" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><ph id="1" ctype="x-INDENTED_CODE_BLOCK">    </ph>\   backslash<ph id="2" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="3" ctype="x-INDENTED_CODE_BLOCK">    </ph>`   backtick<ph id="4" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="5" ctype="x-INDENTED_CODE_BLOCK">    </ph>*   asterisk<ph id="6" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="7" ctype="x-INDENTED_CODE_BLOCK">    </ph>_   underscore<ph id="8" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="9" ctype="x-INDENTED_CODE_BLOCK">    </ph>{}  curly braces<ph id="10" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="11" ctype="x-INDENTED_CODE_BLOCK">    </ph>[]  square brackets<ph id="12" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="13" ctype="x-INDENTED_CODE_BLOCK">    </ph>()  parentheses<ph id="14" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="15" ctype="x-INDENTED_CODE_BLOCK">    </ph>#   hash mark<ph id="16" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="17" ctype="x-INDENTED_CODE_BLOCK">    </ph>+	plus sign<ph id="18" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="19" ctype="x-INDENTED_CODE_BLOCK">    </ph>-	minus sign (hyphen)<ph id="20" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="21" ctype="x-INDENTED_CODE_BLOCK">    </ph>.</mrk><mrk mid="1" mtype="seg">   dot<ph id="22" ctype="x-SOFT_LINE_BREAK">
</ph><ph id="23" ctype="x-INDENTED_CODE_BLOCK">    </ph>!   exclamation mark<ph id="24" ctype="x-SOFT_LINE_BREAK">
</ph></mrk></target>
</trans-unit>
</body>
</file>
</xliff>
