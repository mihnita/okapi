<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="XMLProductionStartWithTheWeb.icml" source-language="en" target-language="fr" datatype="x-application/x-icml+xml" okp:inputEncoding="UTF-8">
<header><tool tool-id="okapi" tool-name="okapi-tests" tool-version="M29" tool-company="okapi"></tool></header>
<body>
<group id="spr1" resname="Stories" restype="x-spread">
<group id="sto1" resname="xhtml2icml_default_story" restype="x-story">
<trans-unit id="xhtml2icml_default_story-1" xml:space="preserve">
<source xml:lang="en">XMLProductionStartWithTheWeb</source>
<seg-source><mrk mid="0" mtype="seg">XMLProductionStartWithTheWeb</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">XMLProductionStartWithTheWeb</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-2" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>by John W. Maxwell, Simon Fraser University (<ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="jmax@sfu.ca" Self="htss-1"&gt;&lt;Content&gt;</bpt>jmax@sfu.ca<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>by John W. Maxwell, Simon Fraser University (<ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="jmax@sfu.ca" Self="htss-1"&gt;&lt;Content&gt;</bpt>jmax@sfu.ca<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>by John W. Maxwell, Simon Fraser University (<ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="jmax@sfu.ca" Self="htss-1"&gt;&lt;Content&gt;</bpt>jmax@sfu.ca<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-3" xml:space="preserve">
<source xml:lang="en">with Meghan MacDonald, Travis Nicholson, Jan Halpape, Sarah Taggart, and Heiko Binder</source>
<seg-source><mrk mid="0" mtype="seg">with Meghan MacDonald, Travis Nicholson, Jan Halpape, Sarah Taggart, and Heiko Binder</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">with Meghan MacDonald, Travis Nicholson, Jan Halpape, Sarah Taggart, and Heiko Binder</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-4" xml:space="preserve">
<source xml:lang="en">May 2009</source>
<seg-source><mrk mid="0" mtype="seg">May 2009</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">May 2009</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-5" xml:space="preserve">
<source xml:lang="en">Check out the Rendered PDF Version, produced by the method described herein.</source>
<seg-source><mrk mid="0" mtype="seg">Check out the Rendered PDF Version, produced by the method described herein.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Check out the Rendered PDF Version, produced by the method described herein.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-6" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Some <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="Slides" Self="htss-3"&gt;&lt;Content&gt;</bpt>Slides<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> from presentations of this material.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Some <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="Slides" Self="htss-3"&gt;&lt;Content&gt;</bpt>Slides<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> from presentations of this material.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Some <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="Slides" Self="htss-3"&gt;&lt;Content&gt;</bpt>Slides<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> from presentations of this material.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-7" xml:space="preserve">
<source xml:lang="en">Draft for JEP</source>
<seg-source><mrk mid="0" mtype="seg">Draft for JEP</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Draft for JEP</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-8" xml:space="preserve">
<source xml:lang="en">Introduction</source>
<seg-source><mrk mid="0" mtype="seg">Introduction</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Introduction</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-9" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>This spring, as part of his now-viral “Six Projects that Could Change Publishing for the Better,” <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[1]" Self="htss-6"&gt;&lt;Content&gt;</bpt>[1]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Michael Tamblyn called for “an XML workflow that doesn’t suck.” At SFU’s Master of Publishing program, we have the beginning of one of those projects. At the least, we have a considered approach and a functional set of tools: something good enough to critique.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>This spring, as part of his now-viral “Six Projects that Could Change Publishing for the Better,” <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[1]" Self="htss-6"&gt;&lt;Content&gt;</bpt>[1]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Michael Tamblyn called for “an XML workflow that doesn’t suck.” At SFU’s Master of Publishing program, we have the beginning of one of those projects.</mrk><mrk mid="1" mtype="seg"> At the least, we have a considered approach and a functional set of tools: something good enough to critique.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>This spring, as part of his now-viral “Six Projects that Could Change Publishing for the Better,” <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[1]" Self="htss-6"&gt;&lt;Content&gt;</bpt>[1]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Michael Tamblyn called for “an XML workflow that doesn’t suck.” At SFU’s Master of Publishing program, we have the beginning of one of those projects.</mrk><mrk mid="1" mtype="seg"> At the least, we have a considered approach and a functional set of tools: something good enough to critique.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-10" xml:space="preserve">
<source xml:lang="en">This is NOT an argument for why you should have an XML workflow. Those exist, as well as excellent arguments for why you might not want one. One of the points Tamblyn made in his coverage of the issue is that XML editorial and production workflows do exist—as SGML, they have done since the 1980s—but that they tend to be technically or operationally complex and require a considerable amount of programmer support.</source>
<seg-source><mrk mid="0" mtype="seg">This is NOT an argument for why you should have an XML workflow.</mrk><mrk mid="1" mtype="seg"> Those exist, as well as excellent arguments for why you might not want one.</mrk><mrk mid="2" mtype="seg"> One of the points Tamblyn made in his coverage of the issue is that XML editorial and production workflows do exist—as SGML, they have done since the 1980s—but that they tend to be technically or operationally complex and require a considerable amount of programmer support.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This is NOT an argument for why you should have an XML workflow.</mrk><mrk mid="1" mtype="seg"> Those exist, as well as excellent arguments for why you might not want one.</mrk><mrk mid="2" mtype="seg"> One of the points Tamblyn made in his coverage of the issue is that XML editorial and production workflows do exist—as SGML, they have done since the 1980s—but that they tend to be technically or operationally complex and require a considerable amount of programmer support.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-11" xml:space="preserve">
<source xml:lang="en">XML Production Workflows</source>
<seg-source><mrk mid="0" mtype="seg">XML Production Workflows</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">XML Production Workflows</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-12" xml:space="preserve">
<source xml:lang="en">O’Reilly, the world’s leading technical publisher, has made books out of SGML and XML for decades. Their famous colophons, which also provide interesting tidbits about the animals that grace their covers, usually give some detail about the toolchains employed to produce the current volume. Here are two of my favourites:</source>
<seg-source><mrk mid="0" mtype="seg">O’Reilly, the world’s leading technical publisher, has made books out of SGML and XML for decades.</mrk><mrk mid="1" mtype="seg"> Their famous colophons, which also provide interesting tidbits about the animals that grace their covers, usually give some detail about the toolchains employed to produce the current volume.</mrk><mrk mid="2" mtype="seg"> Here are two of my favourites:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">O’Reilly, the world’s leading technical publisher, has made books out of SGML and XML for decades.</mrk><mrk mid="1" mtype="seg"> Their famous colophons, which also provide interesting tidbits about the animals that grace their covers, usually give some detail about the toolchains employed to produce the current volume.</mrk><mrk mid="2" mtype="seg"> Here are two of my favourites:</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-13" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The inside layout was designed by Mary Jane Walsh. The text was prepared by Jeffrey Friedl in a hybrid markup of his own design, mixing SGML, raw troff, raw PostScript, and his own markup. A home-grown filter translated the latter to the other, lower-level markups, the result of which was processed by a locally-modified version of O’Reilly’s SGML tools (this step requiring upwards of an hour of raw processing time, and over 75 megabytes of process space, just for Chapter 7!). That result was then processed by a locally-modified version of James Clark’s gtroff, producing camera-ready PostScript for O’Reilly. (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Mastering Regular Expressions<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The inside layout was designed by Mary Jane Walsh.</mrk><mrk mid="1" mtype="seg"> The text was prepared by Jeffrey Friedl in a hybrid markup of his own design, mixing SGML, raw troff, raw PostScript, and his own markup.</mrk><mrk mid="2" mtype="seg"> A home-grown filter translated the latter to the other, lower-level markups, the result of which was processed by a locally-modified version of O’Reilly’s SGML tools (this step requiring upwards of an hour of raw processing time, and over 75 megabytes of process space, just for Chapter 7!).</mrk><mrk mid="3" mtype="seg"> That result was then processed by a locally-modified version of James Clark’s gtroff, producing camera-ready PostScript for O’Reilly.</mrk><mrk mid="4" mtype="seg"> (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Mastering Regular Expressions<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The inside layout was designed by Mary Jane Walsh.</mrk><mrk mid="1" mtype="seg"> The text was prepared by Jeffrey Friedl in a hybrid markup of his own design, mixing SGML, raw troff, raw PostScript, and his own markup.</mrk><mrk mid="2" mtype="seg"> A home-grown filter translated the latter to the other, lower-level markups, the result of which was processed by a locally-modified version of O’Reilly’s SGML tools (this step requiring upwards of an hour of raw processing time, and over 75 megabytes of process space, just for Chapter 7!).</mrk><mrk mid="3" mtype="seg"> That result was then processed by a locally-modified version of James Clark’s gtroff, producing camera-ready PostScript for O’Reilly.</mrk><mrk mid="4" mtype="seg"> (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Mastering Regular Expressions<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-14" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Alicia Cech and David Futato designed the interior layout based on a series design by Nancy Priest. The authors’ text in POD was converted by Lenny Muellner into DocBook 3.1 SGML. The print version of this book was created by translating the SGML source into a set of gtroff macros using a Perl filter developed at O’Reilly &amp; Associates by Norman Walsh. Steve Talbott designed and wrote the underlying macro set on the basis of the GNU gtroff -ms macros; Lenny Muellner adapted them to SGML and implemented the book design. The GNU groff text formatter version 1.11 was used to generate PostScript output. Mike Sierra provided crucial help with the Chinese and Japanese Unicode characters in Chapter 15, Unicode. The text and heading fonts are ITC Garamond Light and Garamond Book. The illustrations that appear in the book were produced by Robert Romano and Rhon Porter using Macromedia FreeHand 8 and Adobe Photoshop 5. (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Programming Perl,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> 2nd ed.)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Alicia Cech and David Futato designed the interior layout based on a series design by Nancy Priest.</mrk><mrk mid="1" mtype="seg"> The authors’ text in POD was converted by Lenny Muellner into DocBook 3.1 SGML.</mrk><mrk mid="2" mtype="seg"> The print version of this book was created by translating the SGML source into a set of gtroff macros using a Perl filter developed at O’Reilly &amp; Associates by Norman Walsh.</mrk><mrk mid="3" mtype="seg"> Steve Talbott designed and wrote the underlying macro set on the basis of the GNU gtroff -ms macros; Lenny Muellner adapted them to SGML and implemented the book design.</mrk><mrk mid="4" mtype="seg"> The GNU groff text formatter version 1.11 was used to generate PostScript output.</mrk><mrk mid="5" mtype="seg"> Mike Sierra provided crucial help with the Chinese and Japanese Unicode characters in Chapter 15, Unicode.</mrk><mrk mid="6" mtype="seg"> The text and heading fonts are ITC Garamond Light and Garamond Book.</mrk><mrk mid="7" mtype="seg"> The illustrations that appear in the book were produced by Robert Romano and Rhon Porter using Macromedia FreeHand 8 and Adobe Photoshop 5.</mrk><mrk mid="8" mtype="seg"> (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Programming Perl,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> 2nd ed.)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Alicia Cech and David Futato designed the interior layout based on a series design by Nancy Priest.</mrk><mrk mid="1" mtype="seg"> The authors’ text in POD was converted by Lenny Muellner into DocBook 3.1 SGML.</mrk><mrk mid="2" mtype="seg"> The print version of this book was created by translating the SGML source into a set of gtroff macros using a Perl filter developed at O’Reilly &amp; Associates by Norman Walsh.</mrk><mrk mid="3" mtype="seg"> Steve Talbott designed and wrote the underlying macro set on the basis of the GNU gtroff -ms macros; Lenny Muellner adapted them to SGML and implemented the book design.</mrk><mrk mid="4" mtype="seg"> The GNU groff text formatter version 1.11 was used to generate PostScript output.</mrk><mrk mid="5" mtype="seg"> Mike Sierra provided crucial help with the Chinese and Japanese Unicode characters in Chapter 15, Unicode.</mrk><mrk mid="6" mtype="seg"> The text and heading fonts are ITC Garamond Light and Garamond Book.</mrk><mrk mid="7" mtype="seg"> The illustrations that appear in the book were produced by Robert Romano and Rhon Porter using Macromedia FreeHand 8 and Adobe Photoshop 5.</mrk><mrk mid="8" mtype="seg"> (from <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Programming Perl,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> 2nd ed.)<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-15" xml:space="preserve">
<source xml:lang="en">Big textbook publishers like Wiley and Pearson have XML toolchains that allow them to manage complex, multi-participant workflows too. They don’t usually publish the details on the last page.</source>
<seg-source><mrk mid="0" mtype="seg">Big textbook publishers like Wiley and Pearson have XML toolchains that allow them to manage complex, multi-participant workflows too.</mrk><mrk mid="1" mtype="seg"> They don’t usually publish the details on the last page.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Big textbook publishers like Wiley and Pearson have XML toolchains that allow them to manage complex, multi-participant workflows too.</mrk><mrk mid="1" mtype="seg"> They don’t usually publish the details on the last page.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-16" xml:space="preserve">
<source xml:lang="en">Interestingly, SGML and XML production workflows were pioneered right here in Toronto at Coach House Press in the 1980s—the O’Reilly colophon above draws directly on the Coach House work. But that’s another story.</source>
<seg-source><mrk mid="0" mtype="seg">Interestingly, SGML and XML production workflows were pioneered right here in Toronto at Coach House Press in the 1980s—the O’Reilly colophon above draws directly on the Coach House work.</mrk><mrk mid="1" mtype="seg"> But that’s another story.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Interestingly, SGML and XML production workflows were pioneered right here in Toronto at Coach House Press in the 1980s—the O’Reilly colophon above draws directly on the Coach House work.</mrk><mrk mid="1" mtype="seg"> But that’s another story.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-17" xml:space="preserve">
<source xml:lang="en">Challenges: Some Ugly Truths</source>
<seg-source><mrk mid="0" mtype="seg">Challenges: Some Ugly Truths</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Challenges: Some Ugly Truths</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-18" xml:space="preserve">
<source xml:lang="en">The challenges of building—and living with—an XML workflow are clear enough. The return on investment is a long-term proposition.</source>
<seg-source><mrk mid="0" mtype="seg">The challenges of building—and living with—an XML workflow are clear enough.</mrk><mrk mid="1" mtype="seg"> The return on investment is a long-term proposition.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The challenges of building—and living with—an XML workflow are clear enough.</mrk><mrk mid="1" mtype="seg"> The return on investment is a long-term proposition.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-19" xml:space="preserve">
<source xml:lang="en">Regardless of the benefits XML may provide, the starting reality is that it represents a very different way of doing things than the one we are familiar with. The Word Processing and Desktop Publishing paradigm, based on the promise of onscreen, WYSIWYG layout, is so dominant as to be practically inescapable. It has proven really hard to get from here to there, no matter how attractive XML might be on paper.</source>
<seg-source><mrk mid="0" mtype="seg">Regardless of the benefits XML may provide, the starting reality is that it represents a very different way of doing things than the one we are familiar with.</mrk><mrk mid="1" mtype="seg"> The Word Processing and Desktop Publishing paradigm, based on the promise of onscreen, WYSIWYG layout, is so dominant as to be practically inescapable.</mrk><mrk mid="2" mtype="seg"> It has proven really hard to get from here to there, no matter how attractive XML might be on paper.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Regardless of the benefits XML may provide, the starting reality is that it represents a very different way of doing things than the one we are familiar with.</mrk><mrk mid="1" mtype="seg"> The Word Processing and Desktop Publishing paradigm, based on the promise of onscreen, WYSIWYG layout, is so dominant as to be practically inescapable.</mrk><mrk mid="2" mtype="seg"> It has proven really hard to get from here to there, no matter how attractive XML might be on paper.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-20" xml:space="preserve">
<source xml:lang="en">A considerable amount of organizational effort and labour must be expended up front in order to realize the benefits. This is why XML is often referred to as an “investment”: you sink a bunch of time and money up front, and realize the benefits—greater flexibility, multiple output options, searching and indexing, and general futureproofing—later, over the long haul. It is not a short-term return proposition.</source>
<seg-source><mrk mid="0" mtype="seg">A considerable amount of organizational effort and labour must be expended up front in order to realize the benefits.</mrk><mrk mid="1" mtype="seg"> This is why XML is often referred to as an “investment”: you sink a bunch of time and money up front, and realize the benefits—greater flexibility, multiple output options, searching and indexing, and general futureproofing—later, over the long haul.</mrk><mrk mid="2" mtype="seg"> It is not a short-term return proposition.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A considerable amount of organizational effort and labour must be expended up front in order to realize the benefits.</mrk><mrk mid="1" mtype="seg"> This is why XML is often referred to as an “investment”: you sink a bunch of time and money up front, and realize the benefits—greater flexibility, multiple output options, searching and indexing, and general futureproofing—later, over the long haul.</mrk><mrk mid="2" mtype="seg"> It is not a short-term return proposition.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-21" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>And, of course, the returns you are able to realize from your XML investment are commensurate with what you put in up front: fine-grained, semantically rich tagging is going to give you more potential for searchability and recombination than a looser, more general-purpose approach, but it sure costs more. For instance, the <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Text Encoding Initiative<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> (TEI) is the grand example of pouring enormous amounts of energy into the up-front tagging, with a very open-ended set of possibilities down the line. TEI helpfully defines a level to which most of us do not have to aspire. <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[2]" Self="htss-9"&gt;&lt;Content&gt;</bpt>[2]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>And, of course, the returns you are able to realize from your XML investment are commensurate with what you put in up front: fine-grained, semantically rich tagging is going to give you more potential for searchability and recombination than a looser, more general-purpose approach, but it sure costs more.</mrk><mrk mid="1" mtype="seg"> For instance, the <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Text Encoding Initiative<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> (TEI) is the grand example of pouring enormous amounts of energy into the up-front tagging, with a very open-ended set of possibilities down the line.</mrk><mrk mid="2" mtype="seg"> TEI helpfully defines a level to which most of us do not have to aspire.</mrk><mrk mid="3" mtype="seg"> <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[2]" Self="htss-9"&gt;&lt;Content&gt;</bpt>[2]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>And, of course, the returns you are able to realize from your XML investment are commensurate with what you put in up front: fine-grained, semantically rich tagging is going to give you more potential for searchability and recombination than a looser, more general-purpose approach, but it sure costs more.</mrk><mrk mid="1" mtype="seg"> For instance, the <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Text Encoding Initiative<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> (TEI) is the grand example of pouring enormous amounts of energy into the up-front tagging, with a very open-ended set of possibilities down the line.</mrk><mrk mid="2" mtype="seg"> TEI helpfully defines a level to which most of us do not have to aspire.</mrk><mrk mid="3" mtype="seg"> <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[2]" Self="htss-9"&gt;&lt;Content&gt;</bpt>[2]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-22" xml:space="preserve">
<source xml:lang="en">But understanding this on a theoretical level is only part of the challenge. There are many practical issues that must be addressed. Software and labour are two of the most critical. How do you get the content into XML in the first place? Unfortunately, despite two decades of people doing SGML and XML, this remains an ugly question.</source>
<seg-source><mrk mid="0" mtype="seg">But understanding this on a theoretical level is only part of the challenge.</mrk><mrk mid="1" mtype="seg"> There are many practical issues that must be addressed.</mrk><mrk mid="2" mtype="seg"> Software and labour are two of the most critical.</mrk><mrk mid="3" mtype="seg"> How do you get the content into XML in the first place? Unfortunately, despite two decades of people doing SGML and XML, this remains an ugly question.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">But understanding this on a theoretical level is only part of the challenge.</mrk><mrk mid="1" mtype="seg"> There are many practical issues that must be addressed.</mrk><mrk mid="2" mtype="seg"> Software and labour are two of the most critical.</mrk><mrk mid="3" mtype="seg"> How do you get the content into XML in the first place? Unfortunately, despite two decades of people doing SGML and XML, this remains an ugly question.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-23" xml:space="preserve">
<source xml:lang="en">Practical Challenges</source>
<seg-source><mrk mid="0" mtype="seg">Practical Challenges</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Practical Challenges</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-24" xml:space="preserve">
<source xml:lang="en">In 2009, there is still no truly likeable—let alone standard—editing and authoring software for XML. For many (myself included), the high-water mark here was Adobe’s FrameMaker, substantially developed in the late 1990s. With no substantial market for it, it is relegated today mostly to the tech writing industry, unavailable for the Mac, and just far enough afield from the kinds of tools we’re used to that its adoption represents a significant hurdle. And Frame was the best of the breed; most of the other software in decent circulation are programmers’ tools—the sort of thing that, as Michael Tamblyn pointed out, encourages editors to drink at their desks.</source>
<seg-source><mrk mid="0" mtype="seg">In 2009, there is still no truly likeable—let alone standard—editing and authoring software for XML.</mrk><mrk mid="1" mtype="seg"> For many (myself included), the high-water mark here was Adobe’s FrameMaker, substantially developed in the late 1990s.</mrk><mrk mid="2" mtype="seg"> With no substantial market for it, it is relegated today mostly to the tech writing industry, unavailable for the Mac, and just far enough afield from the kinds of tools we’re used to that its adoption represents a significant hurdle.</mrk><mrk mid="3" mtype="seg"> And Frame was the best of the breed; most of the other software in decent circulation are programmers’ tools—the sort of thing that, as Michael Tamblyn pointed out, encourages editors to drink at their desks.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In 2009, there is still no truly likeable—let alone standard—editing and authoring software for XML.</mrk><mrk mid="1" mtype="seg"> For many (myself included), the high-water mark here was Adobe’s FrameMaker, substantially developed in the late 1990s.</mrk><mrk mid="2" mtype="seg"> With no substantial market for it, it is relegated today mostly to the tech writing industry, unavailable for the Mac, and just far enough afield from the kinds of tools we’re used to that its adoption represents a significant hurdle.</mrk><mrk mid="3" mtype="seg"> And Frame was the best of the breed; most of the other software in decent circulation are programmers’ tools—the sort of thing that, as Michael Tamblyn pointed out, encourages editors to drink at their desks.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-25" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>labour<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> question represents a stumbling block as well. The skill- and mind-sets that make effective XML editors have limited overlap with those shared by literary and more traditional production editors. The need to think of documents as machine-readable databases is not something that comes naturally to folks steeped in literary culture. In combination with the sheer time and effort that rich tagging requires, many publishers simply outsource the tagging to India, drawing a division of labour that spans oceans, to put it mildly.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>labour<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> question represents a stumbling block as well.</mrk><mrk mid="1" mtype="seg"> The skill- and mind-sets that make effective XML editors have limited overlap with those shared by literary and more traditional production editors.</mrk><mrk mid="2" mtype="seg"> The need to think of documents as machine-readable databases is not something that comes naturally to folks steeped in literary culture.</mrk><mrk mid="3" mtype="seg"> In combination with the sheer time and effort that rich tagging requires, many publishers simply outsource the tagging to India, drawing a division of labour that spans oceans, to put it mildly.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>labour<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> question represents a stumbling block as well.</mrk><mrk mid="1" mtype="seg"> The skill- and mind-sets that make effective XML editors have limited overlap with those shared by literary and more traditional production editors.</mrk><mrk mid="2" mtype="seg"> The need to think of documents as machine-readable databases is not something that comes naturally to folks steeped in literary culture.</mrk><mrk mid="3" mtype="seg"> In combination with the sheer time and effort that rich tagging requires, many publishers simply outsource the tagging to India, drawing a division of labour that spans oceans, to put it mildly.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-26" xml:space="preserve">
<source xml:lang="en">Once you have XML content, then what do you do with it? How do you produce books from it? Presumably, you need to be able to produce print output as well as digital formats. But while the latter are new enough to be generally XML-friendly (e-book formats being largely XML based, for instance), there aren’t any straightforward, standard ways of moving XML content into the kind of print production environments we are used to seeing. This isn’t to say that there aren’t ways of getting print—even very high-quality print—output from XML, just that most of them involve replacing your prepress staff with Java programmers.</source>
<seg-source><mrk mid="0" mtype="seg">Once you have XML content, then what do you do with it? How do you produce books from it? Presumably, you need to be able to produce print output as well as digital formats.</mrk><mrk mid="1" mtype="seg"> But while the latter are new enough to be generally XML-friendly (e-book formats being largely XML based, for instance), there aren’t any straightforward, standard ways of moving XML content into the kind of print production environments we are used to seeing.</mrk><mrk mid="2" mtype="seg"> This isn’t to say that there aren’t ways of getting print—even very high-quality print—output from XML, just that most of them involve replacing your prepress staff with Java programmers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Once you have XML content, then what do you do with it? How do you produce books from it? Presumably, you need to be able to produce print output as well as digital formats.</mrk><mrk mid="1" mtype="seg"> But while the latter are new enough to be generally XML-friendly (e-book formats being largely XML based, for instance), there aren’t any straightforward, standard ways of moving XML content into the kind of print production environments we are used to seeing.</mrk><mrk mid="2" mtype="seg"> This isn’t to say that there aren’t ways of getting print—even very high-quality print—output from XML, just that most of them involve replacing your prepress staff with Java programmers.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-27" xml:space="preserve">
<source xml:lang="en">Why does this have to be so hard?</source>
<seg-source><mrk mid="0" mtype="seg">Why does this have to be so hard?</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Why does this have to be so hard?</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-28" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It’s not that XML is new, or immature, or untested. Remember that the basics have been around, and in production, since the early 1980s at least. But we have to take account of a substantial and long-running <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>cultural<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> disconnect between traditional editorial and production processes (the ones most of us know intimately) and the ways computing people have approached things.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It’s not that XML is new, or immature, or untested.</mrk><mrk mid="1" mtype="seg"> Remember that the basics have been around, and in production, since the early 1980s at least.</mrk><mrk mid="2" mtype="seg"> But we have to take account of a substantial and long-running <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>cultural<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> disconnect between traditional editorial and production processes (the ones most of us know intimately) and the ways computing people have approached things.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It’s not that XML is new, or immature, or untested.</mrk><mrk mid="1" mtype="seg"> Remember that the basics have been around, and in production, since the early 1980s at least.</mrk><mrk mid="2" mtype="seg"> But we have to take account of a substantial and long-running <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>cultural<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> disconnect between traditional editorial and production processes (the ones most of us know intimately) and the ways computing people have approached things.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-29" xml:space="preserve">
<source xml:lang="en">Interestingly, this cultural divide looked rather different in the 1970s, when publishers were looking at how to move to digital typesetting. Back then, printers and software developers could speak the same language. But that was before the ascendancy of the Desktop Publishing paradigm, which computerized the publishing industry while at the same time isolating it culturally. Those of us who learned how to do things the Quark way or the Adobe way had little in common with people who programmed databases or document management systems. Desktop Publishing technology isolated us in a smooth, self-contained universe of toolbars, grid lines, and laser proofs.</source>
<seg-source><mrk mid="0" mtype="seg">Interestingly, this cultural divide looked rather different in the 1970s, when publishers were looking at how to move to digital typesetting.</mrk><mrk mid="1" mtype="seg"> Back then, printers and software developers could speak the same language.</mrk><mrk mid="2" mtype="seg"> But that was before the ascendancy of the Desktop Publishing paradigm, which computerized the publishing industry while at the same time isolating it culturally.</mrk><mrk mid="3" mtype="seg"> Those of us who learned how to do things the Quark way or the Adobe way had little in common with people who programmed databases or document management systems.</mrk><mrk mid="4" mtype="seg"> Desktop Publishing technology isolated us in a smooth, self-contained universe of toolbars, grid lines, and laser proofs.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Interestingly, this cultural divide looked rather different in the 1970s, when publishers were looking at how to move to digital typesetting.</mrk><mrk mid="1" mtype="seg"> Back then, printers and software developers could speak the same language.</mrk><mrk mid="2" mtype="seg"> But that was before the ascendancy of the Desktop Publishing paradigm, which computerized the publishing industry while at the same time isolating it culturally.</mrk><mrk mid="3" mtype="seg"> Those of us who learned how to do things the Quark way or the Adobe way had little in common with people who programmed databases or document management systems.</mrk><mrk mid="4" mtype="seg"> Desktop Publishing technology isolated us in a smooth, self-contained universe of toolbars, grid lines, and laser proofs.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-30" xml:space="preserve">
<source xml:lang="en">So, now that the reasons to get with this program loom large, how can we bridge this long-standing divide?</source>
<seg-source><mrk mid="0" mtype="seg">So, now that the reasons to get with this program loom large, how can we bridge this long-standing divide?</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">So, now that the reasons to get with this program loom large, how can we bridge this long-standing divide?</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-31" xml:space="preserve">
<source xml:lang="en">Using the Web as a Production Platform</source>
<seg-source><mrk mid="0" mtype="seg">Using the Web as a Production Platform</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Using the Web as a Production Platform</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-32" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The answer, I think, is staring us in the face. The bridge is the Web, a technology and <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>platform<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that is fundamentally based on XML, and which many publishers are by now comfortably familiar with. Okay, maybe not comfortably, but at least the web is already something that you’re working with; you already either know or have on staff people who understand it and can work with it.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The answer, I think, is staring us in the face.</mrk><mrk mid="1" mtype="seg"> The bridge is the Web, a technology and <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>platform<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that is fundamentally based on XML, and which many publishers are by now comfortably familiar with.</mrk><mrk mid="2" mtype="seg"> Okay, maybe not comfortably, but at least the web is already something that you’re working with; you already either know or have on staff people who understand it and can work with it.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>The answer, I think, is staring us in the face.</mrk><mrk mid="1" mtype="seg"> The bridge is the Web, a technology and <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>platform<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that is fundamentally based on XML, and which many publishers are by now comfortably familiar with.</mrk><mrk mid="2" mtype="seg"> Okay, maybe not comfortably, but at least the web is already something that you’re working with; you already either know or have on staff people who understand it and can work with it.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-33" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The foundation of our argument is this: rather than looking at jumping to XML in its full, industrial complexity—which seems to be what the StartWithXML initiative <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[3]" Self="htss-13"&gt;&lt;Content&gt;</bpt>[3]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is suggesting, publishers instead leverage existing tools and technologies—starting with the web—as a means of getting XML workflows in place. This means making small investments and working with what you know rather than spending tens of thousands of dollars on XML software and rarefied consultants. It means re-thinking how the existing pieces of your toolchain fit together; re-thinking the existing roles of software components you’re already using. It means, fundamentally, taking the web seriously as a content platform, rather than thinking of it as something you need to get content out to, somehow.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The foundation of our argument is this: rather than looking at jumping to XML in its full, industrial complexity—which seems to be what the StartWithXML initiative <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[3]" Self="htss-13"&gt;&lt;Content&gt;</bpt>[3]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is suggesting, publishers instead leverage existing tools and technologies—starting with the web—as a means of getting XML workflows in place.</mrk><mrk mid="1" mtype="seg"> This means making small investments and working with what you know rather than spending tens of thousands of dollars on XML software and rarefied consultants.</mrk><mrk mid="2" mtype="seg"> It means re-thinking how the existing pieces of your toolchain fit together; re-thinking the existing roles of software components you’re already using.</mrk><mrk mid="3" mtype="seg"> It means, fundamentally, taking the web seriously as a content platform, rather than thinking of it as something you need to get content out to, somehow.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The foundation of our argument is this: rather than looking at jumping to XML in its full, industrial complexity—which seems to be what the StartWithXML initiative <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[3]" Self="htss-13"&gt;&lt;Content&gt;</bpt>[3]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is suggesting, publishers instead leverage existing tools and technologies—starting with the web—as a means of getting XML workflows in place.</mrk><mrk mid="1" mtype="seg"> This means making small investments and working with what you know rather than spending tens of thousands of dollars on XML software and rarefied consultants.</mrk><mrk mid="2" mtype="seg"> It means re-thinking how the existing pieces of your toolchain fit together; re-thinking the existing roles of software components you’re already using.</mrk><mrk mid="3" mtype="seg"> It means, fundamentally, taking the web seriously as a content platform, rather than thinking of it as something you need to get content out to, somehow.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-34" xml:space="preserve">
<source xml:lang="en">If nothing else, the web represents an opportunity to think about editorial and production from outside the shrinkwrapped Desktop Publishing paradigm for a change.</source>
<seg-source><mrk mid="0" mtype="seg">If nothing else, the web represents an opportunity to think about editorial and production from outside the shrinkwrapped Desktop Publishing paradigm for a change.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If nothing else, the web represents an opportunity to think about editorial and production from outside the shrinkwrapped Desktop Publishing paradigm for a change.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-35" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>At this point some of you may be thinking: wait a moment, the web isn’t <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>really<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> made out of XML; the HTML that makes up most of the web is at best the bastard child of SGML and it is far too flaky/unstructured/underpowered to be taken seriously.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>At this point some of you may be thinking: wait a moment, the web isn’t <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>really<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> made out of XML; the HTML that makes up most of the web is at best the bastard child of SGML and it is far too flaky/unstructured/underpowered to be taken seriously.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>At this point some of you may be thinking: wait a moment, the web isn’t <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>really<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> made out of XML; the HTML that makes up most of the web is at best the bastard child of SGML and it is far too flaky/unstructured/underpowered to be taken seriously.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-36" xml:space="preserve">
<source xml:lang="en">I will counter by arguing that although HTML on the web exists in a staggering array of different incarnations, and that the majority of it is an unstructured mess, this does not undermine the general principle that basic, ubiquitous web technologies can make a solid platform for content management, editorial process, and production workflow.</source>
<seg-source><mrk mid="0" mtype="seg">I will counter by arguing that although HTML on the web exists in a staggering array of different incarnations, and that the majority of it is an unstructured mess, this does not undermine the general principle that basic, ubiquitous web technologies can make a solid platform for content management, editorial process, and production workflow.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">I will counter by arguing that although HTML on the web exists in a staggering array of different incarnations, and that the majority of it is an unstructured mess, this does not undermine the general principle that basic, ubiquitous web technologies can make a solid platform for content management, editorial process, and production workflow.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-37" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>With the advent of a published XML standard in the late 1990s came the W3C’s adoption of XHTML: the realization of the web’s native content markup as a proper XML document type. Today, its acceptance is almost ubiquitous, even while the majority of actual content out there may not be strictly conforming. The more important point is that most contemporary web software, from browsers to authoring tools to content management systems (from blogs to enterprise systems), are capable of working with clean, valid XHTML. Or, to put the argument the other way around, clean, valid XHTML content plays absolutely seamlessly with everything else on the web. <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[4]" Self="htss-14"&gt;&lt;Content&gt;</bpt>[4]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>With the advent of a published XML standard in the late 1990s came the W3C’s adoption of XHTML: the realization of the web’s native content markup as a proper XML document type.</mrk><mrk mid="1" mtype="seg"> Today, its acceptance is almost ubiquitous, even while the majority of actual content out there may not be strictly conforming.</mrk><mrk mid="2" mtype="seg"> The more important point is that most contemporary web software, from browsers to authoring tools to content management systems (from blogs to enterprise systems), are capable of working with clean, valid XHTML.</mrk><mrk mid="3" mtype="seg"> Or, to put the argument the other way around, clean, valid XHTML content plays absolutely seamlessly with everything else on the web.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[4]" Self="htss-14"&gt;&lt;Content&gt;</bpt>[4]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>With the advent of a published XML standard in the late 1990s came the W3C’s adoption of XHTML: the realization of the web’s native content markup as a proper XML document type.</mrk><mrk mid="1" mtype="seg"> Today, its acceptance is almost ubiquitous, even while the majority of actual content out there may not be strictly conforming.</mrk><mrk mid="2" mtype="seg"> The more important point is that most contemporary web software, from browsers to authoring tools to content management systems (from blogs to enterprise systems), are capable of working with clean, valid XHTML.</mrk><mrk mid="3" mtype="seg"> Or, to put the argument the other way around, clean, valid XHTML content plays absolutely seamlessly with everything else on the web.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[4]" Self="htss-14"&gt;&lt;Content&gt;</bpt>[4]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-38" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The objection which follows, then, will be that even if we grant that XHTML is a <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>real<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> XML document type, that it is underpowered for “serious” content because it is almost entirely presentation (formatting) oriented; it lacks any semantic depth. In XHTML, a paragraph is a paragraph is a paragraph, as opposed to a <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>section<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or an <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>epigraph<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="13" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or a <ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>summary.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="17" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> In contrast, more “serious” XML document types like DocBook <ept id="17">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="19" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[5]" Self="htss-15"&gt;&lt;Content&gt;</bpt>[5]<ept id="19">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="22" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or DITA-derived schemas <ept id="22">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="24" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[6]" Self="htss-16"&gt;&lt;Content&gt;</bpt>[6]<ept id="24">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="27" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> are capable of making semantic distinctions about content chunks at a fine level of granularity and with a high degree of specificity.<ept id="27">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The objection which follows, then, will be that even if we grant that XHTML is a <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>real<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> XML document type, that it is underpowered for “serious” content because it is almost entirely presentation (formatting) oriented; it lacks any semantic depth.</mrk><mrk mid="1" mtype="seg"> In XHTML, a paragraph is a paragraph is a paragraph, as opposed to a <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>section<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or an <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>epigraph<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="13" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or a <ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>summary.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="2" mtype="seg"><bpt id="17" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> In contrast, more “serious” XML document types like DocBook <ept id="17">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="19" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[5]" Self="htss-15"&gt;&lt;Content&gt;</bpt>[5]<ept id="19">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="22" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or DITA-derived schemas <ept id="22">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="24" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[6]" Self="htss-16"&gt;&lt;Content&gt;</bpt>[6]<ept id="24">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="27" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> are capable of making semantic distinctions about content chunks at a fine level of granularity and with a high degree of specificity.<ept id="27">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The objection which follows, then, will be that even if we grant that XHTML is a <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>real<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> XML document type, that it is underpowered for “serious” content because it is almost entirely presentation (formatting) oriented; it lacks any semantic depth.</mrk><mrk mid="1" mtype="seg"> In XHTML, a paragraph is a paragraph is a paragraph, as opposed to a <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>section<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or an <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>epigraph<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="13" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or a <ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>summary.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="2" mtype="seg"><bpt id="17" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> In contrast, more “serious” XML document types like DocBook <ept id="17">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="19" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[5]" Self="htss-15"&gt;&lt;Content&gt;</bpt>[5]<ept id="19">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="22" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> or DITA-derived schemas <ept id="22">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="24" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[6]" Self="htss-16"&gt;&lt;Content&gt;</bpt>[6]<ept id="24">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="27" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> are capable of making semantic distinctions about content chunks at a fine level of granularity and with a high degree of specificity.<ept id="27">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-39" xml:space="preserve">
<source xml:lang="en">This may be true, but this is precisely where we should be questioning the cost-benefit relationship. More semantic richness is of course a good thing, but in order to achieve it you must make that much more of an investment up front. XHTML is a mature and fairly comprehensive system for representing the basic building blocks of prose. So there is an argument for recalling the 80:20 rule here. If XHTML can provide 80% of the value with 20% of the investment, then what exactly is the business case for spending the other 80% to achieve that last 20% of value? I suspect the ratio is actually quite a bit steeper than 80:20 for most publishers.</source>
<seg-source><mrk mid="0" mtype="seg">This may be true, but this is precisely where we should be questioning the cost-benefit relationship.</mrk><mrk mid="1" mtype="seg"> More semantic richness is of course a good thing, but in order to achieve it you must make that much more of an investment up front.</mrk><mrk mid="2" mtype="seg"> XHTML is a mature and fairly comprehensive system for representing the basic building blocks of prose.</mrk><mrk mid="3" mtype="seg"> So there is an argument for recalling the 80:20 rule here.</mrk><mrk mid="4" mtype="seg"> If XHTML can provide 80% of the value with 20% of the investment, then what exactly is the business case for spending the other 80% to achieve that last 20% of value? I suspect the ratio is actually quite a bit steeper than 80:20 for most publishers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This may be true, but this is precisely where we should be questioning the cost-benefit relationship.</mrk><mrk mid="1" mtype="seg"> More semantic richness is of course a good thing, but in order to achieve it you must make that much more of an investment up front.</mrk><mrk mid="2" mtype="seg"> XHTML is a mature and fairly comprehensive system for representing the basic building blocks of prose.</mrk><mrk mid="3" mtype="seg"> So there is an argument for recalling the 80:20 rule here.</mrk><mrk mid="4" mtype="seg"> If XHTML can provide 80% of the value with 20% of the investment, then what exactly is the business case for spending the other 80% to achieve that last 20% of value? I suspect the ratio is actually quite a bit steeper than 80:20 for most publishers.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-40" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Furthermore, just to get technical for a moment, XHTML is extensible in a fairly straightforward way, through the common “class” attribute on each element. Web developers have long leveraged this kind of extensibility in the elaboration of “microformats” for semantic-web applications. <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[7]" Self="htss-17"&gt;&lt;Content&gt;</bpt>[7]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> There is no reason why publishers shouldn’t think to use XHTML’s simple extensibility in a similar way for their own ends.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Furthermore, just to get technical for a moment, XHTML is extensible in a fairly straightforward way, through the common “class” attribute on each element.</mrk><mrk mid="1" mtype="seg"> Web developers have long leveraged this kind of extensibility in the elaboration of “microformats” for semantic-web applications.</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[7]" Self="htss-17"&gt;&lt;Content&gt;</bpt>[7]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> There is no reason why publishers shouldn’t think to use XHTML’s simple extensibility in a similar way for their own ends.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Furthermore, just to get technical for a moment, XHTML is extensible in a fairly straightforward way, through the common “class” attribute on each element.</mrk><mrk mid="1" mtype="seg"> Web developers have long leveraged this kind of extensibility in the elaboration of “microformats” for semantic-web applications.</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[7]" Self="htss-17"&gt;&lt;Content&gt;</bpt>[7]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="6" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> There is no reason why publishers shouldn’t think to use XHTML’s simple extensibility in a similar way for their own ends.<ept id="6">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-41" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Finally, the best reason of all to take XHTML seriously is its unparalleled ubiquity. My quick glance at Wikipedia shows more than 180 different XML markup languages, <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[8]" Self="htss-18"&gt;&lt;Content&gt;</bpt>[8]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> about 175 of which you’ve never heard of—and neither has the software you use. XHTML, on the other hand, is supported by a vast array of software that you use everyday, starting with your web browser. For this very reason, XHTML is in fact employed as a component part of several more specialized document types (ONIX and ePub among them). Why re-invent a general-purpose prose representation when XHTML already does the job?<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Finally, the best reason of all to take XHTML seriously is its unparalleled ubiquity.</mrk><mrk mid="1" mtype="seg"> My quick glance at Wikipedia shows more than 180 different XML markup languages, <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[8]" Self="htss-18"&gt;&lt;Content&gt;</bpt>[8]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> about 175 of which you’ve never heard of—and neither has the software you use.</mrk><mrk mid="2" mtype="seg"> XHTML, on the other hand, is supported by a vast array of software that you use everyday, starting with your web browser.</mrk><mrk mid="3" mtype="seg"> For this very reason, XHTML is in fact employed as a component part of several more specialized document types (ONIX and ePub among them).</mrk><mrk mid="4" mtype="seg"> Why re-invent a general-purpose prose representation when XHTML already does the job?<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Finally, the best reason of all to take XHTML seriously is its unparalleled ubiquity.</mrk><mrk mid="1" mtype="seg"> My quick glance at Wikipedia shows more than 180 different XML markup languages, <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[8]" Self="htss-18"&gt;&lt;Content&gt;</bpt>[8]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> about 175 of which you’ve never heard of—and neither has the software you use.</mrk><mrk mid="2" mtype="seg"> XHTML, on the other hand, is supported by a vast array of software that you use everyday, starting with your web browser.</mrk><mrk mid="3" mtype="seg"> For this very reason, XHTML is in fact employed as a component part of several more specialized document types (ONIX and ePub among them).</mrk><mrk mid="4" mtype="seg"> Why re-invent a general-purpose prose representation when XHTML already does the job?<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-42" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It is worth pausing for a moment to consider the role of XHTML in the ePub standard for ebook content. An ePub file is, anatomically, a simply disguised zip archive. Inside the zip archive are a few standard component parts: there are specialized files that declare metadata about the book, and about the format of the book. And then there is the book’s content, represented in XHTML. <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>An ePub book is a web page in a wrapper.<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This simple fact needs to be recognized, if only for the sake of demystification. This is not rocket science.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It is worth pausing for a moment to consider the role of XHTML in the ePub standard for ebook content.</mrk><mrk mid="1" mtype="seg"> An ePub file is, anatomically, a simply disguised zip archive.</mrk><mrk mid="2" mtype="seg"> Inside the zip archive are a few standard component parts: there are specialized files that declare metadata about the book, and about the format of the book.</mrk><mrk mid="3" mtype="seg"> And then there is the book’s content, represented in XHTML.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>An ePub book is a web page in a wrapper.<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="5" mtype="seg"><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This simple fact needs to be recognized, if only for the sake of demystification.</mrk><mrk mid="6" mtype="seg"> This is not rocket science.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>It is worth pausing for a moment to consider the role of XHTML in the ePub standard for ebook content.</mrk><mrk mid="1" mtype="seg"> An ePub file is, anatomically, a simply disguised zip archive.</mrk><mrk mid="2" mtype="seg"> Inside the zip archive are a few standard component parts: there are specialized files that declare metadata about the book, and about the format of the book.</mrk><mrk mid="3" mtype="seg"> And then there is the book’s content, represented in XHTML.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>An ePub book is a web page in a wrapper.<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="5" mtype="seg"><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This simple fact needs to be recognized, if only for the sake of demystification.</mrk><mrk mid="6" mtype="seg"> This is not rocket science.<it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-43" xml:space="preserve">
<source xml:lang="en">To sum up the general argument: the web as it already exists presents incredible value to publishers, as a platform for doing XML content management with existing (and often free) tools, and without having to go blindly into the unknown. At this point, we can offer a few design guidelines:</source>
<seg-source><mrk mid="0" mtype="seg">To sum up the general argument: the web as it already exists presents incredible value to publishers, as a platform for doing XML content management with existing (and often free) tools, and without having to go blindly into the unknown.</mrk><mrk mid="1" mtype="seg"> At this point, we can offer a few design guidelines:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To sum up the general argument: the web as it already exists presents incredible value to publishers, as a platform for doing XML content management with existing (and often free) tools, and without having to go blindly into the unknown.</mrk><mrk mid="1" mtype="seg"> At this point, we can offer a few design guidelines:</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-44" xml:space="preserve">
<source xml:lang="en">Prefer existing and/or ubiquitous tools over specialized ones wherever possible;</source>
<seg-source><mrk mid="0" mtype="seg">Prefer existing and/or ubiquitous tools over specialized ones wherever possible;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Prefer existing and/or ubiquitous tools over specialized ones wherever possible;</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-45" xml:space="preserve">
<source xml:lang="en">Prefer free software over proprietary systems where possible;</source>
<seg-source><mrk mid="0" mtype="seg">Prefer free software over proprietary systems where possible;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Prefer free software over proprietary systems where possible;</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-46" xml:space="preserve">
<source xml:lang="en">Prefer simple tools controlled and coordinated by human beings over fully automated (and therefore complex) systems;</source>
<seg-source><mrk mid="0" mtype="seg">Prefer simple tools controlled and coordinated by human beings over fully automated (and therefore complex) systems;</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Prefer simple tools controlled and coordinated by human beings over fully automated (and therefore complex) systems;</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-47" xml:space="preserve">
<source xml:lang="en">Play to our strengths: use web software for storing and managing content, use layout software for layout, and keep editors and production people in charge of their own domains.</source>
<seg-source><mrk mid="0" mtype="seg">Play to our strengths: use web software for storing and managing content, use layout software for layout, and keep editors and production people in charge of their own domains.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Play to our strengths: use web software for storing and managing content, use layout software for layout, and keep editors and production people in charge of their own domains.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-48" xml:space="preserve">
<source xml:lang="en">Putting the Pieces Together</source>
<seg-source><mrk mid="0" mtype="seg">Putting the Pieces Together</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Putting the Pieces Together</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-49" xml:space="preserve">
<source xml:lang="en">At the SFU Master of Publishing Program, we have been chipping away at this general line of thinking for a few years. Over that time, web content management systems (NB: if you have a blog, you have a web content management system) have been getting more and more sophisticated, all the while getting more streamlined and easier to use. The web is beginning to be recognized as a writing and editing environment used by millions of people. And the ways in which content is represented, stored, and exchanged online have become increasingly robust and standardized.</source>
<seg-source><mrk mid="0" mtype="seg">At the SFU Master of Publishing Program, we have been chipping away at this general line of thinking for a few years.</mrk><mrk mid="1" mtype="seg"> Over that time, web content management systems (NB: if you have a blog, you have a web content management system) have been getting more and more sophisticated, all the while getting more streamlined and easier to use.</mrk><mrk mid="2" mtype="seg"> The web is beginning to be recognized as a writing and editing environment used by millions of people.</mrk><mrk mid="3" mtype="seg"> And the ways in which content is represented, stored, and exchanged online have become increasingly robust and standardized.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">At the SFU Master of Publishing Program, we have been chipping away at this general line of thinking for a few years.</mrk><mrk mid="1" mtype="seg"> Over that time, web content management systems (NB: if you have a blog, you have a web content management system) have been getting more and more sophisticated, all the while getting more streamlined and easier to use.</mrk><mrk mid="2" mtype="seg"> The web is beginning to be recognized as a writing and editing environment used by millions of people.</mrk><mrk mid="3" mtype="seg"> And the ways in which content is represented, stored, and exchanged online have become increasingly robust and standardized.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-50" xml:space="preserve">
<source xml:lang="en">The missing piece of the puzzle has been print production: how do we move content from its malleable, fluid form online into the kind of high-quality print production environments we’ve come to expect after two decades of Desktop Publishing? Anyone who has tried to print web content knows that the existing methods leave much to be desired (hyphenation and justification, anyone?). In the absence of decent tools for this, most publishers quite naturally think of producing the print content first, and then think about how to get material onto the web for various purposes. So we tend to export from Word, or from Adobe, as something of an afterthought.</source>
<seg-source><mrk mid="0" mtype="seg">The missing piece of the puzzle has been print production: how do we move content from its malleable, fluid form online into the kind of high-quality print production environments we’ve come to expect after two decades of Desktop Publishing? Anyone who has tried to print web content knows that the existing methods leave much to be desired (hyphenation and justification, anyone?).</mrk><mrk mid="1" mtype="seg"> In the absence of decent tools for this, most publishers quite naturally think of producing the print content first, and then think about how to get material onto the web for various purposes.</mrk><mrk mid="2" mtype="seg"> So we tend to export from Word, or from Adobe, as something of an afterthought.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The missing piece of the puzzle has been print production: how do we move content from its malleable, fluid form online into the kind of high-quality print production environments we’ve come to expect after two decades of Desktop Publishing? Anyone who has tried to print web content knows that the existing methods leave much to be desired (hyphenation and justification, anyone?).</mrk><mrk mid="1" mtype="seg"> In the absence of decent tools for this, most publishers quite naturally think of producing the print content first, and then think about how to get material onto the web for various purposes.</mrk><mrk mid="2" mtype="seg"> So we tend to export from Word, or from Adobe, as something of an afterthought.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-51" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>While this sort of works, it isn’t elegant, and it completely ignores the considerable advantages of web-based content management. Content managed online is stored in one central location, accessible simultaneously to everyone in your firm, available anywhere you have an Internet connection, and usually exists in a much more fluid format than Word files. If only we could manage the editorial flow online, and then go to print formats at the end, instead of the other way around. At SFU, we made several attempts to make this work by way of the supposed “XML import” capabilities of various Desktop Publishing tools, without much success. <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[9]" Self="htss-20"&gt;&lt;Content&gt;</bpt>[9]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>While this sort of works, it isn’t elegant, and it completely ignores the considerable advantages of web-based content management.</mrk><mrk mid="1" mtype="seg"> Content managed online is stored in one central location, accessible simultaneously to everyone in your firm, available anywhere you have an Internet connection, and usually exists in a much more fluid format than Word files.</mrk><mrk mid="2" mtype="seg"> If only we could manage the editorial flow online, and then go to print formats at the end, instead of the other way around.</mrk><mrk mid="3" mtype="seg"> At SFU, we made several attempts to make this work by way of the supposed “XML import” capabilities of various Desktop Publishing tools, without much success.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[9]" Self="htss-20"&gt;&lt;Content&gt;</bpt>[9]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>While this sort of works, it isn’t elegant, and it completely ignores the considerable advantages of web-based content management.</mrk><mrk mid="1" mtype="seg"> Content managed online is stored in one central location, accessible simultaneously to everyone in your firm, available anywhere you have an Internet connection, and usually exists in a much more fluid format than Word files.</mrk><mrk mid="2" mtype="seg"> If only we could manage the editorial flow online, and then go to print formats at the end, instead of the other way around.</mrk><mrk mid="3" mtype="seg"> At SFU, we made several attempts to make this work by way of the supposed “XML import” capabilities of various Desktop Publishing tools, without much success.</mrk><mrk mid="4" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[9]" Self="htss-20"&gt;&lt;Content&gt;</bpt>[9]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-52" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>This year, Adobe solved this part of the problem for us with the introduction of its Creative Suite 4. What CS4 offers is the option of a complete XML representation of an InDesign document: what Adobe calls IDML (InDesign Markup Language). <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[10]" Self="htss-21"&gt;&lt;Content&gt;</bpt>[10]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> It is available as both an export and an import in the CS4 version of InDesign. This means that content can be worked on in InDesign and/or in the XML-aware tools of your choice and moved seamlessly back and forth. <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[11]" Self="htss-22"&gt;&lt;Content&gt;</bpt>[11]<ept id="8">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> The IDML file format is—like ePub—a simply disguised zip archive that, when unpacked, reveals a cluster of XML files that represent all the different facets of an InDesign document: layout spreads, master pages, defined styles, colours, and of course, the content. IDML is a well thought-out XML standard that achieves two very different goals simultaneously: it preserves <it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="13" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>all<ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> of the information that InDesign needs to do what it does; and it is broken up in a way that makes it possible for mere mortals (or at least Master of Publishing students) to work with it.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>This year, Adobe solved this part of the problem for us with the introduction of its Creative Suite 4.</mrk><mrk mid="1" mtype="seg"> What CS4 offers is the option of a complete XML representation of an InDesign document: what Adobe calls IDML (InDesign Markup Language).</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[10]" Self="htss-21"&gt;&lt;Content&gt;</bpt>[10]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> It is available as both an export and an import in the CS4 version of InDesign.</mrk><mrk mid="3" mtype="seg"> This means that content can be worked on in InDesign and/or in the XML-aware tools of your choice and moved seamlessly back and forth.</mrk><mrk mid="4" mtype="seg"> <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[11]" Self="htss-22"&gt;&lt;Content&gt;</bpt>[11]<ept id="8">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> The IDML file format is—like ePub—a simply disguised zip archive that, when unpacked, reveals a cluster of XML files that represent all the different facets of an InDesign document: layout spreads, master pages, defined styles, colours, and of course, the content.</mrk><mrk mid="5" mtype="seg"> IDML is a well thought-out XML standard that achieves two very different goals simultaneously: it preserves <it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="13" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>all<ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> of the information that InDesign needs to do what it does; and it is broken up in a way that makes it possible for mere mortals (or at least Master of Publishing students) to work with it.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>This year, Adobe solved this part of the problem for us with the introduction of its Creative Suite 4.</mrk><mrk mid="1" mtype="seg"> What CS4 offers is the option of a complete XML representation of an InDesign document: what Adobe calls IDML (InDesign Markup Language).</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[10]" Self="htss-21"&gt;&lt;Content&gt;</bpt>[10]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> It is available as both an export and an import in the CS4 version of InDesign.</mrk><mrk mid="3" mtype="seg"> This means that content can be worked on in InDesign and/or in the XML-aware tools of your choice and moved seamlessly back and forth.</mrk><mrk mid="4" mtype="seg"> <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[11]" Self="htss-22"&gt;&lt;Content&gt;</bpt>[11]<ept id="8">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> The IDML file format is—like ePub—a simply disguised zip archive that, when unpacked, reveals a cluster of XML files that represent all the different facets of an InDesign document: layout spreads, master pages, defined styles, colours, and of course, the content.</mrk><mrk mid="5" mtype="seg"> IDML is a well thought-out XML standard that achieves two very different goals simultaneously: it preserves <it id="11" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="13" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>all<ept id="13">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="15" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> of the information that InDesign needs to do what it does; and it is broken up in a way that makes it possible for mere mortals (or at least Master of Publishing students) to work with it.<ept id="15">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-53" xml:space="preserve">
<source xml:lang="en">What this represented to us in concrete terms was the ability to take web-based content and move it into InDesign in a straightforward way, thus bridging web and print production environments in a way that used existing tools and skillsets, with a little added help from free software. We would take clean XHTML content, transform it to IDML-marked content, and merge that with nicely designed templates in InDesign. The result is an almost pushbutton publication workflow, which results in a nice, familiar InDesign document that fits straight into the way publishers actually do production.</source>
<seg-source><mrk mid="0" mtype="seg">What this represented to us in concrete terms was the ability to take web-based content and move it into InDesign in a straightforward way, thus bridging web and print production environments in a way that used existing tools and skillsets, with a little added help from free software.</mrk><mrk mid="1" mtype="seg"> We would take clean XHTML content, transform it to IDML-marked content, and merge that with nicely designed templates in InDesign.</mrk><mrk mid="2" mtype="seg"> The result is an almost pushbutton publication workflow, which results in a nice, familiar InDesign document that fits straight into the way publishers actually do production.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">What this represented to us in concrete terms was the ability to take web-based content and move it into InDesign in a straightforward way, thus bridging web and print production environments in a way that used existing tools and skillsets, with a little added help from free software.</mrk><mrk mid="1" mtype="seg"> We would take clean XHTML content, transform it to IDML-marked content, and merge that with nicely designed templates in InDesign.</mrk><mrk mid="2" mtype="seg"> The result is an almost pushbutton publication workflow, which results in a nice, familiar InDesign document that fits straight into the way publishers actually do production.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-54" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Toggle Systems<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[12]" Self="htss-23"&gt;&lt;Content&gt;</bpt>[12]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="10" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> project group (the people listed at the beginning of this paper) worked to demonstrate a proof of concept, using a real book as fodder: the CCSP’s anthology of our graduate student research, <ept id="10">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="14" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="14">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="16" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[13]" Self="htss-24"&gt;&lt;Content&gt;</bpt>[13]<ept id="16">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This book was produced in the normal way back in 2005, laid out using InDesign CS2. The book designer, Carol Aitken (herself an MPub alum), did us the favour of consistently applying a stylesheet throughout, so the formatting of the original was nice and consistent.<it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Toggle Systems<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[12]" Self="htss-23"&gt;&lt;Content&gt;</bpt>[12]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="10" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> project group (the people listed at the beginning of this paper) worked to demonstrate a proof of concept, using a real book as fodder: the CCSP’s anthology of our graduate student research, <ept id="10">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="1" mtype="seg"><bpt id="14" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="14">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="16" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[13]" Self="htss-24"&gt;&lt;Content&gt;</bpt>[13]<ept id="16">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This book was produced in the normal way back in 2005, laid out using InDesign CS2.</mrk><mrk mid="2" mtype="seg"> The book designer, Carol Aitken (herself an MPub alum), did us the favour of consistently applying a stylesheet throughout, so the formatting of the original was nice and consistent.<it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>The <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Toggle Systems<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="7" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[12]" Self="htss-23"&gt;&lt;Content&gt;</bpt>[12]<ept id="7">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="10" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> project group (the people listed at the beginning of this paper) worked to demonstrate a proof of concept, using a real book as fodder: the CCSP’s anthology of our graduate student research, <ept id="10">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="1" mtype="seg"><bpt id="14" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> <ept id="14">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="16" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[13]" Self="htss-24"&gt;&lt;Content&gt;</bpt>[13]<ept id="16">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> This book was produced in the normal way back in 2005, laid out using InDesign CS2.</mrk><mrk mid="2" mtype="seg"> The book designer, Carol Aitken (herself an MPub alum), did us the favour of consistently applying a stylesheet throughout, so the formatting of the original was nice and consistent.<it id="19" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-55" xml:space="preserve">
<source xml:lang="en">Tracing the steps</source>
<seg-source><mrk mid="0" mtype="seg">Tracing the steps</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Tracing the steps</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-56" xml:space="preserve">
<source xml:lang="en">To begin with, we worked backwards, moving the book content back to clean XHTML. The simplest method for this conversion—and if you want to create web content, this is an excellent route—was to use Adobe’s “Export to Digital Editions” option, which creates an ePub file. Recall that ePub is just XHTML in a wrapper, so within the ePub file was a relatively clean XHTML document. It was notably cleaner (that is, the XHTML tagging was simpler and less cluttered) than InDesign’s other web-oriented exports, possibly because Digital Editions is a well understood target, compared with somebody’s website.</source>
<seg-source><mrk mid="0" mtype="seg">To begin with, we worked backwards, moving the book content back to clean XHTML.</mrk><mrk mid="1" mtype="seg"> The simplest method for this conversion—and if you want to create web content, this is an excellent route—was to use Adobe’s “Export to Digital Editions” option, which creates an ePub file.</mrk><mrk mid="2" mtype="seg"> Recall that ePub is just XHTML in a wrapper, so within the ePub file was a relatively clean XHTML document.</mrk><mrk mid="3" mtype="seg"> It was notably cleaner (that is, the XHTML tagging was simpler and less cluttered) than InDesign’s other web-oriented exports, possibly because Digital Editions is a well understood target, compared with somebody’s website.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To begin with, we worked backwards, moving the book content back to clean XHTML.</mrk><mrk mid="1" mtype="seg"> The simplest method for this conversion—and if you want to create web content, this is an excellent route—was to use Adobe’s “Export to Digital Editions” option, which creates an ePub file.</mrk><mrk mid="2" mtype="seg"> Recall that ePub is just XHTML in a wrapper, so within the ePub file was a relatively clean XHTML document.</mrk><mrk mid="3" mtype="seg"> It was notably cleaner (that is, the XHTML tagging was simpler and less cluttered) than InDesign’s other web-oriented exports, possibly because Digital Editions is a well understood target, compared with somebody’s website.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-57" xml:space="preserve">
<source xml:lang="en">In order to achieve our target of clean XHTML, we needed to do some editing; the XHTML produced by InDesign’s “Digital Editions” export was presentation-oriented. For instance, bulleted list items were tagged as paragraphs, with a class attribute identifying them as list items. Using simple search-and-replace, we converted such structures to proper XHTML list and list-item elements. Our guiding principle was to make the XHTML as straightforward as possible, not dependent on any particular software to interpret it.</source>
<seg-source><mrk mid="0" mtype="seg">In order to achieve our target of clean XHTML, we needed to do some editing; the XHTML produced by InDesign’s “Digital Editions” export was presentation-oriented.</mrk><mrk mid="1" mtype="seg"> For instance, bulleted list items were tagged as paragraphs, with a class attribute identifying them as list items.</mrk><mrk mid="2" mtype="seg"> Using simple search-and-replace, we converted such structures to proper XHTML list and list-item elements.</mrk><mrk mid="3" mtype="seg"> Our guiding principle was to make the XHTML as straightforward as possible, not dependent on any particular software to interpret it.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">In order to achieve our target of clean XHTML, we needed to do some editing; the XHTML produced by InDesign’s “Digital Editions” export was presentation-oriented.</mrk><mrk mid="1" mtype="seg"> For instance, bulleted list items were tagged as paragraphs, with a class attribute identifying them as list items.</mrk><mrk mid="2" mtype="seg"> Using simple search-and-replace, we converted such structures to proper XHTML list and list-item elements.</mrk><mrk mid="3" mtype="seg"> Our guiding principle was to make the XHTML as straightforward as possible, not dependent on any particular software to interpret it.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-58" xml:space="preserve">
<source xml:lang="en">We broke the book’s content into individual chapter files; each chapter could then carry its own basic metadata, and the pages conveniently fit our web content management system (which is a wiki). We assembled a dynamically generated table of contents for the twelve chapters, and created a cover page. Essentially, the book was entirely web-based at this point.</source>
<seg-source><mrk mid="0" mtype="seg">We broke the book’s content into individual chapter files; each chapter could then carry its own basic metadata, and the pages conveniently fit our web content management system (which is a wiki).</mrk><mrk mid="1" mtype="seg"> We assembled a dynamically generated table of contents for the twelve chapters, and created a cover page.</mrk><mrk mid="2" mtype="seg"> Essentially, the book was entirely web-based at this point.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">We broke the book’s content into individual chapter files; each chapter could then carry its own basic metadata, and the pages conveniently fit our web content management system (which is a wiki).</mrk><mrk mid="1" mtype="seg"> We assembled a dynamically generated table of contents for the twelve chapters, and created a cover page.</mrk><mrk mid="2" mtype="seg"> Essentially, the book was entirely web-based at this point.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-59" xml:space="preserve">
<source xml:lang="en">When the book chapters are viewed online, they are formatted via a CSS2 stylesheet that defines a main column for content as well as dedicating screen real estate for navigational elements. We then created a second template to render the content for exporting; this was essentially a bare-bones version with no navigation and minimal styling. Pages (or even the entire book) can be exported (simply via the “Save As...” function in a web browser) for use in either print production or ebook conversion.</source>
<seg-source><mrk mid="0" mtype="seg">When the book chapters are viewed online, they are formatted via a CSS2 stylesheet that defines a main column for content as well as dedicating screen real estate for navigational elements.</mrk><mrk mid="1" mtype="seg"> We then created a second template to render the content for exporting; this was essentially a bare-bones version with no navigation and minimal styling.</mrk><mrk mid="2" mtype="seg"> Pages (or even the entire book) can be exported (simply via the “Save As...” function in a web browser) for use in either print production or ebook conversion.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When the book chapters are viewed online, they are formatted via a CSS2 stylesheet that defines a main column for content as well as dedicating screen real estate for navigational elements.</mrk><mrk mid="1" mtype="seg"> We then created a second template to render the content for exporting; this was essentially a bare-bones version with no navigation and minimal styling.</mrk><mrk mid="2" mtype="seg"> Pages (or even the entire book) can be exported (simply via the “Save As...” function in a web browser) for use in either print production or ebook conversion.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-60" xml:space="preserve">
<source xml:lang="en">Integrating with CS4 for Print</source>
<seg-source><mrk mid="0" mtype="seg">Integrating with CS4 for Print</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Integrating with CS4 for Print</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-61" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Adobe’s IDML language defines elements specific to InDesign; there is nothing in the language which looks remotely like XHTML. So a mechanical transformation step is needed to convert the XHTML content into something InDesign can use. But this is not as hard as it might seem. Both XHTML and IDML are composed of straightforward, well-documented structures, and so transformation from one to the other is, as they say, “trivial.” We chose to use XSLT (Extensible Stylesheet Language Transforms) to do the work. XSLT is part of the overall XML specification, and thus is very well supported in a wide variety of tools. Our prototype used a scripting engine called <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>xsltproc,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> a nearly ubiquitous piece of software that we found already installed as part of Mac OS X (contemporary Linux distributions also have this as a standard tool), though any XSLT processor would work.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Adobe’s IDML language defines elements specific to InDesign; there is nothing in the language which looks remotely like XHTML.</mrk><mrk mid="1" mtype="seg"> So a mechanical transformation step is needed to convert the XHTML content into something InDesign can use.</mrk><mrk mid="2" mtype="seg"> But this is not as hard as it might seem.</mrk><mrk mid="3" mtype="seg"> Both XHTML and IDML are composed of straightforward, well-documented structures, and so transformation from one to the other is, as they say, “trivial.” We chose to use XSLT (Extensible Stylesheet Language Transforms) to do the work.</mrk><mrk mid="4" mtype="seg"> XSLT is part of the overall XML specification, and thus is very well supported in a wide variety of tools.</mrk><mrk mid="5" mtype="seg"> Our prototype used a scripting engine called <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>xsltproc,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> a nearly ubiquitous piece of software that we found already installed as part of Mac OS X (contemporary Linux distributions also have this as a standard tool), though any XSLT processor would work.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Adobe’s IDML language defines elements specific to InDesign; there is nothing in the language which looks remotely like XHTML.</mrk><mrk mid="1" mtype="seg"> So a mechanical transformation step is needed to convert the XHTML content into something InDesign can use.</mrk><mrk mid="2" mtype="seg"> But this is not as hard as it might seem.</mrk><mrk mid="3" mtype="seg"> Both XHTML and IDML are composed of straightforward, well-documented structures, and so transformation from one to the other is, as they say, “trivial.” We chose to use XSLT (Extensible Stylesheet Language Transforms) to do the work.</mrk><mrk mid="4" mtype="seg"> XSLT is part of the overall XML specification, and thus is very well supported in a wide variety of tools.</mrk><mrk mid="5" mtype="seg"> Our prototype used a scripting engine called <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>xsltproc,<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> a nearly ubiquitous piece of software that we found already installed as part of Mac OS X (contemporary Linux distributions also have this as a standard tool), though any XSLT processor would work.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-62" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Rather than create an entire IDML document, which specifies every facet of an InDesign file (spreads, masters, styles, etc.), we opted for a somewhat simpler route. InCopy, Adobe’s distributed editing extension for InDesign, allows a number of editors to feed stories into a single InDesign layout simultaneously (think of a newspaper production workflow, with different editors working on copy right up to the press deadline). <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[14]" Self="htss-27"&gt;&lt;Content&gt;</bpt>[14]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Prior to the release of CS4, working this way would require purchasing separate licences for the InCopy client software. But CS4 allows the creation of InCopy files as XML—in fact, InCopy CS4’s <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>native file format<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is a subset of IDML called ICML, including only a story’s basic content and stylesheet components. <it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>In other words, we don’t need to buy InCopy, because we just replaced it with the web.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Our wiki is now plugged directly into our InDesign layout. It even automatically updates the InDesign document when the content changes. Thanks, Adobe!<it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Rather than create an entire IDML document, which specifies every facet of an InDesign file (spreads, masters, styles, etc.), we opted for a somewhat simpler route.</mrk><mrk mid="1" mtype="seg"> InCopy, Adobe’s distributed editing extension for InDesign, allows a number of editors to feed stories into a single InDesign layout simultaneously (think of a newspaper production workflow, with different editors working on copy right up to the press deadline).</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[14]" Self="htss-27"&gt;&lt;Content&gt;</bpt>[14]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Prior to the release of CS4, working this way would require purchasing separate licences for the InCopy client software.</mrk><mrk mid="3" mtype="seg"> But CS4 allows the creation of InCopy files as XML—in fact, InCopy CS4’s <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>native file format<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is a subset of IDML called ICML, including only a story’s basic content and stylesheet components.</mrk><mrk mid="4" mtype="seg"> <it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>In other words, we don’t need to buy InCopy, because we just replaced it with the web.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="5" mtype="seg"><it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Our wiki is now plugged directly into our InDesign layout.</mrk><mrk mid="6" mtype="seg"> It even automatically updates the InDesign document when the content changes.</mrk><mrk mid="7" mtype="seg"> Thanks, Adobe!<it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Rather than create an entire IDML document, which specifies every facet of an InDesign file (spreads, masters, styles, etc.), we opted for a somewhat simpler route.</mrk><mrk mid="1" mtype="seg"> InCopy, Adobe’s distributed editing extension for InDesign, allows a number of editors to feed stories into a single InDesign layout simultaneously (think of a newspaper production workflow, with different editors working on copy right up to the press deadline).</mrk><mrk mid="2" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[14]" Self="htss-27"&gt;&lt;Content&gt;</bpt>[14]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Prior to the release of CS4, working this way would require purchasing separate licences for the InCopy client software.</mrk><mrk mid="3" mtype="seg"> But CS4 allows the creation of InCopy files as XML—in fact, InCopy CS4’s <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>native file format<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> is a subset of IDML called ICML, including only a story’s basic content and stylesheet components.</mrk><mrk mid="4" mtype="seg"> <it id="10" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="12" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>In other words, we don’t need to buy InCopy, because we just replaced it with the web.<ept id="12">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept></mrk><mrk mid="5" mtype="seg"><it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Our wiki is now plugged directly into our InDesign layout.</mrk><mrk mid="6" mtype="seg"> It even automatically updates the InDesign document when the content changes.</mrk><mrk mid="7" mtype="seg"> Thanks, Adobe!<it id="14" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-63" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>We wrote an XSLT transformation script <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[15]" Self="htss-28"&gt;&lt;Content&gt;</bpt>[15]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that converted the XHTML content from the web into an InCopy ICML file. The script itself is less than 500 lines long, as was written and debugged over a period of about a week. The script runs in a matter of seconds, and the resulting .icml file can be “placed” directly into an InDesign template. The ICML file references an InDesign stylesheet, so the template file can be set up with a house-styled layout, master pages, and stylesheet definitions for paragraphs and character ranges.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>We wrote an XSLT transformation script <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[15]" Self="htss-28"&gt;&lt;Content&gt;</bpt>[15]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that converted the XHTML content from the web into an InCopy ICML file.</mrk><mrk mid="1" mtype="seg"> The script itself is less than 500 lines long, as was written and debugged over a period of about a week.</mrk><mrk mid="2" mtype="seg"> The script runs in a matter of seconds, and the resulting .icml file can be “placed” directly into an InDesign template.</mrk><mrk mid="3" mtype="seg"> The ICML file references an InDesign stylesheet, so the template file can be set up with a house-styled layout, master pages, and stylesheet definitions for paragraphs and character ranges.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>We wrote an XSLT transformation script <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[15]" Self="htss-28"&gt;&lt;Content&gt;</bpt>[15]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> that converted the XHTML content from the web into an InCopy ICML file.</mrk><mrk mid="1" mtype="seg"> The script itself is less than 500 lines long, as was written and debugged over a period of about a week.</mrk><mrk mid="2" mtype="seg"> The script runs in a matter of seconds, and the resulting .icml file can be “placed” directly into an InDesign template.</mrk><mrk mid="3" mtype="seg"> The ICML file references an InDesign stylesheet, so the template file can be set up with a house-styled layout, master pages, and stylesheet definitions for paragraphs and character ranges.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-64" xml:space="preserve">
<source xml:lang="en">The result is very simple and easy to use. Our demonstration requires that a production editor run the XSLT transformation script manually, but there is no reason why this couldn’t be built directly into the Web content management system, so that exporting the content to print ran the transformation automatically. The resulting file would then be “placed” in InDesign and proofed.</source>
<seg-source><mrk mid="0" mtype="seg">The result is very simple and easy to use.</mrk><mrk mid="1" mtype="seg"> Our demonstration requires that a production editor run the XSLT transformation script manually, but there is no reason why this couldn’t be built directly into the Web content management system, so that exporting the content to print ran the transformation automatically.</mrk><mrk mid="2" mtype="seg"> The resulting file would then be “placed” in InDesign and proofed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The result is very simple and easy to use.</mrk><mrk mid="1" mtype="seg"> Our demonstration requires that a production editor run the XSLT transformation script manually, but there is no reason why this couldn’t be built directly into the Web content management system, so that exporting the content to print ran the transformation automatically.</mrk><mrk mid="2" mtype="seg"> The resulting file would then be “placed” in InDesign and proofed.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-65" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Our project aimed to be a proof of concept, but is robust enough to handle embedded images and reasonably complex tables; in short, we were able to essentially duplicate the production of the entire <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> volume.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Our project aimed to be a proof of concept, but is robust enough to handle embedded images and reasonably complex tables; in short, we were able to essentially duplicate the production of the entire <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> volume.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Our project aimed to be a proof of concept, but is robust enough to handle embedded images and reasonably complex tables; in short, we were able to essentially duplicate the production of the entire <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="5" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> volume.<ept id="5">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-66" xml:space="preserve">
<source xml:lang="en"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Now, the <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> proof-of-concept was artificially complex; we began with a book laid out in InDesign and ended up with a look-alike book laid out in InDesign. <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Next time,<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> however—for instance, when we publish <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 2<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> —we can begin the process with the content on the web, and keep it there throughout the editorial process. The book’s content could potentially be written and edited entirely online, as web content, and then automatically poured into an InDesign template at press time. “Just in time,” as they say.<it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Now, the <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> proof-of-concept was artificially complex; we began with a book laid out in InDesign and ended up with a look-alike book laid out in InDesign.</mrk><mrk mid="1" mtype="seg"> <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Next time,<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> however—for instance, when we publish <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 2<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> —we can begin the process with the content on the web, and keep it there throughout the editorial process.</mrk><mrk mid="2" mtype="seg"> The book’s content could potentially be written and edited entirely online, as web content, and then automatically poured into an InDesign template at press time.</mrk><mrk mid="3" mtype="seg"> “Just in time,” as they say.<it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt>Now, the <ept id="1">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="3" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 1<ept id="3">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> proof-of-concept was artificially complex; we began with a book laid out in InDesign and ended up with a look-alike book laid out in InDesign.</mrk><mrk mid="1" mtype="seg"> <it id="5" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="7" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Next time,<ept id="7">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="9" ctype="x-cs_NOCHARACTERSTYLE">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</bpt> however—for instance, when we publish <ept id="9">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><bpt id="11" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>Book Publishing 2<ept id="11">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</ept><it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> —we can begin the process with the content on the web, and keep it there throughout the editorial process.</mrk><mrk mid="2" mtype="seg"> The book’s content could potentially be written and edited entirely online, as web content, and then automatically poured into an InDesign template at press time.</mrk><mrk mid="3" mtype="seg"> “Just in time,” as they say.<it id="13" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-67" xml:space="preserve">
<source xml:lang="en">This represents an entirely new way of thinking of book production. With a web-first orientation, it makes little sense to think of the book as “in print” or “out of print”—the book is simply available, in the first place online; in the second place in derivative digital formats; and third, but really not much more difficult, in print-ready format, via the usual InDesign/CS print production system publishers are already familiar with.</source>
<seg-source><mrk mid="0" mtype="seg">This represents an entirely new way of thinking of book production.</mrk><mrk mid="1" mtype="seg"> With a web-first orientation, it makes little sense to think of the book as “in print” or “out of print”—the book is simply available, in the first place online; in the second place in derivative digital formats; and third, but really not much more difficult, in print-ready format, via the usual InDesign/CS print production system publishers are already familiar with.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This represents an entirely new way of thinking of book production.</mrk><mrk mid="1" mtype="seg"> With a web-first orientation, it makes little sense to think of the book as “in print” or “out of print”—the book is simply available, in the first place online; in the second place in derivative digital formats; and third, but really not much more difficult, in print-ready format, via the usual InDesign/CS print production system publishers are already familiar with.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-68" xml:space="preserve">
<source xml:lang="en">Creating Ebook Files</source>
<seg-source><mrk mid="0" mtype="seg">Creating Ebook Files</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creating Ebook Files</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-69" xml:space="preserve">
<source xml:lang="en">Creating electronic versions from XHTML source is vastly simpler than trying to generate these out of the existing print process. The ePub version is extremely easy to generate; so is online marketing copy or excerpts for the web, since the content begins life web-native.</source>
<seg-source><mrk mid="0" mtype="seg">Creating electronic versions from XHTML source is vastly simpler than trying to generate these out of the existing print process.</mrk><mrk mid="1" mtype="seg"> The ePub version is extremely easy to generate; so is online marketing copy or excerpts for the web, since the content begins life web-native.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creating electronic versions from XHTML source is vastly simpler than trying to generate these out of the existing print process.</mrk><mrk mid="1" mtype="seg"> The ePub version is extremely easy to generate; so is online marketing copy or excerpts for the web, since the content begins life web-native.</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-70" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Since an ePub file is essentially XHTML content in a special wrapper, all that is required is that we properly “wrap” our XHTML content. Ideally, the content in an ePub file is broken into chapters (as ours was) and a table of contents file is generated in order to allow easy navigation within an ebook reader. We used Julian Smart’s free tool eCub <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[16]" Self="htss-30"&gt;&lt;Content&gt;</bpt>[16]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> to simply and automatically generate the ePub wrapper and the table of contents. The only custom development we did was to create a CSS stylesheet for the ebook so that headings and paragraph indents looked the way we wanted. If you start with XHTML content, creating ePub is almost <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>too easy.<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Since an ePub file is essentially XHTML content in a special wrapper, all that is required is that we properly “wrap” our XHTML content.</mrk><mrk mid="1" mtype="seg"> Ideally, the content in an ePub file is broken into chapters (as ours was) and a table of contents file is generated in order to allow easy navigation within an ebook reader.</mrk><mrk mid="2" mtype="seg"> We used Julian Smart’s free tool eCub <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[16]" Self="htss-30"&gt;&lt;Content&gt;</bpt>[16]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> to simply and automatically generate the ePub wrapper and the table of contents.</mrk><mrk mid="3" mtype="seg"> The only custom development we did was to create a CSS stylesheet for the ebook so that headings and paragraph indents looked the way we wanted.</mrk><mrk mid="4" mtype="seg"> If you start with XHTML content, creating ePub is almost <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>too easy.<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Since an ePub file is essentially XHTML content in a special wrapper, all that is required is that we properly “wrap” our XHTML content.</mrk><mrk mid="1" mtype="seg"> Ideally, the content in an ePub file is broken into chapters (as ours was) and a table of contents file is generated in order to allow easy navigation within an ebook reader.</mrk><mrk mid="2" mtype="seg"> We used Julian Smart’s free tool eCub <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[16]" Self="htss-30"&gt;&lt;Content&gt;</bpt>[16]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> to simply and automatically generate the ePub wrapper and the table of contents.</mrk><mrk mid="3" mtype="seg"> The only custom development we did was to create a CSS stylesheet for the ebook so that headings and paragraph indents looked the way we wanted.</mrk><mrk mid="4" mtype="seg"> If you start with XHTML content, creating ePub is almost <it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="8" ctype="x-CharacterStyleRange">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/i"&gt;&lt;Content&gt;</bpt>too easy.<ept id="8">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-71" xml:space="preserve">
<source xml:lang="en">Possibilities for evolution</source>
<seg-source><mrk mid="0" mtype="seg">Possibilities for evolution</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Possibilities for evolution</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-72" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Ironically, this production workflow is essentially the same as the one developed at Coach House Press in the mid-1980s by Kate Hamilton and Nelson Adams. <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[17]" Self="htss-32"&gt;&lt;Content&gt;</bpt>[17]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Then, content was developed in SGML (the Coach House had early involvement in SGML editing software); a set of custom transformation scripts converted the content into a format usable directly by the QuarkXPress of the day. Hamilton and Adams remarked that their goal was to keep as much of the editorial process in the SGML format as possible, rather than making changes in the resulting Quark documents; this ensures that the source files, rather than the layout files, are the final, archival versions.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Ironically, this production workflow is essentially the same as the one developed at Coach House Press in the mid-1980s by Kate Hamilton and Nelson Adams.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[17]" Self="htss-32"&gt;&lt;Content&gt;</bpt>[17]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Then, content was developed in SGML (the Coach House had early involvement in SGML editing software); a set of custom transformation scripts converted the content into a format usable directly by the QuarkXPress of the day.</mrk><mrk mid="2" mtype="seg"> Hamilton and Adams remarked that their goal was to keep as much of the editorial process in the SGML format as possible, rather than making changes in the resulting Quark documents; this ensures that the source files, rather than the layout files, are the final, archival versions.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it>Ironically, this production workflow is essentially the same as the one developed at Coach House Press in the mid-1980s by Kate Hamilton and Nelson Adams.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-cs_LINK">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/link"&gt;&lt;HyperlinkTextSource Hidden="false" Name="[17]" Self="htss-32"&gt;&lt;Content&gt;</bpt>[17]<ept id="3">&lt;/Content&gt;&lt;/HyperlinkTextSource&gt;&lt;/CharacterStyleRange&gt;</ept><it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="open">&lt;CharacterStyleRange AppliedCharacterStyle="CharacterStyle/[No character style]"&gt;&lt;Content&gt;</it> Then, content was developed in SGML (the Coach House had early involvement in SGML editing software); a set of custom transformation scripts converted the content into a format usable directly by the QuarkXPress of the day.</mrk><mrk mid="2" mtype="seg"> Hamilton and Adams remarked that their goal was to keep as much of the editorial process in the SGML format as possible, rather than making changes in the resulting Quark documents; this ensures that the source files, rather than the layout files, are the final, archival versions.<it id="6" ctype="x-cs_NOCHARACTERSTYLE" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;&lt;Br/&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-73" xml:space="preserve">
<source xml:lang="en">The basic components of the process are the same, but there is one profound difference: today, we are able to put the process together using nothing but standard, relatively ubiquitous web tools: the web itself as an editing and content management environment; standard web scripting tools for the conversion process, and the well-documented IDML file format in order to integrate the layout tool. Hamilton and Adams were out on a limb, in comparison, building it entirely themselves, and having little or no support from the outside world. Still, they were able to make this work then; how much simpler and easier it is to accomplish today!</source>
<seg-source><mrk mid="0" mtype="seg">The basic components of the process are the same, but there is one profound difference: today, we are able to put the process together using nothing but standard, relatively ubiquitous web tools: the web itself as an editing and content management environment; standard web scripting tools for the conversion process, and the well-documented IDML file format in order to integrate the layout tool.</mrk><mrk mid="1" mtype="seg"> Hamilton and Adams were out on a limb, in comparison, building it entirely themselves, and having little or no support from the outside world.</mrk><mrk mid="2" mtype="seg"> Still, they were able to make this work then; how much simpler and easier it is to accomplish today!</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The basic components of the process are the same, but there is one profound difference: today, we are able to put the process together using nothing but standard, relatively ubiquitous web tools: the web itself as an editing and content management environment; standard web scripting tools for the conversion process, and the well-documented IDML file format in order to integrate the layout tool.</mrk><mrk mid="1" mtype="seg"> Hamilton and Adams were out on a limb, in comparison, building it entirely themselves, and having little or no support from the outside world.</mrk><mrk mid="2" mtype="seg"> Still, they were able to make this work then; how much simpler and easier it is to accomplish today!</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-74" xml:space="preserve">
<source xml:lang="en">Notes</source>
<seg-source><mrk mid="0" mtype="seg">Notes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Notes</mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-75" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>1. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Michael Tamblyn, “Six Projects That Could Change Publishing for the Better,” Booknet Canada Tech Forum. March 19, 2009. See http://www.quillandquire.com/blog/index.php/2009/03/20/michael-tamblyns-six-good-ideas-for-the-future-of-publishing/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>1.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Michael Tamblyn, “Six Projects That Could Change Publishing for the Better,” Booknet Canada Tech Forum.</mrk><mrk mid="2" mtype="seg"> March 19, 2009.</mrk><mrk mid="3" mtype="seg"> See http://www.quillandquire.com/blog/index.php/2009/03/20/michael-tamblyns-six-good-ideas-for-the-future-of-publishing/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>1.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Michael Tamblyn, “Six Projects That Could Change Publishing for the Better,” Booknet Canada Tech Forum.</mrk><mrk mid="2" mtype="seg"> March 19, 2009.</mrk><mrk mid="3" mtype="seg"> See http://www.quillandquire.com/blog/index.php/2009/03/20/michael-tamblyns-six-good-ideas-for-the-future-of-publishing/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-76" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>2. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Text Encoding Initiative. See http://www.tei-c.org/index.xml. An example document is at http://www.sbl-site.org/assets/U16/U16.xml or http://www.perseus.tufts.edu/hopper/xmlchunk.jsp?doc=Perseus%3Atext%3A2001.05.0168%3Achapter%3D11%3Apage%3D78.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>2.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Text Encoding Initiative.</mrk><mrk mid="2" mtype="seg"> See http://www.tei-c.org/index.xml.</mrk><mrk mid="3" mtype="seg"> An example document is at http://www.sbl-site.org/assets/U16/U16.xml or http://www.perseus.tufts.edu/hopper/xmlchunk.jsp?doc=Perseus%3Atext%3A2001.05.0168%3Achapter%3D11%3Apage%3D78.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>2.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Text Encoding Initiative.</mrk><mrk mid="2" mtype="seg"> See http://www.tei-c.org/index.xml.</mrk><mrk mid="3" mtype="seg"> An example document is at http://www.sbl-site.org/assets/U16/U16.xml or http://www.perseus.tufts.edu/hopper/xmlchunk.jsp?doc=Perseus%3Atext%3A2001.05.0168%3Achapter%3D11%3Apage%3D78.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-77" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>3. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>See http://toc.oreilly.com/startwithxml/.<ept id="3">&lt;/Content&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>3.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>See http://toc.oreilly.com/startwithxml/.<ept id="3">&lt;/Content&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>3.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>See http://toc.oreilly.com/startwithxml/.<ept id="3">&lt;/Content&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-78" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>4. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>XHTML is a “reformulation of HTML 4 in XML 1.0.” See http://www.w3.org/TR/xhtml1/.<ept id="3">&lt;/Content&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>4.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>XHTML is a “reformulation of HTML 4 in XML 1.0.” See http://www.w3.org/TR/xhtml1/.<ept id="3">&lt;/Content&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>4.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>XHTML is a “reformulation of HTML 4 in XML 1.0.” See http://www.w3.org/TR/xhtml1/.<ept id="3">&lt;/Content&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-79" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>5. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DocBook is an XML schema and document type for technical manuals, though it is often used for a much wider variety of publications. See http://www.docbook.org/whatis.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>5.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DocBook is an XML schema and document type for technical manuals, though it is often used for a much wider variety of publications.</mrk><mrk mid="2" mtype="seg"> See http://www.docbook.org/whatis.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>5.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DocBook is an XML schema and document type for technical manuals, though it is often used for a much wider variety of publications.</mrk><mrk mid="2" mtype="seg"> See http://www.docbook.org/whatis.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-80" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>6. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DITA is the “Darwin Information Typing Architecture, ... an XML-based, end-to-end architecture for authoring, producing, and delivering technical information.” See http://www.ibm.com/developerworks/xml/library/x-dita1/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>6.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DITA is the “Darwin Information Typing Architecture, ...</mrk><mrk mid="2" mtype="seg"> an XML-based, end-to-end architecture for authoring, producing, and delivering technical information.” See http://www.ibm.com/developerworks/xml/library/x-dita1/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>6.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>DITA is the “Darwin Information Typing Architecture, ...</mrk><mrk mid="2" mtype="seg"> an XML-based, end-to-end architecture for authoring, producing, and delivering technical information.” See http://www.ibm.com/developerworks/xml/library/x-dita1/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-81" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>7. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Microformats “are a set of simple, open data formats built upon existing and widely adopted standards.” Microformats are based on existing web technologies. See http://microformats.org/about/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>7.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Microformats “are a set of simple, open data formats built upon existing and widely adopted standards.” Microformats are based on existing web technologies.</mrk><mrk mid="2" mtype="seg"> See http://microformats.org/about/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>7.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Microformats “are a set of simple, open data formats built upon existing and widely adopted standards.” Microformats are based on existing web technologies.</mrk><mrk mid="2" mtype="seg"> See http://microformats.org/about/.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-82" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>8. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Wikipedia’s “List of Markup Languages” page: http://en.wikipedia.org/wiki/List_of_XML_markup_languages.<ept id="3">&lt;/Content&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>8.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Wikipedia’s “List of Markup Languages” page: http://en.wikipedia.org/wiki/List_of_XML_markup_languages.<ept id="3">&lt;/Content&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>8.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Wikipedia’s “List of Markup Languages” page: http://en.wikipedia.org/wiki/List_of_XML_markup_languages.<ept id="3">&lt;/Content&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-83" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>9. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>In 2006, the Master of Publishing project group “Beehive” prototyped a system for semi-automatically producing publishers’ catalogues directly from ONIX metadata. The system transformed ONIX to a much simpler data set, then used the rudimentary XML import in Adobe InDesign CS2 to flow the content into templated catalogue pages. See http://thinkubator.ccsp.sfu.ca/TechProjects2006XMLCatalogProduction. In 2007, the “FunnelWeb” project group prototyped a system to import XHTML web content into InDesign CS2. Both projects were limited by the constraints imposed by InDesign’s XML import feature; the catalogue production idea seems to have been a better fit with what Adobe had in mind here. See http://thinkubator.ccsp.sfu.ca/FunnelWeb.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>9.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>In 2006, the Master of Publishing project group “Beehive” prototyped a system for semi-automatically producing publishers’ catalogues directly from ONIX metadata.</mrk><mrk mid="2" mtype="seg"> The system transformed ONIX to a much simpler data set, then used the rudimentary XML import in Adobe InDesign CS2 to flow the content into templated catalogue pages.</mrk><mrk mid="3" mtype="seg"> See http://thinkubator.ccsp.sfu.ca/TechProjects2006XMLCatalogProduction.</mrk><mrk mid="4" mtype="seg"> In 2007, the “FunnelWeb” project group prototyped a system to import XHTML web content into InDesign CS2.</mrk><mrk mid="5" mtype="seg"> Both projects were limited by the constraints imposed by InDesign’s XML import feature; the catalogue production idea seems to have been a better fit with what Adobe had in mind here.</mrk><mrk mid="6" mtype="seg"> See http://thinkubator.ccsp.sfu.ca/FunnelWeb.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>9.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>In 2006, the Master of Publishing project group “Beehive” prototyped a system for semi-automatically producing publishers’ catalogues directly from ONIX metadata.</mrk><mrk mid="2" mtype="seg"> The system transformed ONIX to a much simpler data set, then used the rudimentary XML import in Adobe InDesign CS2 to flow the content into templated catalogue pages.</mrk><mrk mid="3" mtype="seg"> See http://thinkubator.ccsp.sfu.ca/TechProjects2006XMLCatalogProduction.</mrk><mrk mid="4" mtype="seg"> In 2007, the “FunnelWeb” project group prototyped a system to import XHTML web content into InDesign CS2.</mrk><mrk mid="5" mtype="seg"> Both projects were limited by the constraints imposed by InDesign’s XML import feature; the catalogue production idea seems to have been a better fit with what Adobe had in mind here.</mrk><mrk mid="6" mtype="seg"> See http://thinkubator.ccsp.sfu.ca/FunnelWeb.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-84" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>10. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>For a gentle introduction to CS4’s IDML language, see “Tim Cole’s InDesign BackChannel.” October 14, 2008. See http://blogs.adobe.com/indesignchannel/2008/10/the_most_important_new_feature.html.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>10.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>For a gentle introduction to CS4’s IDML language, see “Tim Cole’s InDesign BackChannel.” October 14, 2008.</mrk><mrk mid="2" mtype="seg"> See http://blogs.adobe.com/indesignchannel/2008/10/the_most_important_new_feature.html.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>10.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>For a gentle introduction to CS4’s IDML language, see “Tim Cole’s InDesign BackChannel.” October 14, 2008.</mrk><mrk mid="2" mtype="seg"> See http://blogs.adobe.com/indesignchannel/2008/10/the_most_important_new_feature.html.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-85" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>11. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>A more open ended discussion of the programmability of the CS4 suite is provided by Adobe’s Gary Cosimini in a presentation titled “Dynamic Publishing Solutions” from the Booknet Canada Tech Forum. March 2009. See http://blip.tv/file/2042790.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>11.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>A more open ended discussion of the programmability of the CS4 suite is provided by Adobe’s Gary Cosimini in a presentation titled “Dynamic Publishing Solutions” from the Booknet Canada Tech Forum.</mrk><mrk mid="2" mtype="seg"> March 2009.</mrk><mrk mid="3" mtype="seg"> See http://blip.tv/file/2042790.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>11.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>A more open ended discussion of the programmability of the CS4 suite is provided by Adobe’s Gary Cosimini in a presentation titled “Dynamic Publishing Solutions” from the Booknet Canada Tech Forum.</mrk><mrk mid="2" mtype="seg"> March 2009.</mrk><mrk mid="3" mtype="seg"> See http://blip.tv/file/2042790.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-86" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>12. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The “Toggle Systems” project culminated April 3, 2009. Project documentation can be found at http://thinkubator.ccsp.sfu.ca/TechProjects2009StartWithWWWXMLWorkflow.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>12.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The “Toggle Systems” project culminated April 3, 2009.</mrk><mrk mid="2" mtype="seg"> Project documentation can be found at http://thinkubator.ccsp.sfu.ca/TechProjects2009StartWithWWWXMLWorkflow.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>12.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The “Toggle Systems” project culminated April 3, 2009.</mrk><mrk mid="2" mtype="seg"> Project documentation can be found at http://thinkubator.ccsp.sfu.ca/TechProjects2009StartWithWWWXMLWorkflow.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-87" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>13. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Rowland Lorimer, John W. Maxwell, and Gillian Shoichet, eds. 2005. Book Publishing 1. Vancouver: CCSP Press. See http://www.ccsppress.org/Titles/BookPublishing1 and, for the XHTML versions, http://thinkubator.ccsp.sfu.ca/wikis/bp1.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>13.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Rowland Lorimer, John W. Maxwell, and Gillian Shoichet, eds.</mrk><mrk mid="2" mtype="seg"> 2005.</mrk><mrk mid="3" mtype="seg"> Book Publishing 1.</mrk><mrk mid="4" mtype="seg"> Vancouver: CCSP Press.</mrk><mrk mid="5" mtype="seg"> See http://www.ccsppress.org/Titles/BookPublishing1 and, for the XHTML versions, http://thinkubator.ccsp.sfu.ca/wikis/bp1.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>13.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Rowland Lorimer, John W. Maxwell, and Gillian Shoichet, eds.</mrk><mrk mid="2" mtype="seg"> 2005.</mrk><mrk mid="3" mtype="seg"> Book Publishing 1.</mrk><mrk mid="4" mtype="seg"> Vancouver: CCSP Press.</mrk><mrk mid="5" mtype="seg"> See http://www.ccsppress.org/Titles/BookPublishing1 and, for the XHTML versions, http://thinkubator.ccsp.sfu.ca/wikis/bp1.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-88" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>14. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>For more information about Adobe’s InCopy software, see http://www.adobe.com/products/incopy/.<ept id="3">&lt;/Content&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>14.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>For more information about Adobe’s InCopy software, see http://www.adobe.com/products/incopy/.<ept id="3">&lt;/Content&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>14.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>For more information about Adobe’s InCopy software, see http://www.adobe.com/products/incopy/.<ept id="3">&lt;/Content&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-89" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>15. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The XHTML-to-IDML script can be found at http://thinkubator.ccsp.sfu.ca/wikis/xmlProduction/xhtml2icml.xsl. It will run in any standard xslt processor. Note that the script has not been extensively tested with content from different sources. Nevertheless, it is a working prototype that can serve as  a first step toward developing production-ready systems.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>15.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The XHTML-to-IDML script can be found at http://thinkubator.ccsp.sfu.ca/wikis/xmlProduction/xhtml2icml.xsl.</mrk><mrk mid="2" mtype="seg"> It will run in any standard xslt processor.</mrk><mrk mid="3" mtype="seg"> Note that the script has not been extensively tested with content from different sources.</mrk><mrk mid="4" mtype="seg"> Nevertheless, it is a working prototype that can serve as  a first step toward developing production-ready systems.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>15.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>The XHTML-to-IDML script can be found at http://thinkubator.ccsp.sfu.ca/wikis/xmlProduction/xhtml2icml.xsl.</mrk><mrk mid="2" mtype="seg"> It will run in any standard xslt processor.</mrk><mrk mid="3" mtype="seg"> Note that the script has not been extensively tested with content from different sources.</mrk><mrk mid="4" mtype="seg"> Nevertheless, it is a working prototype that can serve as  a first step toward developing production-ready systems.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-90" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>16. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Julian Smart’s eCub software is available here: http://www.juliansmart.com/ecub.<ept id="3">&lt;/Content&gt;</ept></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>16.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Julian Smart’s eCub software is available here: http://www.juliansmart.com/ecub.<ept id="3">&lt;/Content&gt;</ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>16.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><bpt id="3" ctype="x-code">&lt;Content&gt;</bpt>Julian Smart’s eCub software is available here: http://www.juliansmart.com/ecub.<ept id="3">&lt;/Content&gt;</ept></mrk></target>
</trans-unit>
<trans-unit id="xhtml2icml_default_story-91" xml:space="preserve">
<source xml:lang="en"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>17. <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Liora Alschuler. 1995. ABCD…SGML. A Users’ Guide to Structured Information. Boston: International Thomson Computer Press.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></source>
<seg-source><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>17.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Liora Alschuler.</mrk><mrk mid="2" mtype="seg"> 1995.</mrk><mrk mid="3" mtype="seg"> ABCD…SGML.</mrk><mrk mid="4" mtype="seg"> A Users’ Guide to Structured Information.</mrk><mrk mid="5" mtype="seg"> Boston: International Thomson Computer Press.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><it id="1" ctype="x-CharacterStyleRange" pos="open">&lt;CharacterStyleRange&gt;&lt;Content&gt;</it>17.</mrk><mrk mid="1" mtype="seg"> <it id="1" ctype="x-CharacterStyleRange" pos="close">&lt;/Content&gt;&lt;/CharacterStyleRange&gt;</it><it id="3" ctype="x-code" pos="open">&lt;Content&gt;</it>Liora Alschuler.</mrk><mrk mid="2" mtype="seg"> 1995.</mrk><mrk mid="3" mtype="seg"> ABCD…SGML.</mrk><mrk mid="4" mtype="seg"> A Users’ Guide to Structured Information.</mrk><mrk mid="5" mtype="seg"> Boston: International Thomson Computer Press.<it id="3" ctype="x-code" pos="close">&lt;/Content&gt;</it></mrk></target>
</trans-unit>
</group>
</group>
</body>
</file>
</xliff>
